[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/aorai/generate_assigns_bts1290.i (no preprocessing)
[aorai] Welcome to the Aorai plugin
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing /tmp/aorai_generate_assigns_bts12900.i (no preprocessing)
[wp] Collecting axiomatic usage
[wp] warning: Missing RTE guards
[wp] [Qed] Goal typed_main_post_func_assign_part2 : Valid
[wp] [Qed] Goal typed_main_post_func_assign_part1 : Valid
[wp] [Qed] Goal typed_main_post_func_post_2 : Valid
[wp] [Qed] Goal typed_main_post_func_post : Valid
[wp] [Qed] Goal typed_main_post_func_buch_state_S_out_post : Valid
[wp] [Qed] Goal typed_main_post_func_buch_state_S_in_post : Valid
[wp] [Qed] Goal typed_main_post_func_assign_part4 : Valid
[wp] [Qed] Goal typed_main_post_func_assign_part3 : Valid
[wp] [Qed] Goal typed_main_pre_func_assign_part2 : Valid
[wp] [Qed] Goal typed_main_pre_func_assign_part1 : Valid
[wp] [Qed] Goal typed_main_pre_func_post_2 : Valid
[wp] [Qed] Goal typed_main_pre_func_post : Valid
[wp] [Qed] Goal typed_main_pre_func_buch_state_S_out_post : Valid
[wp] [Qed] Goal typed_main_pre_func_buch_state_S_in_post : Valid
[wp] [Qed] Goal typed_main_pre_func_assign_part3 : Valid
/* Generated by Frama-C */
enum aorai_ListOper {
    op_main = 0
};
enum aorai_OpStatusList {
    aorai_Terminated = 1,
    aorai_Called = 0
};
/*@ ghost enum aorai_ListOper aorai_CurOperation = op_main; */
/*@ ghost enum aorai_OpStatusList aorai_CurOpStatus = aorai_Called; */
/*@ ghost int S = 1; */
/*@ ensures aorai_CurOpStatus ≡ aorai_Called;
    ensures aorai_CurOperation ≡ op_main;
    assigns aorai_CurOpStatus, aorai_CurOperation, S;
    
    behavior buch_state_S_in:
      assumes 1 ≡ S;
      ensures 1 ≡ S;
    
    behavior buch_state_S_out:
      assumes 0 ≡ S;
      ensures 0 ≡ S;
 */
void main_pre_func(void)
{
  /*@ ghost int S_tmp; */
  aorai_CurOpStatus = aorai_Called;
  aorai_CurOperation = op_main;
  S_tmp = S;
  if (S == 1) S_tmp = 1; else S_tmp = 0;
  S = S_tmp;
  return;
}

/*@ requires 1 ≡ S;
    ensures aorai_CurOpStatus ≡ aorai_Terminated;
    ensures aorai_CurOperation ≡ op_main;
    assigns aorai_CurOpStatus, aorai_CurOperation, S;
    
    behavior buch_state_S_in:
      assumes 1 ≡ S;
      ensures 1 ≡ S;
    
    behavior buch_state_S_out:
      assumes 0 ≡ S;
      ensures 0 ≡ S;
 */
void main_post_func(void)
{
  /*@ ghost int S_tmp; */
  aorai_CurOpStatus = aorai_Terminated;
  aorai_CurOperation = op_main;
  S_tmp = S;
  if (S == 1) S_tmp = 1; else S_tmp = 0;
  S = S_tmp;
  return;
}

/*@ requires 1 ≡ S;
    
    behavior Buchi_property_behavior:
      ensures \true;
      ensures 1 ≡ S;
 */
void main(void)
{
  int aorai_Loop_Init_11;
  int i;
  main_pre_func();
  i = 0;
  /*@ ghost aorai_Loop_Init_11 = 1; */
  aorai_loop_11:
    /*@ loop invariant Aorai: 1 ≡ S;
        loop assigns i, aorai_Loop_Init_11, aorai_CurOpStatus,
                     aorai_CurOperation, S;
        loop assigns aorai_Loop_Init_11 \from \nothing;
    */
    while (1) {
      if (! (i < 10)) goto while_0_break;
      /*@ ghost aorai_Loop_Init_11 = 0; */
      i ++;
    }
  while_0_break: ;
  main_post_func();
  return;
}


