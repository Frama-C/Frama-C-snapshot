[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/aorai/single_call.i (no preprocessing)
[aorai] Welcome to the Aorai plugin
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing /tmp/aorai_single_call0.i (no preprocessing)
[wp] Collecting axiomatic usage
[wp] warning: Missing RTE guards
[wp] [Qed] Goal typed_main_post_func_assign_part2 : Valid
[wp] [Qed] Goal typed_main_post_func_assign_part1 : Valid
[wp] [Qed] Goal typed_main_post_func_post_2 : Valid
[wp] [Qed] Goal typed_main_post_func_post : Valid
[wp] [Qed] Goal typed_main_post_func_assign_part6 : Valid
[wp] [Qed] Goal typed_main_post_func_assign_part5 : Valid
[wp] [Qed] Goal typed_main_post_func_assign_part4 : Valid
[wp] [Qed] Goal typed_main_post_func_assign_part3 : Valid
[wp] [Qed] Goal typed_main_post_func_buch_state_Sf_in_post : Valid
[wp] [Qed] Goal typed_main_post_func_buch_state_S0_out_post : Valid
[wp] [Qed] Goal typed_main_post_func_assign_part8 : Valid
[wp] [Qed] Goal typed_main_post_func_assign_part7 : Valid
[wp] [Qed] Goal typed_main_post_func_buch_state_aorai_intermediate_state_out_post : Valid
[wp] [Qed] Goal typed_main_post_func_buch_state_Sf_out_post : Valid
[wp] [Qed] Goal typed_main_pre_func_assign_part2 : Valid
[wp] [Qed] Goal typed_main_pre_func_assign_part1 : Valid
[wp] [Qed] Goal typed_main_pre_func_post_2 : Valid
[wp] [Qed] Goal typed_main_pre_func_post : Valid
[wp] [Qed] Goal typed_main_pre_func_assign_part6 : Valid
[wp] [Qed] Goal typed_main_pre_func_assign_part5 : Valid
[wp] [Qed] Goal typed_main_pre_func_assign_part4 : Valid
[wp] [Qed] Goal typed_main_pre_func_assign_part3 : Valid
[wp] [Qed] Goal typed_main_pre_func_buch_state_aorai_intermediate_state_in_post : Valid
[wp] [Qed] Goal typed_main_pre_func_buch_state_Sf_out_post : Valid
[wp] [Qed] Goal typed_main_pre_func_buch_state_S0_out_post : Valid
[wp] [Qed] Goal typed_main_pre_func_assign_part7 : Valid
[wp] [Qed] Goal typed_main_pre_func_buch_state_aorai_intermediate_state_out_post : Valid
/* Generated by Frama-C */
enum aorai_ListOper {
    op_main = 0
};
enum aorai_OpStatusList {
    aorai_Terminated = 1,
    aorai_Called = 0
};
/*@ ghost enum aorai_ListOper aorai_CurOperation = op_main; */
/*@ ghost enum aorai_OpStatusList aorai_CurOpStatus = aorai_Called; */
/*@ ghost int S0 = 1; */
/*@ ghost int Sf = 0; */
/*@ ghost int aorai_intermediate_state = 0; */
/*@ ensures aorai_CurOpStatus ≡ aorai_Called;
    ensures aorai_CurOperation ≡ op_main;
    assigns aorai_CurOpStatus, aorai_CurOperation, S0, Sf,
            aorai_intermediate_state;
    
    behavior buch_state_S0_out:
      ensures 0 ≡ S0;
    
    behavior buch_state_Sf_out:
      ensures 0 ≡ Sf;
    
    behavior buch_state_aorai_intermediate_state_in:
      assumes 1 ≡ S0;
      ensures 1 ≡ aorai_intermediate_state;
    
    behavior buch_state_aorai_intermediate_state_out:
      assumes 0 ≡ S0;
      ensures 0 ≡ aorai_intermediate_state;
 */
void main_pre_func(void)
{
  /*@ ghost int S0_tmp; */
  /*@ ghost int Sf_tmp; */
  /*@ ghost int aorai_intermediate_state_tmp; */
  aorai_CurOpStatus = aorai_Called;
  aorai_CurOperation = op_main;
  S0_tmp = S0;
  Sf_tmp = Sf;
  aorai_intermediate_state_tmp = aorai_intermediate_state;
  if (S0 == 1) aorai_intermediate_state_tmp = 1;
  else aorai_intermediate_state_tmp = 0;
  Sf_tmp = 0;
  S0_tmp = 0;
  S0 = S0_tmp;
  Sf = Sf_tmp;
  aorai_intermediate_state = aorai_intermediate_state_tmp;
  return;
}

/*@ requires 1 ≡ aorai_intermediate_state ∧ 0 ≡ S0 ∧ 0 ≡ Sf;
    ensures aorai_CurOpStatus ≡ aorai_Terminated;
    ensures aorai_CurOperation ≡ op_main;
    assigns aorai_CurOpStatus, aorai_CurOperation, S0, Sf,
            aorai_intermediate_state;
    
    behavior buch_state_S0_out:
      ensures 0 ≡ S0;
    
    behavior buch_state_Sf_in:
      assumes 1 ≡ aorai_intermediate_state;
      ensures 1 ≡ Sf;
    
    behavior buch_state_Sf_out:
      assumes 0 ≡ aorai_intermediate_state;
      ensures 0 ≡ Sf;
    
    behavior buch_state_aorai_intermediate_state_out:
      ensures 0 ≡ aorai_intermediate_state;
 */
void main_post_func(int res)
{
  /*@ ghost int S0_tmp; */
  /*@ ghost int Sf_tmp; */
  /*@ ghost int aorai_intermediate_state_tmp; */
  aorai_CurOpStatus = aorai_Terminated;
  aorai_CurOperation = op_main;
  S0_tmp = S0;
  Sf_tmp = Sf;
  aorai_intermediate_state_tmp = aorai_intermediate_state;
  aorai_intermediate_state_tmp = 0;
  if (aorai_intermediate_state == 1) Sf_tmp = 1; else Sf_tmp = 0;
  S0_tmp = 0;
  S0 = S0_tmp;
  Sf = Sf_tmp;
  aorai_intermediate_state = aorai_intermediate_state_tmp;
  return;
}

/*@ requires 1 ≡ S0 ∧ 0 ≡ Sf ∧ 0 ≡ aorai_intermediate_state;
    
    behavior aorai_acceptance:
      ensures 1 ≡ Sf;
    
    behavior Buchi_property_behavior:
      ensures 0 ≡ S0 ∧ 0 ≡ aorai_intermediate_state;
      ensures 1 ≡ Sf;
 */
int main(void)
{
  int __retres;
  main_pre_func();
  __retres = 0;
  main_post_func(__retres);
  return __retres;
}


