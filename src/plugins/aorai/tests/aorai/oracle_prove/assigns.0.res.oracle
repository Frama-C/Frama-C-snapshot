[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/aorai/assigns.c (with preprocessing)
[aorai] Welcome to the Aorai plugin
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing /tmp/aorai_assigns0.i (no preprocessing)
[wp] Collecting axiomatic usage
[wp] warning: Missing RTE guards
[wp] [Qed] Goal typed_f_post_func_assign_part02 : Valid
[wp] [Qed] Goal typed_f_post_func_assign_part01 : Valid
[wp] [Qed] Goal typed_f_post_func_post_2 : Valid
[wp] [Qed] Goal typed_f_post_func_post : Valid
[wp] [Qed] Goal typed_f_post_func_assign_part06 : Valid
[wp] [Qed] Goal typed_f_post_func_assign_part05 : Valid
[wp] [Qed] Goal typed_f_post_func_assign_part04 : Valid
[wp] [Qed] Goal typed_f_post_func_assign_part03 : Valid
[wp] [Qed] Goal typed_f_post_func_assign_part10 : Valid
[wp] [Qed] Goal typed_f_post_func_assign_part09 : Valid
[wp] [Qed] Goal typed_f_post_func_assign_part08 : Valid
[wp] [Qed] Goal typed_f_post_func_assign_part07 : Valid
[wp] [Qed] Goal typed_f_post_func_buch_state_S2_out_post : Valid
[wp] [Qed] Goal typed_f_post_func_buch_state_S1_out_post : Valid
[wp] [Qed] Goal typed_f_post_func_assign_part12 : Valid
[wp] [Qed] Goal typed_f_post_func_assign_part11 : Valid
[wp] [Qed] Goal typed_f_post_func_buch_state_in_main_out_post : Valid
[wp] [Qed] Goal typed_f_post_func_buch_state_in_main_in_post : Valid
[wp] [Qed] Goal typed_f_post_func_buch_state_Sf_out_post : Valid
[wp] [Qed] Goal typed_f_post_func_buch_state_S_in_f_out_post : Valid
[wp] [Qed] Goal typed_f_pre_func_assign_part02 : Valid
[wp] [Qed] Goal typed_f_pre_func_assign_part01 : Valid
[wp] [Qed] Goal typed_f_pre_func_post_2 : Valid
[wp] [Qed] Goal typed_f_pre_func_post : Valid
[wp] [Qed] Goal typed_f_pre_func_assign_part06 : Valid
[wp] [Qed] Goal typed_f_pre_func_assign_part05 : Valid
[wp] [Qed] Goal typed_f_pre_func_assign_part04 : Valid
[wp] [Qed] Goal typed_f_pre_func_assign_part03 : Valid
[wp] [Qed] Goal typed_f_pre_func_assign_part10 : Valid
[wp] [Qed] Goal typed_f_pre_func_assign_part09 : Valid
[wp] [Qed] Goal typed_f_pre_func_assign_part08 : Valid
[wp] [Qed] Goal typed_f_pre_func_assign_part07 : Valid
[wp] [Qed] Goal typed_f_pre_func_buch_state_S_in_f_in_post : Valid
[wp] [Qed] Goal typed_f_pre_func_buch_state_S2_out_post : Valid
[wp] [Qed] Goal typed_f_pre_func_buch_state_S1_out_post : Valid
[wp] [Qed] Goal typed_f_pre_func_assign_part11 : Valid
[wp] [Qed] Goal typed_f_pre_func_buch_state_in_main_out_post : Valid
[wp] [Qed] Goal typed_f_pre_func_buch_state_Sf_out_post : Valid
[wp] [Qed] Goal typed_f_pre_func_buch_state_S_in_f_out_post : Valid
[wp] [Qed] Goal typed_main_post_func_assign_part02 : Valid
[wp] [Qed] Goal typed_main_post_func_assign_part01 : Valid
[wp] [Qed] Goal typed_main_post_func_post_2 : Valid
[wp] [Qed] Goal typed_main_post_func_post : Valid
[wp] [Qed] Goal typed_main_post_func_assign_part06 : Valid
[wp] [Qed] Goal typed_main_post_func_assign_part05 : Valid
[wp] [Qed] Goal typed_main_post_func_assign_part04 : Valid
[wp] [Qed] Goal typed_main_post_func_assign_part03 : Valid
[wp] [Qed] Goal typed_main_post_func_assign_part10 : Valid
[wp] [Qed] Goal typed_main_post_func_assign_part09 : Valid
[wp] [Qed] Goal typed_main_post_func_assign_part08 : Valid
[wp] [Qed] Goal typed_main_post_func_assign_part07 : Valid
[wp] [Qed] Goal typed_main_post_func_buch_state_S2_in_post : Valid
[wp] [Qed] Goal typed_main_post_func_buch_state_S1_out_post : Valid
[wp] [Qed] Goal typed_main_post_func_assign_part12 : Valid
[wp] [Qed] Goal typed_main_post_func_assign_part11 : Valid
[wp] [Qed] Goal typed_main_post_func_buch_state_in_main_out_post : Valid
[wp] [Qed] Goal typed_main_post_func_buch_state_Sf_out_post : Valid
[wp] [Qed] Goal typed_main_post_func_buch_state_S_in_f_out_post : Valid
[wp] [Qed] Goal typed_main_post_func_buch_state_S2_out_post : Valid
[wp] [Qed] Goal typed_main_pre_func_assign_part02 : Valid
[wp] [Qed] Goal typed_main_pre_func_assign_part01 : Valid
[wp] [Qed] Goal typed_main_pre_func_post_2 : Valid
[wp] [Qed] Goal typed_main_pre_func_post : Valid
[wp] [Qed] Goal typed_main_pre_func_assign_part06 : Valid
[wp] [Qed] Goal typed_main_pre_func_assign_part05 : Valid
[wp] [Qed] Goal typed_main_pre_func_assign_part04 : Valid
[wp] [Qed] Goal typed_main_pre_func_assign_part03 : Valid
[wp] [Qed] Goal typed_main_pre_func_assign_part10 : Valid
[wp] [Qed] Goal typed_main_pre_func_assign_part09 : Valid
[wp] [Qed] Goal typed_main_pre_func_assign_part08 : Valid
[wp] [Qed] Goal typed_main_pre_func_assign_part07 : Valid
[wp] [Qed] Goal typed_main_pre_func_buch_state_S_in_f_out_post : Valid
[wp] [Qed] Goal typed_main_pre_func_buch_state_S2_out_post : Valid
[wp] [Qed] Goal typed_main_pre_func_buch_state_S1_out_post : Valid
[wp] [Qed] Goal typed_main_pre_func_assign_part11 : Valid
[wp] [Qed] Goal typed_main_pre_func_buch_state_in_main_out_post : Valid
[wp] [Qed] Goal typed_main_pre_func_buch_state_Sf_out_post : Valid
[wp] [Qed] Goal typed_main_pre_func_buch_state_Sf_in_post : Valid
/* Generated by Frama-C */
enum aorai_ListOper {
    op_f = 1,
    op_main = 0
};
enum aorai_OpStatusList {
    aorai_Terminated = 1,
    aorai_Called = 0
};
int X;
/*@ ghost enum aorai_ListOper aorai_CurOperation = op_main; */
/*@ ghost enum aorai_OpStatusList aorai_CurOpStatus = aorai_Called; */
/*@ ghost int S1 = 1; */
/*@ ghost int S2 = 0; */
/*@ ghost int S_in_f = 0; */
/*@ ghost int Sf = 0; */
/*@ ghost int in_main = 0; */
/*@ ensures aorai_CurOpStatus ≡ aorai_Called;
    ensures aorai_CurOperation ≡ op_f;
    assigns aorai_CurOpStatus, aorai_CurOperation, S1, S2, S_in_f, Sf,
            in_main;
    
    behavior buch_state_S1_out:
      ensures 0 ≡ S1;
    
    behavior buch_state_S2_out:
      ensures 0 ≡ S2;
    
    behavior buch_state_S_in_f_in:
      assumes 1 ≡ Sf;
      ensures 1 ≡ S_in_f;
    
    behavior buch_state_S_in_f_out:
      assumes 0 ≡ Sf;
      ensures 0 ≡ S_in_f;
    
    behavior buch_state_Sf_out:
      ensures 0 ≡ Sf;
    
    behavior buch_state_in_main_out:
      ensures 0 ≡ in_main;
 */
void f_pre_func(void)
{
  /*@ ghost int S1_tmp; */
  /*@ ghost int S2_tmp; */
  /*@ ghost int S_in_f_tmp; */
  /*@ ghost int Sf_tmp; */
  /*@ ghost int in_main_tmp; */
  aorai_CurOpStatus = aorai_Called;
  aorai_CurOperation = op_f;
  S1_tmp = S1;
  S2_tmp = S2;
  S_in_f_tmp = S_in_f;
  Sf_tmp = Sf;
  in_main_tmp = in_main;
  in_main_tmp = 0;
  Sf_tmp = 0;
  if (Sf == 1) S_in_f_tmp = 1; else S_in_f_tmp = 0;
  S2_tmp = 0;
  S1_tmp = 0;
  S1 = S1_tmp;
  S2 = S2_tmp;
  S_in_f = S_in_f_tmp;
  Sf = Sf_tmp;
  in_main = in_main_tmp;
  return;
}

/*@ requires
      1 ≡ S_in_f ∧ 0 ≡ S1 ∧ 0 ≡ S2 ∧ 0 ≡ Sf ∧ 0 ≡ in_main;
    ensures aorai_CurOpStatus ≡ aorai_Terminated;
    ensures aorai_CurOperation ≡ op_f;
    assigns aorai_CurOpStatus, aorai_CurOperation, S1, S2, S_in_f, Sf,
            in_main;
    
    behavior buch_state_S1_out:
      ensures 0 ≡ S1;
    
    behavior buch_state_S2_out:
      ensures 0 ≡ S2;
    
    behavior buch_state_S_in_f_out:
      ensures 0 ≡ S_in_f;
    
    behavior buch_state_Sf_out:
      ensures 0 ≡ Sf;
    
    behavior buch_state_in_main_in:
      assumes 1 ≡ S_in_f;
      ensures 1 ≡ in_main;
    
    behavior buch_state_in_main_out:
      assumes 0 ≡ S_in_f;
      ensures 0 ≡ in_main;
 */
void f_post_func(void)
{
  /*@ ghost int S1_tmp; */
  /*@ ghost int S2_tmp; */
  /*@ ghost int S_in_f_tmp; */
  /*@ ghost int Sf_tmp; */
  /*@ ghost int in_main_tmp; */
  aorai_CurOpStatus = aorai_Terminated;
  aorai_CurOperation = op_f;
  S1_tmp = S1;
  S2_tmp = S2;
  S_in_f_tmp = S_in_f;
  Sf_tmp = Sf;
  in_main_tmp = in_main;
  if (S_in_f == 1) in_main_tmp = 1; else in_main_tmp = 0;
  Sf_tmp = 0;
  S_in_f_tmp = 0;
  S2_tmp = 0;
  S1_tmp = 0;
  S1 = S1_tmp;
  S2 = S2_tmp;
  S_in_f = S_in_f_tmp;
  Sf = Sf_tmp;
  in_main = in_main_tmp;
  return;
}

/*@ requires
      1 ≡ Sf ∧ 0 ≡ S1 ∧ 0 ≡ S2 ∧ 0 ≡ S_in_f ∧ 0 ≡ in_main;
    
    behavior Buchi_property_behavior:
      ensures 0 ≡ S1 ∧ 0 ≡ S2 ∧ 0 ≡ S_in_f ∧ 0 ≡ Sf;
      ensures 1 ≡ in_main;
 */
void f(void)
{
  f_pre_func();
  X ++;
  f_post_func();
  return;
}

/*@ ensures aorai_CurOpStatus ≡ aorai_Called;
    ensures aorai_CurOperation ≡ op_main;
    assigns aorai_CurOpStatus, aorai_CurOperation, S1, S2, S_in_f, Sf,
            in_main;
    
    behavior buch_state_S1_out:
      ensures 0 ≡ S1;
    
    behavior buch_state_S2_out:
      ensures 0 ≡ S2;
    
    behavior buch_state_S_in_f_out:
      ensures 0 ≡ S_in_f;
    
    behavior buch_state_Sf_in:
      assumes 1 ≡ S1;
      ensures 1 ≡ Sf;
    
    behavior buch_state_Sf_out:
      assumes 0 ≡ S1;
      ensures 0 ≡ Sf;
    
    behavior buch_state_in_main_out:
      ensures 0 ≡ in_main;
 */
void main_pre_func(void)
{
  /*@ ghost int S1_tmp; */
  /*@ ghost int S2_tmp; */
  /*@ ghost int S_in_f_tmp; */
  /*@ ghost int Sf_tmp; */
  /*@ ghost int in_main_tmp; */
  aorai_CurOpStatus = aorai_Called;
  aorai_CurOperation = op_main;
  S1_tmp = S1;
  S2_tmp = S2;
  S_in_f_tmp = S_in_f;
  Sf_tmp = Sf;
  in_main_tmp = in_main;
  in_main_tmp = 0;
  if (S1 == 1) Sf_tmp = 1; else Sf_tmp = 0;
  S_in_f_tmp = 0;
  S2_tmp = 0;
  S1_tmp = 0;
  S1 = S1_tmp;
  S2 = S2_tmp;
  S_in_f = S_in_f_tmp;
  Sf = Sf_tmp;
  in_main = in_main_tmp;
  return;
}

/*@ requires
      1 ≡ in_main ∧ 0 ≡ S1 ∧ 0 ≡ S2 ∧ 0 ≡ S_in_f ∧ 0 ≡ Sf;
    ensures aorai_CurOpStatus ≡ aorai_Terminated;
    ensures aorai_CurOperation ≡ op_main;
    assigns aorai_CurOpStatus, aorai_CurOperation, S1, S2, S_in_f, Sf,
            in_main;
    
    behavior buch_state_S1_out:
      ensures 0 ≡ S1;
    
    behavior buch_state_S2_in:
      assumes 1 ≡ in_main;
      ensures 1 ≡ S2;
    
    behavior buch_state_S2_out:
      assumes 0 ≡ in_main;
      ensures 0 ≡ S2;
    
    behavior buch_state_S_in_f_out:
      ensures 0 ≡ S_in_f;
    
    behavior buch_state_Sf_out:
      ensures 0 ≡ Sf;
    
    behavior buch_state_in_main_out:
      ensures 0 ≡ in_main;
 */
void main_post_func(int res)
{
  /*@ ghost int S1_tmp; */
  /*@ ghost int S2_tmp; */
  /*@ ghost int S_in_f_tmp; */
  /*@ ghost int Sf_tmp; */
  /*@ ghost int in_main_tmp; */
  aorai_CurOpStatus = aorai_Terminated;
  aorai_CurOperation = op_main;
  S1_tmp = S1;
  S2_tmp = S2;
  S_in_f_tmp = S_in_f;
  Sf_tmp = Sf;
  in_main_tmp = in_main;
  in_main_tmp = 0;
  Sf_tmp = 0;
  S_in_f_tmp = 0;
  if (in_main == 1) S2_tmp = 1; else S2_tmp = 0;
  S1_tmp = 0;
  S1 = S1_tmp;
  S2 = S2_tmp;
  S_in_f = S_in_f_tmp;
  Sf = Sf_tmp;
  in_main = in_main_tmp;
  return;
}

/*@ requires
      1 ≡ S1 ∧ 0 ≡ S2 ∧ 0 ≡ S_in_f ∧ 0 ≡ Sf ∧ 0 ≡ in_main;
    assigns X, aorai_CurOpStatus, aorai_CurOperation, S1, S2, S_in_f, Sf,
            in_main;
    
    behavior foo:
      assigns X, aorai_CurOpStatus, aorai_CurOperation, S1, S2, S_in_f, Sf,
              in_main;
    
    behavior Buchi_property_behavior:
      ensures 0 ≡ S1 ∧ 0 ≡ S_in_f ∧ 0 ≡ Sf ∧ 0 ≡ in_main;
      ensures 1 ≡ S2;
 */
int main(void)
{
  main_pre_func();
  /*@ assigns X; */
  X ++;
  /*@ assigns aorai_CurOpStatus, aorai_CurOperation, S1, S2, S_in_f, Sf,
              in_main, X;
  */
  f();
  main_post_func(X);
  return X;
}


