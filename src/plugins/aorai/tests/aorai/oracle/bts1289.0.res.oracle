[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/aorai/bts1289.i (no preprocessing)
[aorai] Welcome to the Aorai plugin
[aorai] warning: Call to main does not follow automaton's specification. This path is assumed to be dead
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing /tmp/aorai_bts12890.i (no preprocessing)
/* Generated by Frama-C */
enum aorai_ListOper {
    op_a = 1,
    op_main = 0
};
enum aorai_OpStatusList {
    aorai_Terminated = 1,
    aorai_Called = 0
};
/*@ ghost enum aorai_ListOper aorai_CurOperation = op_main; */
/*@ ghost enum aorai_OpStatusList aorai_CurOpStatus = aorai_Called; */
/*@ ensures aorai_CurOpStatus ≡ aorai_Called;
    ensures aorai_CurOperation ≡ op_a;
    assigns aorai_CurOpStatus, aorai_CurOperation;
 */
void a_pre_func(void)
{
  aorai_CurOpStatus = aorai_Called;
  aorai_CurOperation = op_a;
  return;
}

/*@ requires \false;
    ensures aorai_CurOpStatus ≡ aorai_Terminated;
    ensures aorai_CurOperation ≡ op_a;
    assigns aorai_CurOpStatus, aorai_CurOperation;
 */
void a_post_func(void)
{
  aorai_CurOpStatus = aorai_Terminated;
  aorai_CurOperation = op_a;
  return;
}

/*@ requires \false; */
void a(void)
{
  a_pre_func();
  a_post_func();
  return;
}

/*@ ensures aorai_CurOpStatus ≡ aorai_Called;
    ensures aorai_CurOperation ≡ op_main;
    assigns aorai_CurOpStatus, aorai_CurOperation;
 */
void main_pre_func(void)
{
  aorai_CurOpStatus = aorai_Called;
  aorai_CurOperation = op_main;
  return;
}

/*@ requires \false;
    ensures aorai_CurOpStatus ≡ aorai_Terminated;
    ensures aorai_CurOperation ≡ op_main;
    assigns aorai_CurOpStatus, aorai_CurOperation;
 */
void main_post_func(void)
{
  aorai_CurOpStatus = aorai_Terminated;
  aorai_CurOperation = op_main;
  return;
}

/*@ requires \false; */
void main(void)
{
  int aorai_Loop_Init_16;
  int i;
  main_pre_func();
  i = 0;
  /*@ ghost aorai_Loop_Init_16 = 1; */
  aorai_loop_16:
    /*@ loop assigns i, aorai_Loop_Init_16, aorai_CurOpStatus,
                     aorai_CurOperation;
        loop assigns aorai_Loop_Init_16 \from \nothing;
    */
    while (1) {
      if (! (i < 10)) goto while_0_break;
      /*@ ghost aorai_Loop_Init_16 = 0; */
      a();
      i ++;
    }
  while_0_break: ;
  main_post_func();
  return;
}


