# frama-c -wp -wp-model 'Typed (Caveat)' [...]
[kernel] Parsing tests/wp_usage/caveat2.i (no preprocessing)
[wp] Running WP plugin...
[wp] Loading driver 'share/wp.driver'
[wp] Warning: Missing RTE guards
[wp] tests/wp_usage/caveat2.i:22: Warning: Undefined array-size (sint32[])
------------------------------------------------------------
  Function job
------------------------------------------------------------

Goal Post-condition 'N' in 'job':
Prove: true.

------------------------------------------------------------

Goal Post-condition 'A' in 'job':
Let a = global(G_b_24).
Assume {
  Type: is_sint32(i_1) /\ is_sint32(n).
  (* Goal *)
  When: (0 <= i) /\ (i < n).
  (* Pre-condition *)
  Have: (0 <= n) /\ (n <= 3).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      (Mint_0[shift_sint32(a, i_2)] = v[i_2]))).
  (* Invariant *)
  Have: (0 <= i_1) /\ (i_1 <= n).
  (* Else *)
  Have: n <= i_1.
}
Prove: Mint_0[shift_sint32(a, i)] = v[i].

------------------------------------------------------------

Goal Preservation of Invariant (file tests/wp_usage/caveat2.i, line 21):
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(1 + i).
  (* Pre-condition *)
  Have: (0 <= n) /\ (n <= 3).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (Mint_0[shift_sint32(global(G_b_24), i_1)] = v[i_1]))).
  (* Invariant *)
  Have: (0 <= i) /\ (i <= n).
  (* Then *)
  Have: i < n.
}
Prove: (-1) <= i.

------------------------------------------------------------

Goal Establishment of Invariant (file tests/wp_usage/caveat2.i, line 21):
Prove: true.

------------------------------------------------------------

Goal Preservation of Invariant (file tests/wp_usage/caveat2.i, line 22):
tests/wp_usage/caveat2.i:22: warning from Typed Model:
 - Warning: No allocation size for variable 'b'
   Reason: Undefined array-size (sint32[])
Let a = global(G_b_24).
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(1 + i).
  (* Goal *)
  When: (0 <= i_1) /\ (i_1 <= i).
  (* Pre-condition *)
  Have: (0 <= n) /\ (n <= 3).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i) ->
      (Mint_0[shift_sint32(a, i_2)] = v[i_2]))).
  (* Invariant *)
  Have: (0 <= i) /\ (i <= n).
  (* Then *)
  Have: i < n.
}
Prove: v[i <- Mint_0[shift_sint32(a, i)]][i_1] = Mint_0[shift_sint32(a, i_1)].

------------------------------------------------------------

Goal Establishment of Invariant (file tests/wp_usage/caveat2.i, line 22):
Prove: true.

------------------------------------------------------------

Goal Loop assigns (file tests/wp_usage/caveat2.i, line 23):
Prove: true.

------------------------------------------------------------

Goal Assigns (file tests/wp_usage/caveat2.i, line 15) in 'job' (1/2):
Prove: true.

------------------------------------------------------------

Goal Assigns (file tests/wp_usage/caveat2.i, line 15) in 'job' (2/2):
Effect at line 25
Prove: true.

------------------------------------------------------------
[wp] Warning: Separation hypotheses for function 'job':
  /*@ behavior typed_caveat: requires \separated(p,b+(..)); */
  void job(struct S *p, int n, int *b);
