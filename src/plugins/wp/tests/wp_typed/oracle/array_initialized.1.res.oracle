# frama-c -wp [...]
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/wp_typed/array_initialized.c (with preprocessing)
tests/wp_typed/array_initialized.c:13:[kernel] warning: Too many initializers for array g
[wp] Running WP plugin...
[wp] Loading driver 'share/wp.driver'
[wp] warning: Missing RTE guards
------------------------------------------------------------
  Function main1
------------------------------------------------------------

Goal Assertion (file tests/wp_typed/array_initialized.c, line 71):
Let a = shift_A500_sint32(global(K_g_67), 0).
Assume {
  (* Goal *)
  When: (0 <= i) /\ (i <= 499).
  (* Initializer *)
  Init: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= 499) ->
      (0 = Mint_0[shift_sint32(a, i_1)]))).
}
Prove: 0 = Mint_0[shift_sint32(a, i)].

------------------------------------------------------------
------------------------------------------------------------
  Function main2
------------------------------------------------------------

Goal Assertion (file tests/wp_typed/array_initialized.c, line 185):
Let a = shift_A500_sint32(global(K_h1_71), 0).
Let a_1 = shift_A500_sint32(global(K_h2_72), 0).
Assume {
  (* Goal *)
  When: (0 <= i) /\ (i <= 499).
  (* Initializer *)
  Init: 0 = Mint_0[shift_sint32(a_1, 0)].
  (* Initializer *)
  Init: 1 = Mint_0[shift_sint32(a_1, 1)].
  (* Initializer *)
  Init: 2 = Mint_0[shift_sint32(a_1, 2)].
  (* Initializer *)
  Init: 3 = Mint_0[shift_sint32(a_1, 3)].
  (* Initializer *)
  Init: 4 = Mint_0[shift_sint32(a_1, 4)].
  (* Initializer *)
  Init: 5 = Mint_0[shift_sint32(a_1, 5)].
  (* Initializer *)
  Init: 6 = Mint_0[shift_sint32(a_1, 6)].
  (* Initializer *)
  Init: 7 = Mint_0[shift_sint32(a_1, 7)].
  (* Initializer *)
  Init: 8 = Mint_0[shift_sint32(a_1, 8)].
  (* Initializer *)
  Init: 9 = Mint_0[shift_sint32(a_1, 9)].
  (* Initializer *)
  Init: 10 = Mint_0[shift_sint32(a_1, 10)].
  (* Initializer *)
  Init: 11 = Mint_0[shift_sint32(a_1, 11)].
  (* Initializer *)
  Init: 12 = Mint_0[shift_sint32(a_1, 12)].
  (* Initializer *)
  Init: 13 = Mint_0[shift_sint32(a_1, 13)].
  (* Initializer *)
  Init: 14 = Mint_0[shift_sint32(a_1, 14)].
  (* Initializer *)
  Init: 15 = Mint_0[shift_sint32(a_1, 15)].
  (* Initializer *)
  Init: 16 = Mint_0[shift_sint32(a_1, 16)].
  (* Initializer *)
  Init: 17 = Mint_0[shift_sint32(a_1, 17)].
  (* Initializer *)
  Init: 18 = Mint_0[shift_sint32(a_1, 18)].
  (* Initializer *)
  Init: 19 = Mint_0[shift_sint32(a_1, 19)].
  (* Initializer *)
  Init: 20 = Mint_0[shift_sint32(a_1, 20)].
  (* Initializer *)
  Init: 21 = Mint_0[shift_sint32(a_1, 21)].
  (* Initializer *)
  Init: 22 = Mint_0[shift_sint32(a_1, 22)].
  (* Initializer *)
  Init: 23 = Mint_0[shift_sint32(a_1, 23)].
  (* Initializer *)
  Init: 24 = Mint_0[shift_sint32(a_1, 24)].
  (* Initializer *)
  Init: 25 = Mint_0[shift_sint32(a_1, 25)].
  (* Initializer *)
  Init: 26 = Mint_0[shift_sint32(a_1, 26)].
  (* Initializer *)
  Init: 27 = Mint_0[shift_sint32(a_1, 27)].
  (* Initializer *)
  Init: 28 = Mint_0[shift_sint32(a_1, 28)].
  (* Initializer *)
  Init: 29 = Mint_0[shift_sint32(a_1, 29)].
  (* Initializer *)
  Init: 30 = Mint_0[shift_sint32(a_1, 30)].
  (* Initializer *)
  Init: 31 = Mint_0[shift_sint32(a_1, 31)].
  (* Initializer *)
  Init: 32 = Mint_0[shift_sint32(a_1, 32)].
  (* Initializer *)
  Init: 33 = Mint_0[shift_sint32(a_1, 33)].
  (* Initializer *)
  Init: 34 = Mint_0[shift_sint32(a_1, 34)].
  (* Initializer *)
  Init: 35 = Mint_0[shift_sint32(a_1, 35)].
  (* Initializer *)
  Init: 36 = Mint_0[shift_sint32(a_1, 36)].
  (* Initializer *)
  Init: 37 = Mint_0[shift_sint32(a_1, 37)].
  (* Initializer *)
  Init: 38 = Mint_0[shift_sint32(a_1, 38)].
  (* Initializer *)
  Init: 39 = Mint_0[shift_sint32(a_1, 39)].
  (* Initializer *)
  Init: 40 = Mint_0[shift_sint32(a_1, 40)].
  (* Initializer *)
  Init: 41 = Mint_0[shift_sint32(a_1, 41)].
  (* Initializer *)
  Init: 42 = Mint_0[shift_sint32(a_1, 42)].
  (* Initializer *)
  Init: 43 = Mint_0[shift_sint32(a_1, 43)].
  (* Initializer *)
  Init: 44 = Mint_0[shift_sint32(a_1, 44)].
  (* Initializer *)
  Init: 45 = Mint_0[shift_sint32(a_1, 45)].
  (* Initializer *)
  Init: 46 = Mint_0[shift_sint32(a_1, 46)].
  (* Initializer *)
  Init: 47 = Mint_0[shift_sint32(a_1, 47)].
  (* Initializer *)
  Init: 48 = Mint_0[shift_sint32(a_1, 48)].
  (* Initializer *)
  Init: 49 = Mint_0[shift_sint32(a_1, 49)].
  (* Initializer *)
  Init: forall i_1 : Z. ((50 <= i_1) -> ((i_1 <= 499) ->
      (0 = Mint_0[shift_sint32(a_1, i_1)]))).
  (* Initializer *)
  Init: 0 = Mint_0[shift_sint32(a, 0)].
  (* Initializer *)
  Init: 1 = Mint_0[shift_sint32(a, 1)].
  (* Initializer *)
  Init: 2 = Mint_0[shift_sint32(a, 2)].
  (* Initializer *)
  Init: 3 = Mint_0[shift_sint32(a, 3)].
  (* Initializer *)
  Init: 4 = Mint_0[shift_sint32(a, 4)].
  (* Initializer *)
  Init: 5 = Mint_0[shift_sint32(a, 5)].
  (* Initializer *)
  Init: 6 = Mint_0[shift_sint32(a, 6)].
  (* Initializer *)
  Init: 7 = Mint_0[shift_sint32(a, 7)].
  (* Initializer *)
  Init: 8 = Mint_0[shift_sint32(a, 8)].
  (* Initializer *)
  Init: 9 = Mint_0[shift_sint32(a, 9)].
  (* Initializer *)
  Init: 10 = Mint_0[shift_sint32(a, 10)].
  (* Initializer *)
  Init: 11 = Mint_0[shift_sint32(a, 11)].
  (* Initializer *)
  Init: 12 = Mint_0[shift_sint32(a, 12)].
  (* Initializer *)
  Init: 13 = Mint_0[shift_sint32(a, 13)].
  (* Initializer *)
  Init: 14 = Mint_0[shift_sint32(a, 14)].
  (* Initializer *)
  Init: 15 = Mint_0[shift_sint32(a, 15)].
  (* Initializer *)
  Init: 16 = Mint_0[shift_sint32(a, 16)].
  (* Initializer *)
  Init: 17 = Mint_0[shift_sint32(a, 17)].
  (* Initializer *)
  Init: 18 = Mint_0[shift_sint32(a, 18)].
  (* Initializer *)
  Init: 19 = Mint_0[shift_sint32(a, 19)].
  (* Initializer *)
  Init: 20 = Mint_0[shift_sint32(a, 20)].
  (* Initializer *)
  Init: 21 = Mint_0[shift_sint32(a, 21)].
  (* Initializer *)
  Init: 22 = Mint_0[shift_sint32(a, 22)].
  (* Initializer *)
  Init: 23 = Mint_0[shift_sint32(a, 23)].
  (* Initializer *)
  Init: 24 = Mint_0[shift_sint32(a, 24)].
  (* Initializer *)
  Init: 25 = Mint_0[shift_sint32(a, 25)].
  (* Initializer *)
  Init: 26 = Mint_0[shift_sint32(a, 26)].
  (* Initializer *)
  Init: 27 = Mint_0[shift_sint32(a, 27)].
  (* Initializer *)
  Init: 28 = Mint_0[shift_sint32(a, 28)].
  (* Initializer *)
  Init: 29 = Mint_0[shift_sint32(a, 29)].
  (* Initializer *)
  Init: 30 = Mint_0[shift_sint32(a, 30)].
  (* Initializer *)
  Init: 31 = Mint_0[shift_sint32(a, 31)].
  (* Initializer *)
  Init: 32 = Mint_0[shift_sint32(a, 32)].
  (* Initializer *)
  Init: 33 = Mint_0[shift_sint32(a, 33)].
  (* Initializer *)
  Init: 34 = Mint_0[shift_sint32(a, 34)].
  (* Initializer *)
  Init: 35 = Mint_0[shift_sint32(a, 35)].
  (* Initializer *)
  Init: 36 = Mint_0[shift_sint32(a, 36)].
  (* Initializer *)
  Init: 37 = Mint_0[shift_sint32(a, 37)].
  (* Initializer *)
  Init: 38 = Mint_0[shift_sint32(a, 38)].
  (* Initializer *)
  Init: 39 = Mint_0[shift_sint32(a, 39)].
  (* Initializer *)
  Init: 40 = Mint_0[shift_sint32(a, 40)].
  (* Initializer *)
  Init: 41 = Mint_0[shift_sint32(a, 41)].
  (* Initializer *)
  Init: 42 = Mint_0[shift_sint32(a, 42)].
  (* Initializer *)
  Init: 43 = Mint_0[shift_sint32(a, 43)].
  (* Initializer *)
  Init: 44 = Mint_0[shift_sint32(a, 44)].
  (* Initializer *)
  Init: 45 = Mint_0[shift_sint32(a, 45)].
  (* Initializer *)
  Init: 46 = Mint_0[shift_sint32(a, 46)].
  (* Initializer *)
  Init: 47 = Mint_0[shift_sint32(a, 47)].
  (* Initializer *)
  Init: 48 = Mint_0[shift_sint32(a, 48)].
  (* Initializer *)
  Init: 49 = Mint_0[shift_sint32(a, 49)].
  (* Initializer *)
  Init: forall i_1 : Z. ((50 <= i_1) -> ((i_1 <= 499) ->
      (0 = Mint_0[shift_sint32(a, i_1)]))).
}
Prove: Mint_0[shift_sint32(a, i)] = Mint_0[shift_sint32(a_1, i)].

------------------------------------------------------------
------------------------------------------------------------
  Function main3
------------------------------------------------------------

Goal Assertion (file tests/wp_typed/array_initialized.c, line 194):
Prove: true.

------------------------------------------------------------
------------------------------------------------------------
  Function main_pointer
------------------------------------------------------------

Goal Assertion (file tests/wp_typed/array_initialized.c, line 283):
Let a = shift_A500_PTR(global(K_p_79), 0).
Assume {
  (* Goal *)
  When: (0 <= i) /\ (i <= 499).
  (* Initializer *)
  Init: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= 499) ->
      (global(G_p0_78) = Mptr_0[shift_PTR(a, i_1)]))).
  (* Heap *)
  Have: framed(Mptr_0) /\ linked(Malloc_0).
}
Prove: valid_rw(Malloc_0, Mptr_0[shift_PTR(a, i)], 1).

------------------------------------------------------------
------------------------------------------------------------
  Function simpl
------------------------------------------------------------

Goal Post-condition (file tests/wp_typed/array_initialized.c, line 288) in 'simpl':
Let x = Mint_0[shift_sint32(t, 0)].
Assume {
  Type: is_sint32(x).
  (* Goal *)
  When: (0 <= i) /\ (i <= 49).
  (* Heap *)
  Have: region(t.base) <= 0.
  (* Pre-condition *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= 49) ->
      (x = Mint_0[shift_sint32(t, i_1)]))).
  If 0 <= x
  Then { Have: 1 = simpl_0. }
  Else { Have: 0 = simpl_0. }
}
Prove: (1 = simpl_0) <-> (0 <= Mint_0[shift_sint32(t, i)]).

------------------------------------------------------------
