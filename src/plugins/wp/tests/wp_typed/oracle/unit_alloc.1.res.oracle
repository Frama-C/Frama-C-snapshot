# frama-c -wp -wp-model 'Typed (Ref)' [...]
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/wp_typed/unit_alloc.i (no preprocessing)
[wp] Running WP plugin...
[wp] Loading driver 'share/wp.driver'
[wp] Collecting axiomatic usage
[wp] warning: Missing RTE guards
[wp] Collecting variable usage
------------------------------------------------------------
  Function f
------------------------------------------------------------

Goal Assigns nothing in 'f':
Prove: true.

------------------------------------------------------------
------------------------------------------------------------
  Function g
------------------------------------------------------------

Goal Assigns nothing in 'g':
Effect at line 31
Prove: true.

------------------------------------------------------------
------------------------------------------------------------
  Function h
------------------------------------------------------------

Goal Post-condition (file tests/wp_typed/unit_alloc.i, line 33) in 'h':
Assume { (* Heap *) Have: linked(Malloc_0). }
Prove: !valid_rw(Malloc_0[P_x_87 <- 0], shift_sint32(global(P_x_87), 0), 1).

------------------------------------------------------------
------------------------------------------------------------
  Function job
------------------------------------------------------------

Goal Assertion (file tests/wp_typed/unit_alloc.i, line 15):
Prove: true.

------------------------------------------------------------

Goal Assertion (file tests/wp_typed/unit_alloc.i, line 21):
Assume { (* Heap *) Have: linked(Malloc_0) /\ (region(p.base) <= 0). }
Prove: valid_rw(Malloc_0[L_y_72 <- 1], shift_sint32(global(L_y_72), 0), 1).

------------------------------------------------------------

Goal Assertion (file tests/wp_typed/unit_alloc.i, line 22):
Prove: true.

------------------------------------------------------------

Goal Assertion (file tests/wp_typed/unit_alloc.i, line 24):
Let a = shift_sint32(global(L_y_72), 0).
Assume {
  (* Heap *)
  Have: linked(Malloc_0) /\ (region(p.base) <= 0).
  (* Assertion *)
  Have: valid_rw(Malloc_0[L_y_72 <- 1], a, 1).
}
Prove: !valid_rw(Malloc_0[L_y_72 <- 0], a, 1).

------------------------------------------------------------
