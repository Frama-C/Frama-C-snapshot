# frama-c -wp [...]
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/wp_typed/shift_lemma.i (no preprocessing)
[wp] Running WP plugin...
[wp] Loading driver 'share/wp.driver'
[wp] warning: Missing RTE guards
------------------------------------------------------------
  Function f
------------------------------------------------------------

Goal Assertion (file tests/wp_typed/shift_lemma.i, line 21):
Let x = Mint_0[shiftfield_F2_s_d(p)].
Let a = shiftfield_F2_s_u(p).
Assume {
  Type: is_sint32(x) /\ is_sint32(Mint_0[shiftfield_F2_s_e(p)]) /\
      is_sint32(Mint_0[shiftfield_F1_t_c(shift_t(a, 0))]) /\
      is_sint32(Mint_0[shiftfield_F1_t_c(shift_t(a, 1))]).
  (* Heap *)
  Have: region(p.base) <= 0.
  (* Pre-condition *)
  Have: P_inv(Mint_0, p).
}
Prove: 0 = x.

------------------------------------------------------------

Goal Assertion (file tests/wp_typed/shift_lemma.i, line 22):
Let a = shiftfield_F2_s_u(p).
Assume {
  Type: is_sint32(Mint_0[shiftfield_F2_s_e(p)]) /\
      is_sint32(Mint_0[shiftfield_F1_t_c(shift_t(a, 0))]) /\
      is_sint32(Mint_0[shiftfield_F1_t_c(shift_t(a, 1))]).
  (* Goal *)
  When: (0 <= i) /\ (i <= 9) /\ is_sint32(i).
  (* Heap *)
  Have: region(p.base) <= 0.
  (* Pre-condition *)
  Have: P_inv(Mint_0, p).
  (* Assertion *)
  Have: 0 = Mint_0[shiftfield_F2_s_d(p)].
}
Prove: 0 = Mint_0[shiftfield_F1_t_c(shift_t(a, i))].

------------------------------------------------------------

Goal Assertion (file tests/wp_typed/shift_lemma.i, line 23):
Prove: true.

------------------------------------------------------------

Goal Assertion (file tests/wp_typed/shift_lemma.i, line 24):
Prove: true.

------------------------------------------------------------

Goal Assertion (file tests/wp_typed/shift_lemma.i, line 25):
Let x = Mint_0[shiftfield_F2_s_e(p)].
Assume {
  Type: is_sint32(x).
  (* Heap *)
  Have: region(p.base) <= 0.
  (* Pre-condition *)
  Have: P_inv(Mint_0, p).
  (* Assertion *)
  Have: 0 = Mint_0[shiftfield_F2_s_d(p)].
  (* Assertion *)
  Have: forall i : Z. ((0 <= i) -> ((i <= 9) ->
      (0 = Mint_0[shiftfield_F1_t_c(shift_t(shiftfield_F2_s_u(p), i))]))).
}
Prove: 0 = x.

------------------------------------------------------------
