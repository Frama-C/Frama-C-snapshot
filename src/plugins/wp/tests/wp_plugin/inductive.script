(* Generated by Frama-C WP *)

Goal typed_lemma_offset.
Hint offset,property.
Proof.
  intros. remember (shift_sint32 a_1 i) as a_11.
  remember (shift_sint32 a i) as a1.
  revert dependent a. revert dependent a_1.
  induction H; intros; subst.
  - apply Q_refl. unfold P_same_array; intros.
    unfold P_same_array in *. unfold shift_sint32, shift in *.
    destruct a0, a_0. simpl in *.
    replace i1 with (i + (i1 -i)) by omega.
    rewrite 2!Z.add_assoc.
    apply H; omega.
  - apply Q_swap with (i_2:=i+i_2) (i_1:=i+i_1). unfold P_swap in *.
    decompose [and] H; clear H.
    unfold shift_sint32, shift in *. destruct a0, a_0. simpl in *.
    repeat split; try omega.
    + rewrite 2!Z.add_assoc. assumption.
    + rewrite 2!Z.add_assoc. assumption.
    + intros.
      replace i_0 with (i + (i_0 - i)) by omega.
      rewrite 2!Z.add_assoc.
      apply H6; omega.
  - apply Q_trans with (t_1:=t_1) (a_1:=shift_sint32 a_1 (-i)).
    + apply IHP_same_elements1. destruct a_1; unfold shift_sint32, shift; simpl. f_equal; omega. reflexivity.
    + apply IHP_same_elements2. reflexivity. destruct a_1; unfold shift_sint32, shift; simpl. f_equal; omega.
Qed.

Goal typed_lemma_test.
Hint property,test.
Proof.
intros.
destruct H.
  - left. reflexivity.
  - right. split;assumption.
(* auto with zarith. *)
Qed.


