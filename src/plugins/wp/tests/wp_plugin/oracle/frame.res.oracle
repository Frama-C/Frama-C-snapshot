# frama-c -wp [...]
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/wp_plugin/frame.i (no preprocessing)
[wp] Running WP plugin...
[wp] Loading driver 'share/wp.driver'
[wp] Collecting axiomatic usage
[wp] warning: Missing RTE guards
------------------------------------------------------------
  Function alias
------------------------------------------------------------

Goal Post-condition 'KO' in 'alias':
Let a = shift_sint32(global(P_r_86), 0).
Let x = Mint_0[a].
Let x_1 = Mint_1[a].
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1).
  (* Heap *)
  Have: linked(Malloc_0).
}
Prove: x = x_1.

------------------------------------------------------------
------------------------------------------------------------
  Function global
------------------------------------------------------------

Goal Post-condition 'KO' in 'global':
Assume { Type: is_sint32(g) /\ is_sint32(global_0). }
Prove: g = global_0.

------------------------------------------------------------
------------------------------------------------------------
  Function local
------------------------------------------------------------

Goal Post-condition 'FRAMED' in 'local':
Prove: true.

------------------------------------------------------------

Goal Post-condition 'KO' in 'local':
Assume { Type: is_sint32(g) /\ is_sint32(local_0). }
Prove: g = local_0.

------------------------------------------------------------
------------------------------------------------------------
  Function localref
------------------------------------------------------------

Goal Post-condition 'KO' in 'localref':
Let x = Mint_0[p].
Let x_1 = Mint_1[p].
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1).
  (* Heap *)
  Have: region(p.base) <= 0.
}
Prove: x = x_1.

------------------------------------------------------------

Goal Assertion 'FRAMED' (file tests/wp_plugin/frame.i, line 28):
Prove: true.

------------------------------------------------------------
