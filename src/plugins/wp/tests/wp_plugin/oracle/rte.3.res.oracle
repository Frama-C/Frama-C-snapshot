# frama-c -wp -wp-rte -wp-model 'Typed (Nat)' [...]
[kernel] Parsing tests/wp_plugin/rte.i (no preprocessing)
[wp] Running WP plugin...
[wp] Loading driver 'share/wp.driver'
[wp:rte] function job: generate rte for memory access
[wp:rte] function job: generate rte for division by zero
[wp:rte] function job: generate rte for signed overflow
[wp] Warning: -wp-rte and model nat require kernel to warn against unsigned overflow
[wp] Warning: -wp-rte and model nat require kernel to warn against signed downcast
[wp] Warning: -wp-rte and model nat require kernel to warn against unsigned downcast
[rte] annotating function job
[wp:rte] function job2: generate rte for memory access
[wp:rte] function job2: generate rte for division by zero
[wp:rte] function job2: generate rte for signed overflow
[rte] annotating function job2
[wp] Goal typed_nat_job_post : not tried
[wp] Goal typed_nat_job_assert_rte_mem_access : not tried
[wp] Goal typed_nat_job_assert_rte_mem_access_2 : not tried
[wp] Goal typed_nat_job_assert_rte_signed_overflow : not tried
[wp] Goal typed_nat_job_assert_rte_signed_overflow_2 : not tried
[wp] Goal typed_nat_job_assert_rte_mem_access_3 : not tried
[wp] Goal typed_nat_job2_post : not tried
/* Generated by Frama-C */
/*@ axiomatic Obs {
      predicate R(integer r) ;
      
      }
 */
/*@ ensures R(\result); */
int job(int *p, int n)
{
  int __retres;
  /*@ assert rte: mem_access: \valid(p); */
  /*@ assert rte: mem_access: \valid_read(p); */
  /*@ assert rte: signed_overflow: -2147483648 <= *p + n; */
  /*@ assert rte: signed_overflow: *p + n <= 2147483647; */
  *p += n;
  /*@ assert rte: mem_access: \valid_read(p); */
  __retres = *p;
  return __retres;
}

/*@ ensures R(\result); */
unsigned int job2(unsigned int a, unsigned int b)
{
  unsigned int __retres;
  __retres = a + b;
  return __retres;
}


