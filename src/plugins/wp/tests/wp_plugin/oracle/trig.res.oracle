# frama-c -wp [...]
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/wp_plugin/trig.i (no preprocessing)
[wp] Running WP plugin...
[wp] Loading driver 'share/wp.driver'
[wp] Collecting axiomatic usage
[wp] warning: Missing RTE guards
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Assertion 'qed_ok,S' (file tests/wp_plugin/trig.i, line 39):
Let x = c.F1_MSG_size.
Let a_1 = c.F1_MSG_text.
Assume {
  Type: IsS1_MSG(a) /\ IsS1_MSG(b) /\ IsS1_MSG(c) /\ is_sint32(x) /\
      is_uint8((a.F1_MSG_text)[2]) /\ is_uint8((b.F1_MSG_text)[2]) /\
      is_uint8(a_1[2]) /\ is_uint8(a_1[7]).
  (* Pre-condition *)
  Have: (5 = (a.F1_MSG_size)) /\ (5 = (b.F1_MSG_size)).
  (* Call 'fconcat' *)
  Have: EqS1_MSG(c, L_concat(a, b)).
}
Prove: 10 = x.

------------------------------------------------------------

Goal Assertion 'qed_ok,A' (file tests/wp_plugin/trig.i, line 40):
Let a_1 = (a.F1_MSG_text)[2].
Let a_2 = c.F1_MSG_text.
Let a_3 = a_2[2].
Assume {
  Type: IsS1_MSG(a) /\ IsS1_MSG(b) /\ IsS1_MSG(c) /\ is_uint8(a_1) /\
      is_uint8((b.F1_MSG_text)[2]) /\ is_uint8(a_3) /\ is_uint8(a_2[7]).
  (* Pre-condition *)
  Have: (5 = (a.F1_MSG_size)) /\ (5 = (b.F1_MSG_size)).
  (* Call 'fconcat' *)
  Have: EqS1_MSG(c, L_concat(a, b)).
  (* Assertion 'qed_ok,S' *)
  Have: 10 = (c.F1_MSG_size).
}
Prove: a_1 = a_3.

------------------------------------------------------------

Goal Assertion 'qed_ok,B' (file tests/wp_plugin/trig.i, line 41):
Let a_1 = (a.F1_MSG_text)[2].
Let a_2 = c.F1_MSG_text.
Let a_3 = a_2[2].
Let a_4 = (b.F1_MSG_text)[2].
Let a_5 = a_2[7].
Assume {
  Type: IsS1_MSG(a) /\ IsS1_MSG(b) /\ IsS1_MSG(c) /\ is_uint8(a_1) /\
      is_uint8(a_4) /\ is_uint8(a_3) /\ is_uint8(a_5).
  (* Pre-condition *)
  Have: (5 = (a.F1_MSG_size)) /\ (5 = (b.F1_MSG_size)).
  (* Call 'fconcat' *)
  Have: EqS1_MSG(c, L_concat(a, b)).
  (* Assertion 'qed_ok,S' *)
  Have: 10 = (c.F1_MSG_size).
  (* Assertion 'qed_ok,A' *)
  Have: a_1 = a_3.
}
Prove: a_4 = a_5.

------------------------------------------------------------

Goal Instance of 'Pre-condition 'qed_ok' in 'fconcat'' in 'foo' at call 'fconcat' (file tests/wp_plugin/trig.i, line 38)
:
Prove: true.

------------------------------------------------------------
