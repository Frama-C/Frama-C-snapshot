# frama-c -wp [...]
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/wp_plugin/init_const.i (no preprocessing)
[wp] Running WP plugin...
[wp] Loading driver 'share/wp.driver'
[wp] Collecting axiomatic usage
[wp] warning: Missing RTE guards
------------------------------------------------------------
  Function fA
------------------------------------------------------------

Goal Post-condition 'KO' in 'fA':
Let x = A[0].
Let x_1 = A[1].
Let x_2 = A[2].
Let x_3 = A[3].
Let x_4 = x + x_1 + x_2 + x_3.
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_3) /\
      is_sint32(x_4).
}
Prove: 6 = x_4.

------------------------------------------------------------
------------------------------------------------------------
  Function fB
------------------------------------------------------------

Goal Post-condition 'OK' in 'fB':
Prove: true.

------------------------------------------------------------
------------------------------------------------------------
  Function fC
------------------------------------------------------------

Goal Post-condition 'KO' in 'fC':
Let x = A[3].
Assume {
  Type: is_sint32(A_1[3]) /\ is_sint32(x).
  (* Initializer *)
  Init: 1 = A_1[0].
  (* Initializer *)
  Init: 2 = A_1[1].
  (* Initializer *)
  Init: 3 = A_1[2].
  (* Initializer *)
  Init: forall i : Z. ((3 <= i) -> ((i <= 3) -> (0 = A_1[i]))).
}
Prove: 0 = x.

------------------------------------------------------------
------------------------------------------------------------
  Function fD
------------------------------------------------------------

Goal Post-condition 'OK' in 'fD':
Prove: true.

------------------------------------------------------------
