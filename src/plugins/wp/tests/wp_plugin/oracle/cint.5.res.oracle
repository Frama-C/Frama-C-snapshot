# frama-c -wp -wp-model 'Typed (Nat)' [...]
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/wp_plugin/cint.i (no preprocessing)
tests/wp_plugin/cint.i:22:[kernel] warning: parsing obsolete ACSL construct 'logic declaration'. 'an axiomatic block' should be used instead.
[wp] Running WP plugin...
[wp] Loading driver 'share/wp.driver'
[wp] warning: Missing RTE guards
------------------------------------------------------------
  Function signed_bitwise
------------------------------------------------------------

Goal Post-condition (file tests/wp_plugin/cint.i, line 24) in 'signed_bitwise':
Prove: P_R(lnot(a), a).

------------------------------------------------------------
------------------------------------------------------------
  Function signed_downcast
------------------------------------------------------------

Goal Post-condition (file tests/wp_plugin/cint.i, line 30) in 'signed_downcast':
Prove: P_R(signed_downcast_0, signed_downcast_0).

------------------------------------------------------------
------------------------------------------------------------
  Function signed_overflow
------------------------------------------------------------

Goal Post-condition (file tests/wp_plugin/cint.i, line 36) in 'signed_overflow':
Prove: P_R(signed_overflow_0, signed_overflow_0).

------------------------------------------------------------
------------------------------------------------------------
  Function unsigned_bitwise
------------------------------------------------------------

Goal Post-condition (file tests/wp_plugin/cint.i, line 42) in 'unsigned_bitwise':
Assume { Type: 0 <= a. }
Prove: P_R(to_uint32(lnot(a)), a).

------------------------------------------------------------
------------------------------------------------------------
  Function unsigned_downcast
------------------------------------------------------------

Goal Post-condition (file tests/wp_plugin/cint.i, line 48) in 'unsigned_downcast':
Assume { Type: 0 <= unsigned_downcast_0. }
Prove: P_R(unsigned_downcast_0, unsigned_downcast_0).

------------------------------------------------------------
------------------------------------------------------------
  Function unsigned_overflow
------------------------------------------------------------

Goal Post-condition (file tests/wp_plugin/cint.i, line 54) in 'unsigned_overflow':
Assume { Type: (0 <= unsigned_overflow_0) /\ (b <= unsigned_overflow_0). }
Prove: P_R(unsigned_overflow_0, unsigned_overflow_0).

------------------------------------------------------------
