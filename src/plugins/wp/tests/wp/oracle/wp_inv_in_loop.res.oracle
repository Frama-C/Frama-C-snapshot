# frama-c -wp -wp-model 'Hoare' [...]
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/wp/wp_inv_in_loop.c (with preprocessing)
[wp] Running WP plugin...
[wp] Loading driver 'share/wp.driver'
[wp] Collecting axiomatic usage
[wp] warning: Missing RTE guards
tests/wp/wp_inv_in_loop.c:99:[wp] warning: Missing assigns clause (assigns 'everything' instead)
tests/wp/wp_inv_in_loop.c:169:[wp] warning: calculus failed on strategy
              for 'double_entry', behavior 'default!', all properties, both assigns or not
              because unsupported non-natural loop without invariant property. (abort)
tests/wp/wp_inv_in_loop.c:45:[wp] warning: Missing assigns clause (assigns 'everything' instead)
tests/wp/wp_inv_in_loop.c:185:[wp] warning: Missing assigns clause (assigns 'everything' instead)
tests/wp/wp_inv_in_loop.c:82:[wp] warning: Missing assigns clause (assigns 'everything' instead)
tests/wp/wp_inv_in_loop.c:62:[wp] warning: Missing assigns clause (assigns 'everything' instead)
tests/wp/wp_inv_in_loop.c:17:[wp] warning: Missing assigns clause (assigns 'everything' instead)
------------------------------------------------------------
  Function bts618
------------------------------------------------------------

Goal Invariant 'qed_ok' (file tests/wp/wp_inv_in_loop.c, line 101):
Prove: true.

------------------------------------------------------------
------------------------------------------------------------
  Function caveat_inv
------------------------------------------------------------

Goal Invariant 'qed_ok' (file tests/wp/wp_inv_in_loop.c, line 38):
Prove: true.

------------------------------------------------------------

Goal Loop assigns 'qed_ok':
Prove: true.

------------------------------------------------------------
------------------------------------------------------------
  Function double_loop
------------------------------------------------------------

Goal Invariant 'qed_ok' (file tests/wp/wp_inv_in_loop.c, line 46):
Prove: true.

------------------------------------------------------------

Goal Invariant 'qed_ok' (file tests/wp/wp_inv_in_loop.c, line 49):
Prove: true.

------------------------------------------------------------

Goal Loop assigns 'qed_ok':
Prove: true.

------------------------------------------------------------
------------------------------------------------------------
  Function goto_natural_loop with behavior qed_ok
------------------------------------------------------------

Goal Post-condition for 'qed_ok' 'qed_ok,ok' in 'goto_natural_loop':
Prove: true.

------------------------------------------------------------

Goal Invariant for 'qed_ok' 'qed_ok' (file tests/wp/wp_inv_in_loop.c, line 186):
Prove: true.

------------------------------------------------------------
------------------------------------------------------------
  Function goto_natural_loop with behavior without_inv
------------------------------------------------------------

Goal Post-condition for 'without_inv' 'qed_ko' in 'goto_natural_loop':
Prove: true.

------------------------------------------------------------
------------------------------------------------------------
  Function inv_from_init
------------------------------------------------------------

Goal Invariant 'qed_ok,I' (file tests/wp/wp_inv_in_loop.c, line 28):
Prove: true.

------------------------------------------------------------

Goal Loop assigns 'qed_ok':
Prove: true.

------------------------------------------------------------
------------------------------------------------------------
  Function non_natural_loop with behavior n_neg
------------------------------------------------------------

Goal Post-condition for 'n_neg' (file tests/wp/wp_inv_in_loop.c, line 121) in 'non_natural_loop':
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(n_2) /\
      is_sint32(non_natural_loop_0) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Pre-condition for 'n_neg' *)
  Have: n_2 < 0.
  (* Merge *)
  Either {
    Case:
      Let x_2 = 2 + x.
      Type: is_sint32(x) /\ is_sint32(x_2).
      Have: (10 = n) /\ (10 = n_2).
      (* Invariant for 'n_neg' *)
      Have: (10 = n) /\ (x <= 9) /\ (0 = (x % 2)).
      Have: non_natural_loop_0 = x_2.
    Case:
      Have: n_1 = n_2.
      If n_1 < 0
      Then { Have: 0 = non_natural_loop_0. Have: 10 = n. }
      Else {
        Have: 1 = x.
        Have: 20 = n.
        Have: 1 = x.
        Have: (1 = x) /\ (3 = non_natural_loop_0).
      }
  }
  (* Else *)
  Have: n <= non_natural_loop_0.
}
Prove: 10 = non_natural_loop_0.

------------------------------------------------------------

Goal Invariant for 'n_neg' (file tests/wp/wp_inv_in_loop.c, line 137):
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(n_2) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_2).
  (* Pre-condition for 'n_neg' *)
  Have: n_2 < 0.
  (* Merge *)
  Either {
    Case:
      Let x_3 = 2 + x_1.
      Type: is_sint32(x_1) /\ is_sint32(x_3).
      Have: (10 = n) /\ (10 = n_2).
      (* Invariant for 'n_neg' *)
      Have: (10 = n) /\ (x_1 <= 9) /\ (0 = (x_1 % 2)).
      Have: x = x_3.
    Case:
      Have: n_1 = n_2.
      If n_1 < 0
      Then { Have: 0 = x. Have: 10 = n. }
      Else {
        Have: 1 = x_1.
        Have: 20 = n.
        Have: 1 = x_1.
        Have: (1 = x_1) /\ (3 = x).
      }
  }
  (* Then *)
  Have: x < n.
}
Prove: (10 = n) /\ (0 = (x % 2)).

------------------------------------------------------------
------------------------------------------------------------
  Function non_natural_loop with behavior n_pos
------------------------------------------------------------

Goal Post-condition for 'n_pos' (file tests/wp/wp_inv_in_loop.c, line 124) in 'non_natural_loop':
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(n_2) /\
      is_sint32(non_natural_loop_0) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Pre-condition for 'n_pos' *)
  Have: 0 <= n_2.
  (* Merge *)
  Either {
    Case:
      Let x_2 = 2 + x.
      Type: is_sint32(x) /\ is_sint32(x_2).
      Have: (20 = n) /\ (20 = n_2).
      (* Invariant for 'n_pos' 'qed_ok' *)
      Have: 20 = n.
      Have: non_natural_loop_0 = x_2.
    Case:
      Have: n_1 = n_2.
      If n_1 < 0
      Then { Have: 0 = non_natural_loop_0. Have: 10 = n. }
      Else {
        Have: 1 = x.
        Have: 20 = n.
        Have: 1 = x.
        Have: (1 = x) /\ (3 = non_natural_loop_0).
      }
  }
  (* Else *)
  Have: n <= non_natural_loop_0.
}
Prove: 21 = non_natural_loop_0.

------------------------------------------------------------

Goal Invariant for 'n_pos' 'qed_ok' (file tests/wp/wp_inv_in_loop.c, line 139):
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(n_2) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_2).
  (* Pre-condition for 'n_pos' *)
  Have: 0 <= n_2.
  (* Merge *)
  Either {
    Case:
      Let x_3 = 2 + x_1.
      Type: is_sint32(x_1) /\ is_sint32(x_3).
      Have: (20 = n) /\ (20 = n_2).
      (* Invariant for 'n_pos' 'qed_ok' *)
      Have: 20 = n.
      Have: x = x_3.
    Case:
      Have: n_1 = n_2.
      If n_1 < 0
      Then { Have: 0 = x. Have: 10 = n. }
      Else {
        Have: 1 = x_1.
        Have: 20 = n.
        Have: 1 = x_1.
        Have: (1 = x_1) /\ (3 = x).
      }
  }
  (* Then *)
  Have: x < n.
}
Prove: 20 = n.

------------------------------------------------------------
------------------------------------------------------------
  Function razT2
------------------------------------------------------------

Goal Post-condition 'post' in 'razT2':
Prove: true.

------------------------------------------------------------

Goal Invariant 'Ii' (file tests/wp/wp_inv_in_loop.c, line 83):
Prove: true.

------------------------------------------------------------

Goal Invariant (file tests/wp/wp_inv_in_loop.c, line 88):
Prove: true.

------------------------------------------------------------

Goal Invariant (file tests/wp/wp_inv_in_loop.c, line 90):
Prove: true.

------------------------------------------------------------

Goal Loop assigns (file tests/wp/wp_inv_in_loop.c, line 86) (1/3):
Prove: true.

------------------------------------------------------------

Goal Loop assigns (file tests/wp/wp_inv_in_loop.c, line 86) (2/3):
Effect at line 87
Prove: true.

------------------------------------------------------------

Goal Loop assigns (file tests/wp/wp_inv_in_loop.c, line 86) (3/3):
Effect at line 91
Prove: true.

------------------------------------------------------------
------------------------------------------------------------
  Function razT2simple
------------------------------------------------------------

Goal Post-condition 'qed_ok,post' in 'razT2simple':
Prove: true.

------------------------------------------------------------

Goal Invariant 'qed_ok,I1' (file tests/wp/wp_inv_in_loop.c, line 63):
Prove: true.

------------------------------------------------------------

Goal Invariant 'qed_ok,I2' (file tests/wp/wp_inv_in_loop.c, line 70):
Prove: true.

------------------------------------------------------------

Goal Loop assigns (file tests/wp/wp_inv_in_loop.c, line 67) (1/3):
Prove: true.

------------------------------------------------------------

Goal Loop assigns (file tests/wp/wp_inv_in_loop.c, line 67) (2/3):
Effect at line 68
Prove: true.

------------------------------------------------------------

Goal Loop assigns (file tests/wp/wp_inv_in_loop.c, line 67) (3/3):
Effect at line 73
Prove: true.

------------------------------------------------------------
------------------------------------------------------------
  Function simple_inv
------------------------------------------------------------

Goal Post-condition 'qed_ok' in 'simple_inv':
Prove: true.

------------------------------------------------------------

Goal Invariant 'qed_ok' (file tests/wp/wp_inv_in_loop.c, line 18):
Prove: true.

------------------------------------------------------------
------------------------------------------------------------
  Function test_for_tag
------------------------------------------------------------

Goal Post-condition 'qed_ok' in 'test_for_tag':
Prove: true.

------------------------------------------------------------

Goal Invariant 'qed_ok' (file tests/wp/wp_inv_in_loop.c, line 152):
Prove: true.

------------------------------------------------------------

Goal Loop assigns 'qed_ok':
Prove: true.

------------------------------------------------------------
