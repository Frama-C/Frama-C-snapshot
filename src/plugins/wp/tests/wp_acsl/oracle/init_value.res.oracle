# frama-c -wp [...]
[kernel] Parsing tests/wp_acsl/init_value.i (no preprocessing)
[wp] Running WP plugin...
[wp] Loading driver 'share/wp.driver'
[wp] Warning: Missing RTE guards
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Pre-condition 'qed_ok,Struct_Simple_a' in 'main':
Prove: true.

------------------------------------------------------------

Goal Pre-condition 'qed_ok,Struct_Simple_b' in 'main':
Prove: true.

------------------------------------------------------------

Goal Pre-condition 'qed_ok,Simple_Array_0' in 'main':
Prove: true.

------------------------------------------------------------

Goal Pre-condition 'qed_ok,Simple_Array_1' in 'main':
Let x = t[1].
Assume {
  Type: is_sint32(x).
  (* Initializer *)
  Init: t[0] = 1.
  (* Initializer *)
  Init: forall i : Z. ((0 < i) -> ((i <= 1) -> (t[i] = 0))).
}
Prove: x = 0.

------------------------------------------------------------

Goal Pre-condition 'qed_ok,With_Array_Struct_5' in 'main':
Prove: true.

------------------------------------------------------------

Goal Pre-condition 'qed_ok,With_Array_Struct_3' in 'main':
Prove: true.

------------------------------------------------------------

Goal Pre-condition 'qed_ok,Sc_eq' in 'main':
Let a = sc0_0.F3_Sc_b.
Let a_1 = sc1_0.F3_Sc_b.
Assume {
  Type: IsS3_Sc(sc0_0) /\ IsS3_Sc(sc1_0).
  (* Initializer *)
  Init: (sc1_0.F3_Sc_a) = 1.
  (* Initializer *)
  Init: a_1[0] = 2.
  (* Initializer *)
  Init: a_1[1] = 3.
  (* Initializer *)
  Init: a_1[2] = 4.
  (* Initializer *)
  Init: (sc1_0.F3_Sc_c) = 5.
  (* Initializer *)
  Init: (sc0_0.F3_Sc_a) = 1.
  (* Initializer *)
  Init: a[0] = 2.
  (* Initializer *)
  Init: a[1] = 3.
  (* Initializer *)
  Init: a[2] = 4.
  (* Initializer *)
  Init: (sc0_0.F3_Sc_c) = 5.
}
Prove: EqS3_Sc(sc1_0, sc0_0).

------------------------------------------------------------

Goal Pre-condition 'qed_ok,Sc_t' in 'main':
Prove: true.

------------------------------------------------------------

Goal Pre-condition 'qed_ok,Sc_t' in 'main':
Prove: true.

------------------------------------------------------------

Goal Pre-condition 'qed_ok,Sc_c_2' in 'main':
Prove: true.

------------------------------------------------------------

Goal Pre-condition 'qed_ok,Sc_c_3' in 'main':
Prove: true.

------------------------------------------------------------

Goal Pre-condition 'qed_ok,Tab_no_init' in 'main':
Prove: true.

------------------------------------------------------------

Goal Pre-condition 'qed_ok,Tab_todo' in 'main':
Assume {
  Type: is_uint8(tab_0[5]).
  (* Goal *)
  When: (0 <= i) /\ (i <= 31) /\ is_sint32(i).
  (* Initializer *)
  Init: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= 31) -> (tab_0[i_1] = 0))).
}
Prove: tab_0[i] <= 255.

------------------------------------------------------------

Goal Pre-condition 'qed_ko,Sc_eq_ko' in 'main':
Let a = sc2_0.F3_Sc_b.
Let a_1 = sc3_0.F3_Sc_b.
Assume {
  Type: IsS3_Sc(sc2_0) /\ IsS3_Sc(sc3_0) /\ is_sint32(a[2]).
  (* Initializer *)
  Init: (sc3_0.F3_Sc_a) = 1.
  (* Initializer *)
  Init: a_1[0] = 2.
  (* Initializer *)
  Init: a_1[1] = 3.
  (* Initializer *)
  Init: a_1[2] = 4.
  (* Initializer *)
  Init: (sc3_0.F3_Sc_c) = 0.
  (* Initializer *)
  Init: (sc2_0.F3_Sc_a) = 1.
  (* Initializer *)
  Init: a[0] = 2.
  (* Initializer *)
  Init: a[1] = 3.
  (* Initializer *)
  Init: forall i : Z. ((2 <= i) -> ((i <= 2) -> (a[i] = 0))).
  (* Initializer *)
  Init: (sc2_0.F3_Sc_c) = 4.
}
Prove: EqS3_Sc(sc2_0, sc3_0).

------------------------------------------------------------

Goal Pre-condition 'qed_ko,Sc_t' in 'main':
Prove: false.

------------------------------------------------------------

Goal Pre-condition 'qed_ko,Sc_c_2' in 'main':
Prove: false.

------------------------------------------------------------

Goal Pre-condition 'qed_ko,Tab_no_init' in 'main':
Prove: false.

------------------------------------------------------------

Goal Pre-condition 'qed_ko,With_Array_Struct_3' in 'main':
Prove: false.

------------------------------------------------------------

Goal Pre-condition 'qed_ko,Simple_Array_1' in 'main':
Let x = t[1].
Assume {
  Type: is_sint32(x).
  (* Initializer *)
  Init: t[0] = 1.
  (* Initializer *)
  Init: forall i : Z. ((0 < i) -> ((i <= 1) -> (t[i] = 0))).
}
Prove: x = 1.

------------------------------------------------------------
