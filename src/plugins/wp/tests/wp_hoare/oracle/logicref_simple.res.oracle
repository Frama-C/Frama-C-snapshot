# frama-c -wp -wp-model 'Typed (Ref)' [...]
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/wp_hoare/logicref_simple.i (no preprocessing)
[wp] Running WP plugin...
.................................................
... Ref Usage
.................................................
... Initial state
  Nothing
............
... Function fsimple
   c
   __retres
............
... Function fsimple_array
  &t
   __retres
............
... Function ftwo_star
   d
   __retres
............
... Function fvpositive
   b
.................................................
[wp] Loading driver 'share/wp.driver'
[wp] warning: Missing RTE guards
------------------------------------------------------------
  Function fsimple
------------------------------------------------------------

Goal Post-condition (file tests/wp_hoare/logicref_simple.i, line 14) in 'fsimple':
Let x = Mint_0[c].
Assume {
  Type: is_sint32(x) /\ is_sint32(1 + x).
  (* Heap *)
  Have: region(c.base) <= 0.
  (* Pre-condition *)
  Have: P_simple(Mint_0, c).
}
Prove: 0 = x.

------------------------------------------------------------

Goal Assigns nothing in 'fsimple':
Effect at line 15
Prove: true.

------------------------------------------------------------
------------------------------------------------------------
  Function fsimple_array
------------------------------------------------------------

Goal Post-condition (file tests/wp_hoare/logicref_simple.i, line 19) in 'fsimple_array':
Let a = shift_A10_sint32(global(G_t_80), 0).
Let x = Mint_0[shift_sint32(a, 3)].
Assume {
  Type: is_sint32(x) /\ is_sint32(1 + x).
  (* Pre-condition *)
  Have: P_simple_array(Mint_0, a).
}
Prove: 0 = x.

------------------------------------------------------------

Goal Assigns nothing in 'fsimple_array':
Effect at line 20
Prove: true.

------------------------------------------------------------
------------------------------------------------------------
  Function ftwo_star
------------------------------------------------------------

Goal Post-condition (file tests/wp_hoare/logicref_simple.i, line 22) in 'ftwo_star':
Let x = Mint_0[Mptr_0[d]].
Assume {
  Type: is_sint32(x) /\ is_sint32(1 + x).
  (* Heap *)
  Have: (region(d.base) <= 0) /\ framed(Mptr_0).
  (* Pre-condition *)
  Have: P_two_star(Mptr_0, Mint_0, d).
}
Prove: 0 = x.

------------------------------------------------------------

Goal Assigns nothing in 'ftwo_star':
Effect at line 23
Prove: true.

------------------------------------------------------------
------------------------------------------------------------
  Function fvpositive
------------------------------------------------------------

Goal Post-condition (file tests/wp_hoare/logicref_simple.i, line 26) in 'fvpositive':
Prove: true.

------------------------------------------------------------

Goal Assertion 'OK' (file tests/wp_hoare/logicref_simple.i, line 30):
Assume {
  Type: is_sint32(Mint_0[b]).
  (* Heap *)
  Have: (region(b.base) <= 0) /\ linked(Malloc_0).
  (* Pre-condition *)
  Have: P_vpositive(Malloc_0, Mint_1, b).
}
Prove: valid_rw(Malloc_0, b, 1).

------------------------------------------------------------

Goal Assigns (file tests/wp_hoare/logicref_simple.i, line 26) in 'fvpositive':
Effect at line 31
Prove: true.

------------------------------------------------------------
