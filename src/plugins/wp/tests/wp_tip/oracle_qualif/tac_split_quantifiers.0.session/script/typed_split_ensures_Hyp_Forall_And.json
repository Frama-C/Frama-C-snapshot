[ { "header": "Split", "tactic": "Wp.split", "params": {},
    "select": { "select": "clause-step", "at": 0, "kind": "have",
                "target": "forall i_0,i_1,i_2:int.\n(P_Q1 1) /\\ (P_P1 i_0) /\\ (P_P2 i_1 i_2) /\\ (forall i_3:int.\n                                             (P_Q2 i_0 i_3))",
                "pattern": "\\F\\F\\F&P_Q1P_P1P_P2\\F1#3#2#1P_Q2" },
    "children": { "Distrib (forall and)": [ { "prover": "alt-ergo",
                                              "verdict": "unknown",
                                              "time": 0.051558971405 },
                                            { "header": "NOP",
                                              "tactic": "Wp.Test.NOP",
                                              "params": {},
                                              "select": { "select": "clause-step",
                                                          "at": 0,
                                                          "kind": "have",
                                                          "target": "(P_Q1 1) /\\ (forall i_0:int.\n             (P_P1 i_0)) /\\ (forall i_0,i_1:int.\n                             (P_P2 i_1 i_0))\n/\\ (forall i_0,i_1:int.\n    (P_Q2 i_0 i_1))",
                                                          "pattern": "&P_Q1\\F\\F\\F1P_P1\\F\\F#0P_P2P_Q2#0" },
                                              "children": { "Nop": [ { "prover": "alt-ergo",
                                                                    "verdict": "unknown",
                                                                    "time": 0.0513830184937 } ] } } ] } } ]
