[kernel] Parsing share/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/spec/conversion.c (with preprocessing)
/* Generated by Frama-C */
typedef int T;
typedef int T4[4];
typedef int *T_PTR;
typedef T_PTR T_PTR_T4[4];
void f(void);

/*@ lemma foo: 1.0 ≡ (float)1;
 */
/*@ axiomatic toto {
      logic ℤ g;
      
      predicate foo(ℝ x) ;
      
      }
 */
/*@ ensures 1.0 ≡ 1; */
void f(void)
{
  double B;
  /*@ assert B ≡ g; */ ;
  return;
}

/*@ ensures foo(\result); */
int g(void)
{
  int __retres;
  __retres = 0;
  return __retres;
}

T const X;
T const Tab[4];
T_PTR_T4 const Tab_Ptr =
  {(int *)(& X), (int *)(& X), (int *)(& X), (int *)(& X)};
/*@
axiomatic useless_logic_cast {
  logic ℤ v2= 1 + 1;
  
  logic int vX{L}= \at((int)X,L);
  
  logic int [4] vTab{L}= \at((T4)Tab,L);
  
  logic T_PTR_T4 * vTab_Ptr{L}= \at((T_PTR_T4 *)(&Tab_Ptr),L);
  
  }

*/

