[kernel] Parsing tests/spec/assigns_from_kf.i (no preprocessing)
[kernel:annot:missing-spec] tests/spec/assigns_from_kf.i:27: Warning: 
  Neither code nor specification for function both, generating default assigns from the prototype
[kernel:annot:missing-spec] tests/spec/assigns_from_kf.i:27: Warning: 
  Neither code nor specification for function both_r, generating default assigns from the prototype
[kernel:annot:missing-spec] tests/spec/assigns_from_kf.i:27: Warning: 
  Neither code nor specification for function g_both, generating default assigns from the prototype
[kernel:annot:missing-spec] tests/spec/assigns_from_kf.i:27: Warning: 
  Neither code nor specification for function g_both_r, generating default assigns from the prototype
[kernel:annot:missing-spec] tests/spec/assigns_from_kf.i:27: Warning: 
  Neither code nor specification for function g_nothing, generating default assigns from the prototype
[kernel:annot:missing-spec] tests/spec/assigns_from_kf.i:27: Warning: 
  Neither code nor specification for function g_nothing_r, generating default assigns from the prototype
[kernel:annot:missing-spec] tests/spec/assigns_from_kf.i:27: Warning: 
  Neither code nor specification for function g_something_non_ghost, generating default assigns from the prototype
[kernel:annot:missing-spec] tests/spec/assigns_from_kf.i:27: Warning: 
  Neither code nor specification for function g_something_non_ghost_r, generating default assigns from the prototype
[kernel:annot:missing-spec] tests/spec/assigns_from_kf.i:27: Warning: 
  Neither code nor specification for function nothing, generating default assigns from the prototype
[kernel:annot:missing-spec] tests/spec/assigns_from_kf.i:27: Warning: 
  Neither code nor specification for function nothing_r, generating default assigns from the prototype
[kernel:annot:missing-spec] tests/spec/assigns_from_kf.i:27: Warning: 
  Neither code nor specification for function something_ghost, generating default assigns from the prototype
[kernel:annot:missing-spec] tests/spec/assigns_from_kf.i:27: Warning: 
  Neither code nor specification for function something_ghost_r, generating default assigns from the prototype
[kernel:annot:missing-spec] tests/spec/assigns_from_kf.i:27: Warning: 
  Neither code nor specification for function something_non_ghost, generating default assigns from the prototype
[kernel:annot:missing-spec] tests/spec/assigns_from_kf.i:27: Warning: 
  Neither code nor specification for function something_non_ghost_r, generating default assigns from the prototype
/* Generated by Frama-C */
/*@ assigns \nothing; */
void nothing(void);

/*@ assigns \result;
    assigns \result \from \nothing; */
int nothing_r(void);

/*@ assigns *p;
    assigns *p \from *p; */
void something_non_ghost(int *p);

/*@ assigns *p;
    assigns *p \from *p; */
void something_ghost(void) /*@ ghost (int *p) */;

/*@ assigns \result, *p;
    assigns \result \from *p;
    assigns *p \from *p; */
int something_non_ghost_r(int *p);

/*@ assigns \result, *p;
    assigns \result \from \nothing;
    assigns *p \from *p;
 */
int something_ghost_r(void) /*@ ghost (int *p) */;

/*@ assigns *p, *gp;
    assigns *p \from *p, x;
    assigns *gp \from *p, *gp, x, gx;
 */
void both(int *p, int x) /*@ ghost (int *gp, int gx) */;

/*@ assigns \result, *p, *gp;
    assigns \result \from *p, x;
    assigns *p \from *p, x;
    assigns *gp \from *p, *gp, x, gx;
 */
int both_r(int *p, int x) /*@ ghost (int *gp, int gx) */;

/*@ ghost /@ assigns \nothing; @/
void g_nothing(void); */

/*@ ghost
/@ assigns \result;
   assigns \result \from \nothing; @/
int g_nothing_r(void); */

/*@ ghost
/@ assigns *p;
   assigns *p \from *p; @/
void g_something_non_ghost(int *p); */

/*@ ghost
/@ assigns \result, *p;
   assigns \result \from *p;
   assigns *p \from *p; @/
int g_something_non_ghost_r(int *p); */

/*@ ghost
/@ assigns *p, *gp;
   assigns *p \from *p, *gp, x, gx;
   assigns *gp \from *p, *gp, x, gx;
 @/
void g_both(int *p, int x, int *gp, int gx); */

/*@ ghost
/@ assigns \result, *p, *gp;
   assigns \result \from *p, *gp, x, gx;
   assigns *p \from *p, *gp, x, gx;
   assigns *gp \from *p, *gp, x, gx;
 @/
int g_both_r(int *p, int x, int *gp, int gx); */

void reference(void)
{
  nothing();
  nothing_r();
  something_non_ghost((int *)0);
  something_ghost() /*@ ghost ((int *)0) */;
  something_non_ghost_r((int *)0);
  something_ghost_r() /*@ ghost ((int *)0) */;
  both((int *)0,1) /*@ ghost ((int *)0,2) */;
  both_r((int *)0,1) /*@ ghost ((int *)0,2) */;
  /*@ ghost g_nothing(); */
  /*@ ghost g_nothing_r(); */
  /*@ ghost g_something_non_ghost((int *)0); */
  /*@ ghost g_something_non_ghost_r((int *)0); */
  /*@ ghost g_both((int *)0,1,(int *)0,2); */
  /*@ ghost g_both_r((int *)0,1,(int *)0,2); */
  return;
}


