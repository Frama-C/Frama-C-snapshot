[kernel] Parsing share/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/spec/recursive_with_label.i (no preprocessing)
/* Generated by Frama-C */
/*@
logic ℤ size_rec{L}(int *busybits, ℤ capa) =
  \at(capa≤0? 0:
        (*(busybits+(capa-1))≢0? 1+size_rec(busybits, capa-1):
           size_rec(busybits, capa-1)),
      L);
 */
/*@ ensures \result ≡ size_rec(\old(busybits), 0); */
int size(int * /*[0]*/ busybits)
{
  int __retres;
  __retres = 0;
  return __retres;
}

/*@ logic ℤ f{L}(int *p, ℤ l) = \at(l>0? 1+f(p+1, l-1): *p,L);
 */
/*@ predicate p{L}(int *p, ℤ l) = \at(l>0? p(p+1, l-1): \valid(p),L);
 */
/*@
inductive foo{L}(int *p, ℤ l) {
  case nil{L}: \at(∀ int *p; foo(p, 0),L);
  case other{L}: \at(∀ int *p, ℤ l;
                       l > 0 ⇒ \valid(p+l) ⇒ foo(p, l-1) ⇒ foo(p, l),
                     L);
  }

*/

