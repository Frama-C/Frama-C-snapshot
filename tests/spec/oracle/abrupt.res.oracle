[kernel] Parsing share/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/spec/abrupt.i (no preprocessing)
/* Generated by Frama-C */
int f(int c)
{
  int x;
  x = 0;
  /*@ breaks x ≡ 1; */
  if (! c) goto switch_0_0;
  else 
    if (c == 1) goto switch_0_1;
    else 
      if (c == 2) goto switch_0_2;
      else {
        goto switch_0_default;
        goto switch_0_break;
      }
  switch_0_0: x = 1;
  /*@ assert x ≡ 1; */ ;
  goto switch_0_break;
  switch_0_1: x = 3;
  switch_0_2: x ++;
  switch_0_default: ;
  x ++;
  switch_0_break: ;
  while (1) {
    while_1_continue: ;
    __sid_14_label: ;
    /*@ breaks x ≡ \old(x);
        continues x ≡ \old(x) + 1; */
    {
      if (x < c) {
        x ++;
        /*@ assert x ≡ \at(x,__sid_14_label) + 1; */ ;
        goto while_1_continue;
      }
      /*@ assert x ≡ \at(x,__sid_14_label); */ ;
      goto while_1_break;
    }
  }
  while_1_break: ;
  return x;
}

/*@ ensures \old(x) ≡ 1 ⇒ \result ≡ 1; */
int f5(int x)
{
  int y;
  y = 0;
  if (! (x == 1)) goto switch_0_break;
  switch_0_1:
    while (x > 0) 
      /*@ breaks x > 0; */
      /*@ assert x > 0; */
      goto while_1_break;
  while_1_break: ;
  y = 1;
  switch_0_break: ;
  return y;
}


