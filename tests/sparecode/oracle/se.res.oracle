[kernel] Parsing share/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/sparecode/se.i (no preprocessing)
[sparecode] remove unused code...
[sparecode] selecting function Se outputs and entry point
[value] Analyzing an incomplete application starting at Se
[value] Computing initial state
[value] Initial state computed
[value] Values of globals at initialization
  glob âˆˆ [--..--]
tests/sparecode/se.i:8:[kernel] warning: out of bounds write. assert \valid(s1);
tests/sparecode/se.i:12:[kernel] warning: out of bounds write. assert \valid(tab+e1);
tests/sparecode/se.i:14:[kernel] warning: out of bounds read. assert \valid_read(es);
[value] Recording results for Se
[value] done for function Se
[pdg] computing for function Se
[pdg] done for function Se
[sparecode] add selection in function 'Se'
[sparecode] selecting output zones glob; S_tab[0..1]; S_s1[0]; S_es[0]
[sparecode] add selection in function 'Se'
[sparecode] look for annotations in function Frama_C_bzero
[pdg] computing for function Frama_C_bzero
[from] Computing for function Frama_C_bzero
[from] Done for function Frama_C_bzero
[pdg] done for function Frama_C_bzero
[sparecode] look for annotations in function Frama_C_copy_block
[pdg] computing for function Frama_C_copy_block
[from] Computing for function Frama_C_copy_block
[from] Done for function Frama_C_copy_block
[pdg] done for function Frama_C_copy_block
[sparecode] look for annotations in function Se
[sparecode] finalize call input propagation
[sparecode] remove unused global declarations...
[sparecode] result in new project 'default without sparecode'.
/* Generated by Frama-C */
int glob;
void Se(int e1, int *es, int *s1, int *tab)
{
  *s1 = 0;
  glob = 10;
  if (e1 == 0) *s1 = 1; else *(tab + e1) = 5;
  if (*es == 1) *es = 0;
  return;
}


