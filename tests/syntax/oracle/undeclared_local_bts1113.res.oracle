[kernel] Parsing tests/syntax/undeclared_local_bts1113.c (with preprocessing)
/* Generated by Frama-C */
/*@ assigns \nothing;
    frees p; */
 __attribute__((__FC_BUILTIN__)) void __fc_vla_free(void *p);

/*@ assigns \result;
    assigns \result \from \nothing;
    allocates \result; */
 __attribute__((__FC_BUILTIN__)) void *__fc_vla_alloc(unsigned int size);

void funk(int rounds)
{
  unsigned int __lengthof_k;
  unsigned int __lengthof_kk;
  int i;
  unsigned int __lengthof_k_long_long_size;
  int k_positive_size[4 - 2];
  /*@ assert alloca_bounds: 0 < sizeof(int) * (2 * rounds) ≤ 4294967295; */
  ;
  __lengthof_k = (unsigned int)(2 * rounds);
  int *k = __fc_vla_alloc(sizeof(int) * __lengthof_k);
  /*@
  assert
  alloca_bounds: 0 < sizeof(int) * (unsigned int)(2 * rounds) ≤ 4294967295;
   */
  ;
  __lengthof_kk = (unsigned int)(2 * rounds);
  int *kk = __fc_vla_alloc(sizeof(int) * __lengthof_kk);
  long long j = (long long)(rounds * rounds);
  /*@ assert alloca_bounds: 0 < sizeof(int) * (j * 2) ≤ 4294967295; */ ;
  __lengthof_k_long_long_size = (unsigned int)(j * (long long)2);
  int *k_long_long_size =
    __fc_vla_alloc(sizeof(int) * __lengthof_k_long_long_size);
  i = 0;
  while (i < 2 * rounds) {
    *(k + i) = i;
    i ++;
  }
  __fc_vla_free((void *)k_long_long_size);
  __fc_vla_free((void *)kk);
  __fc_vla_free((void *)k);
  return;
}

int main(void)
{
  int __retres;
  funk(17);
  __retres = 0;
  return __retres;
}


