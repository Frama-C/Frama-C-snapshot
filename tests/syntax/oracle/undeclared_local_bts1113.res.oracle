[kernel] Parsing share/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/syntax/undeclared_local_bts1113.c (with preprocessing)
tests/syntax/undeclared_local_bts1113.c:3:[kernel] warning: Variable-sized local variable k
tests/syntax/undeclared_local_bts1113.c:4:[kernel] warning: Variable-sized local variable kk
tests/syntax/undeclared_local_bts1113.c:7:[kernel] warning: Variable-sized local variable k_long_long_size
/* Generated by Frama-C */
void *alloca(unsigned int);

void funk(int rounds)
{
  int *k;
  unsigned int __lengthof_k;
  int *kk;
  unsigned int __lengthof_kk;
  int i;
  long long j;
  int *k_long_long_size;
  unsigned int __lengthof_k_long_long_size;
  { /* sequence */
    /*@ assert alloca_bounds: 0 < sizeof(*k) * (2 * rounds) ≤ 4294967295;
     */
    ;
    __lengthof_k = (unsigned int)(2 * rounds);
    k = (int *)alloca(sizeof(*k) * __lengthof_k);
  }
  { /* sequence */
    /*@
    assert
    alloca_bounds:
      0 < sizeof(*kk) * (unsigned int)(2 * rounds) ≤ 4294967295;
     */
    ;
    __lengthof_kk = (unsigned int)(2 * rounds);
    kk = (int *)alloca(sizeof(*kk) * __lengthof_kk);
  }
  j = (long long)(rounds * rounds);
  { /* sequence */
    /*@
    assert
    alloca_bounds: 0 < sizeof(*k_long_long_size) * (j * 2) ≤ 4294967295; */
    ;
    __lengthof_k_long_long_size = (unsigned int)(j * (long long)2);
    k_long_long_size = (int *)alloca(sizeof(*k_long_long_size) * __lengthof_k_long_long_size);
  }
  i = 0;
  while (i < 2 * rounds) {
    *(k + i) = i;
    i ++;
  }
  return;
}

int main(void)
{
  int __retres;
  funk(17);
  __retres = 0;
  return __retres;
}


