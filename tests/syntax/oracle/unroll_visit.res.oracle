[kernel] Parsing share/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/syntax/unroll_visit.i (no preprocessing)
[value] Analyzing a complete application starting at main
[value] Computing initial state
[value] Initial state computed
[value] Values of globals at initialization
  
tests/syntax/unroll_visit.i:8:[value] assertion got status valid.
tests/syntax/unroll_visit.i:6:[value] entering loop for the first time
[value] Recording results for main
[value] done for function main
[value] ====== VALUES COMPUTED ======
[value] Values at end of function main:
  i âˆˆ {100}
[from] Computing for function main
[from] Done for function main
[from] ====== DEPENDENCIES COMPUTED ======
       These dependencies hold at termination for the executions that terminate:
[from] Function main:
  NO EFFECTS
[from] ====== END OF DEPENDENCIES ======
[inout] Out (internal) for function main:
          i
[inout] Inputs for function main:
          \nothing
/* Generated by Frama-C */
void main(void)
{
  int i;
  i = 0;
  if (! (i < 100)) goto unrolling_2_loop;
  i --;
  /*@ assert i < 100; */ ;
  i ++;
  i ++;
  unrolling_4_loop: ;
  if (! (i < 100)) goto unrolling_2_loop;
  i --;
  /*@ assert i < 100; */ ;
  i ++;
  i ++;
  unrolling_3_loop: ;
  /*@ loop pragma UNROLL 2;
      loop pragma UNROLL "done", 2; */
  while (i < 100) {
    i --;
    /*@ assert i < 100; */ ;
    i ++;
    i ++;
  }
  unrolling_2_loop: ;
  return;
}


