[kernel] Parsing tests/syntax/vla_goto2.i (no preprocessing)
/* Generated by Frama-C */
/*@ assigns \nothing;
    frees p; */
 __attribute__((__FC_BUILTIN__)) void __fc_vla_free(void *p);

/*@ assigns \result;
    assigns \result \from \nothing;
    allocates \result; */
 __attribute__((__FC_BUILTIN__)) void *__fc_vla_alloc(unsigned int size);

int case2(int arg)
{
  int __retres;
  {
    unsigned int __lengthof_a2;
    /*@ assert alloca_bounds: 0 < sizeof(int) * arg ≤ 4294967295; */ ;
    __lengthof_a2 = (unsigned int)arg;
    int *a2 = __fc_vla_alloc(sizeof(int) * __lengthof_a2);
    if (arg) {
      __fc_vla_free((void *)a2);
      goto L;
    }
    __fc_vla_free((void *)a2);
  }
  {
    unsigned int __lengthof_b2;
    L: ;
    /*@ assert alloca_bounds: 0 < sizeof(int) * arg ≤ 4294967295; */ ;
    __lengthof_b2 = (unsigned int)arg;
    int *b2 = __fc_vla_alloc(sizeof(int) * __lengthof_b2);
    __fc_vla_free((void *)b2);
  }
  __retres = 0;
  return __retres;
}

int case3(int arg)
{
  int __retres;
  {
    unsigned int __lengthof_vla;
    /*@ assert alloca_bounds: 0 < sizeof(int) * arg ≤ 4294967295; */ ;
    __lengthof_vla = (unsigned int)arg;
    int *vla = __fc_vla_alloc(sizeof(int) * __lengthof_vla);
    if (arg >= 10) {
      __retres = 1;
      __fc_vla_free((void *)vla);
      goto return_label;
    }
    __retres = 0;
    __fc_vla_free((void *)vla);
  }
  return_label: return __retres;
}


