[kernel] Parsing tests/syntax/merge_union.c (with preprocessing)
[kernel] Parsing tests/syntax/merge_union_2.c (with preprocessing)
[kernel] Parsing tests/syntax/merge_union_3.c (with preprocessing)
[kernel:linker:drop-conflicting-unused] Warning: 
  Incompatible declaration for G1:
  Definitions of type st are not isomorphic. Reason follows:
  Definitions of struct __anonstruct_st_2 are not isomorphic. Reason follows:
  incompatible attributes in composite types and/or field u
  struct __anonstruct_st_2 {
     char c ;
     un u ;
  };
  struct __anonstruct_st_2 {
     char c  __attribute__((__aligned__(1)));
     un u  __attribute__((__aligned__(1)));
  } __attribute__((__packed__, __aligned__(1)));
  
  First declaration was at tests/syntax/merge_union.h:11
  Current declaration is at tests/syntax/merge_union.h:11
  Old declaration is unused, silently removing it
/* Generated by Frama-C */
union __anonunion_un_1 {
   char t ;
   short s ;
} __attribute__((__packed__, __aligned__(1)));
typedef union __anonunion_un_1 un;
struct __anonstruct_st_3 {
   char c  __attribute__((__aligned__(1)));
   un u  __attribute__((__aligned__(1)));
} __attribute__((__packed__, __aligned__(1)));
typedef struct __anonstruct_st_3 st_2;
int f(un *u);

#pragma noalign
extern st_2 G1;

int g(un *u)
{
  int __retres;
  f(& G1.u);
  __retres = 0;
  return __retres;
}

#pragma noalign
int main(un *u)
{
  int __retres;
  g(& G1.u);
  __retres = 0;
  return __retres;
}


