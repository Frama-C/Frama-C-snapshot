diff tests/idct/oracle/ieee_1180_1990.res.oracle tests/idct/oracle_legacy/ieee_1180_1990.res.oracle
48d47
< tests/idct/idct.c:163:[value] warning: 2's complement assumed for overflow
49a49
> tests/idct/idct.c:163:[value] warning: 2's complement assumed for overflow
52d51
< tests/idct/idct.c:176:[value] warning: 2's complement assumed for overflow
53a53
> tests/idct/idct.c:176:[value] warning: 2's complement assumed for overflow
169d168
< tests/idct/idct.c:129:[value] warning: 2's complement assumed for overflow
170a170
> tests/idct/idct.c:129:[value] warning: 2's complement assumed for overflow
175,176d174
< tests/idct/ieee_1180_1990.c:218:[value] warning: 2's complement assumed for overflow
< tests/idct/ieee_1180_1990.c:218:[value] warning: accessing uninitialized left-value. assert \initialized(&m3[j][k]);
177a176,177
> tests/idct/ieee_1180_1990.c:218:[value] warning: accessing uninitialized left-value. assert \initialized(&m3[j][k]);
> tests/idct/ieee_1180_1990.c:218:[value] warning: 2's complement assumed for overflow
200,201d199
< tests/idct/ieee_1180_1990.c:242:[value] warning: 2's complement assumed for overflow
< tests/idct/ieee_1180_1990.c:242:[value] warning: accessing uninitialized left-value. assert \initialized(&m3[j][k]);
202a201,202
> tests/idct/ieee_1180_1990.c:242:[value] warning: accessing uninitialized left-value. assert \initialized(&m3[j][k]);
> tests/idct/ieee_1180_1990.c:242:[value] warning: 2's complement assumed for overflow
228,229d227
< tests/idct/ieee_1180_1990.c:264:[value] warning: 2's complement assumed for overflow
< tests/idct/ieee_1180_1990.c:264:[value] warning: accessing uninitialized left-value. assert \initialized(&m3[j][k]);
230a229,230
> tests/idct/ieee_1180_1990.c:264:[value] warning: accessing uninitialized left-value. assert \initialized(&m3[j][k]);
> tests/idct/ieee_1180_1990.c:264:[value] warning: 2's complement assumed for overflow
244,245d243
< tests/idct/ieee_1180_1990.c:288:[value] warning: 2's complement assumed for overflow
< tests/idct/ieee_1180_1990.c:288:[value] warning: accessing uninitialized left-value. assert \initialized(&m3[j][k]);
246a245,246
> tests/idct/ieee_1180_1990.c:288:[value] warning: accessing uninitialized left-value. assert \initialized(&m3[j][k]);
> tests/idct/ieee_1180_1990.c:288:[value] warning: 2's complement assumed for overflow
272,273d271
< tests/idct/ieee_1180_1990.c:310:[value] warning: 2's complement assumed for overflow
< tests/idct/ieee_1180_1990.c:310:[value] warning: accessing uninitialized left-value. assert \initialized(&m3[j][k]);
274a273,274
> tests/idct/ieee_1180_1990.c:310:[value] warning: accessing uninitialized left-value. assert \initialized(&m3[j][k]);
> tests/idct/ieee_1180_1990.c:310:[value] warning: 2's complement assumed for overflow
288,289d287
< tests/idct/ieee_1180_1990.c:334:[value] warning: 2's complement assumed for overflow
< tests/idct/ieee_1180_1990.c:334:[value] warning: accessing uninitialized left-value. assert \initialized(&m3[j][k]);
290a289,290
> tests/idct/ieee_1180_1990.c:334:[value] warning: accessing uninitialized left-value. assert \initialized(&m3[j][k]);
> tests/idct/ieee_1180_1990.c:334:[value] warning: 2's complement assumed for overflow
2394c2394
<             assert Value: initialisation: \initialized(&m3[j][k]);
---
>             assert Value: initialisation: \initialized(&m4[j][k]);
2397c2397
<             assert Value: initialisation: \initialized(&m4[j][k]);
---
>             assert Value: initialisation: \initialized(&m3[j][k]);
2406c2406
<             assert Value: initialisation: \initialized(&m3[j][k]);
---
>             assert Value: initialisation: \initialized(&m4[j][k]);
2409c2409
<             assert Value: initialisation: \initialized(&m4[j][k]);
---
>             assert Value: initialisation: \initialized(&m3[j][k]);
2418c2418
<             assert Value: initialisation: \initialized(&m3[j][k]);
---
>             assert Value: initialisation: \initialized(&m4[j][k]);
2421c2421
<             assert Value: initialisation: \initialized(&m4[j][k]);
---
>             assert Value: initialisation: \initialized(&m3[j][k]);
2430c2430
<             assert Value: initialisation: \initialized(&m3[j][k]);
---
>             assert Value: initialisation: \initialized(&m4[j][k]);
2433c2433
<             assert Value: initialisation: \initialized(&m4[j][k]);
---
>             assert Value: initialisation: \initialized(&m3[j][k]);
2442c2442
<             assert Value: initialisation: \initialized(&m3[j][k]);
---
>             assert Value: initialisation: \initialized(&m4[j][k]);
2445c2445
<             assert Value: initialisation: \initialized(&m4[j][k]);
---
>             assert Value: initialisation: \initialized(&m3[j][k]);
2454c2454
<             assert Value: initialisation: \initialized(&m3[j][k]);
---
>             assert Value: initialisation: \initialized(&m4[j][k]);
2457c2457
<             assert Value: initialisation: \initialized(&m4[j][k]);
---
>             assert Value: initialisation: \initialized(&m3[j][k]);
