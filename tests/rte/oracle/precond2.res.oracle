[kernel] Parsing share/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/rte/precond2.c (with preprocessing)
/* Generated by Frama-C */
int global = 15;
/*@ requires x > 0;
    requires (int)(x + y) ≢ 0; */
int f(int x, int y, float z)
{
  int __retres;
  __retres = (x + y) - (int)z;
  return __retres;
}

int g(int a, int b)
{
  int __retres;
  __retres = a / b;
  return __retres;
}

int main(void)
{
  int a;
  int b;
  int tmp_0;
  int tmp;
  a = 2;
  b = 3;
  { /* sequence */
    tmp = g(a,b);
    ;
  }
  tmp_0 = f(b - a,tmp,(float)1.0);
  return tmp_0;
}


[kernel] ================================
[kernel] printing status
[kernel] kf = Frama_C_bzero rte_gen_status = true precond_status = true
[kernel] kf = Frama_C_copy_block rte_gen_status = true precond_status = true
[kernel] kf = f rte_gen_status = false precond_status = false
[kernel] kf = g rte_gen_status = false precond_status = false
[kernel] kf = main rte_gen_status = false precond_status = false
[kernel] computing -rte-precond annotations
[rte] annotating function f
[rte] annotating function g
[rte] annotating function main
/* Generated by Frama-C */
int global = 15;
/*@ requires x > 0;
    requires (int)(x + y) ≢ 0; */
int f(int x, int y, float z)
{
  int __retres;
  __retres = (x + y) - (int)z;
  return __retres;
}

int g(int a, int b)
{
  int __retres;
  __retres = a / b;
  return __retres;
}

int main(void)
{
  int a;
  int b;
  int tmp_0;
  int tmp;
  a = 2;
  b = 3;
  { /* sequence */
    tmp = g(a,b);
    ;
  }
  /*@ behavior pre_f:
        requires (int)(b - a) > 0;
        requires (int)((int)(b - a) + tmp) ≢ 0;
  */
  tmp_0 = f(b - a,tmp,(float)1.0);
  return tmp_0;
}


[kernel] ================================
[kernel] printing status
[kernel] kf = Frama_C_bzero rte_gen_status = true precond_status = true
[kernel] kf = Frama_C_copy_block rte_gen_status = true precond_status = true
[kernel] kf = f rte_gen_status = false precond_status = true
[kernel] kf = g rte_gen_status = false precond_status = true
[kernel] kf = main rte_gen_status = false precond_status = true
[kernel] computing rte-div annotations
[rte] annotating function f
[rte] annotating function g
[rte] annotating function main
/* Generated by Frama-C */
int global = 15;
/*@ requires x > 0;
    requires (int)(x + y) ≢ 0; */
int f(int x, int y, float z)
{
  int __retres;
  __retres = (x + y) - (int)z;
  return __retres;
}

int g(int a, int b)
{
  int __retres;
  /*@ assert rte: division_by_zero: b ≢ 0; */
  __retres = a / b;
  return __retres;
}

int main(void)
{
  int a;
  int b;
  int tmp_0;
  int tmp;
  a = 2;
  b = 3;
  { /* sequence */
    tmp = g(a,b);
    ;
  }
  /*@ behavior pre_f:
        requires (int)(b - a) > 0;
        requires (int)((int)(b - a) + tmp) ≢ 0;
  */
  tmp_0 = f(b - a,tmp,(float)1.0);
  return tmp_0;
}


[kernel] ================================
[kernel] printing status
[kernel] kf = Frama_C_bzero rte_gen_status = true precond_status = true
[kernel] kf = Frama_C_copy_block rte_gen_status = true precond_status = true
[kernel] kf = f rte_gen_status = false precond_status = true
[kernel] kf = g rte_gen_status = false precond_status = true
[kernel] kf = main rte_gen_status = false precond_status = true
[kernel] removing rte-div alarms
/* Generated by Frama-C */
int global = 15;
/*@ requires x > 0;
    requires (int)(x + y) ≢ 0; */
int f(int x, int y, float z)
{
  int __retres;
  __retres = (x + y) - (int)z;
  return __retres;
}

int g(int a, int b)
{
  int __retres;
  __retres = a / b;
  return __retres;
}

int main(void)
{
  int a;
  int b;
  int tmp_0;
  int tmp;
  a = 2;
  b = 3;
  { /* sequence */
    tmp = g(a,b);
    ;
  }
  /*@ behavior pre_f:
        requires (int)(b - a) > 0;
        requires (int)((int)(b - a) + tmp) ≢ 0;
  */
  tmp_0 = f(b - a,tmp,(float)1.0);
  return tmp_0;
}


[kernel] ================================
[kernel] printing status
[kernel] kf = Frama_C_bzero rte_gen_status = true precond_status = true
[kernel] kf = Frama_C_copy_block rte_gen_status = true precond_status = true
[kernel] kf = f rte_gen_status = false precond_status = true
[kernel] kf = g rte_gen_status = false precond_status = true
[kernel] kf = main rte_gen_status = false precond_status = true
