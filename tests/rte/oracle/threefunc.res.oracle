[kernel] Parsing share/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/rte/threefunc.c (with preprocessing)
/* Generated by Frama-C */
int g(int x, int y)
{
  int __retres;
  __retres = x / y;
  return __retres;
}

int f(int x, int y)
{
  int __retres;
  if (x + y != 0) 
    if (x == 2147483647) 
      if (y == 1) {
        __retres = -1;
        goto return_label;
      }
      else {
        __retres = 0;
        goto return_label;
      }
    else {
      __retres = 0;
      goto return_label;
    }
  else {
    __retres = 1;
    goto return_label;
  }
  return_label: return __retres;
}

int main(void)
{
  int __retres;
  int x;
  int y;
  int i;
  x = 1;
  y = 2;
  i = 0;
  while (i < 20) {
    {
      int tmp;
      tmp = x + y;
      y = x - y;
      x = tmp;
    }
    i ++;
  }
  if (x > 0) 
    if (y > 0) {
      int tmp_0;
      int tmp_1;
      { /* sequence */
        tmp_0 = f(x,y);
        tmp_1 = g(x,y);
      }
      __retres = tmp_0 + tmp_1;
      goto return_label;
    }
    else {
      __retres = 0;
      goto return_label;
    }
  else {
    __retres = 0;
    goto return_label;
  }
  return_label: return __retres;
}


[kernel] ================================
[rte] annotating function f
[rte] annotating function g
[rte] annotating function main
/* Generated by Frama-C */
int g(int x, int y)
{
  int __retres;
  /*@ assert rte: division_by_zero: y ≢ 0; */
  /*@ assert rte: signed_overflow: x / y ≤ 2147483647; */
  __retres = x / y;
  return __retres;
}

int f(int x, int y)
{
  int __retres;
  /*@ assert rte: signed_overflow: -2147483648 ≤ x + y; */
  /*@ assert rte: signed_overflow: x + y ≤ 2147483647; */
  if (x + y != 0) 
    if (x == 2147483647) 
      if (y == 1) {
        __retres = -1;
        goto return_label;
      }
      else {
        __retres = 0;
        goto return_label;
      }
    else {
      __retres = 0;
      goto return_label;
    }
  else {
    __retres = 1;
    goto return_label;
  }
  return_label: return __retres;
}

int main(void)
{
  int __retres;
  int x;
  int y;
  int i;
  x = 1;
  y = 2;
  i = 0;
  while (i < 20) {
    {
      int tmp;
      /*@ assert rte: signed_overflow: -2147483648 ≤ x + y; */
      /*@ assert rte: signed_overflow: x + y ≤ 2147483647; */
      tmp = x + y;
      /*@ assert rte: signed_overflow: -2147483648 ≤ x - y; */
      /*@ assert rte: signed_overflow: x - y ≤ 2147483647; */
      y = x - y;
      x = tmp;
    }
    /*@ assert rte: signed_overflow: i + 1 ≤ 2147483647; */
    i ++;
  }
  if (x > 0) 
    if (y > 0) {
      int tmp_0;
      int tmp_1;
      { /* sequence */
        tmp_0 = f(x,y);
        tmp_1 = g(x,y);
      }
      /*@ assert rte: signed_overflow: -2147483648 ≤ tmp_0 + tmp_1; */
      /*@ assert rte: signed_overflow: tmp_0 + tmp_1 ≤ 2147483647; */
      __retres = tmp_0 + tmp_1;
      goto return_label;
    }
    else {
      __retres = 0;
      goto return_label;
    }
  else {
    __retres = 0;
    goto return_label;
  }
  return_label: return __retres;
}


[kernel] ================================
[kernel] printing status
[kernel] kf = Frama_C_bzero rte_gen_status = true precond_status = true
[kernel] kf = Frama_C_copy_block rte_gen_status = true precond_status = true
[kernel] kf = f rte_gen_status = true precond_status = true
[kernel] kf = g rte_gen_status = true precond_status = true
[kernel] kf = main rte_gen_status = true precond_status = true
[kernel] Removing some rte annotations
/* Generated by Frama-C */
int g(int x, int y)
{
  int __retres;
  /*@ assert rte: division_by_zero: y ≢ 0; */
  __retres = x / y;
  return __retres;
}

int f(int x, int y)
{
  int __retres;
  if (x + y != 0) 
    if (x == 2147483647) 
      if (y == 1) {
        __retres = -1;
        goto return_label;
      }
      else {
        __retres = 0;
        goto return_label;
      }
    else {
      __retres = 0;
      goto return_label;
    }
  else {
    __retres = 1;
    goto return_label;
  }
  return_label: return __retres;
}

int main(void)
{
  int __retres;
  int x;
  int y;
  int i;
  x = 1;
  y = 2;
  i = 0;
  while (i < 20) {
    {
      int tmp;
      tmp = x + y;
      y = x - y;
      x = tmp;
    }
    i ++;
  }
  if (x > 0) 
    if (y > 0) {
      int tmp_0;
      int tmp_1;
      { /* sequence */
        tmp_0 = f(x,y);
        tmp_1 = g(x,y);
      }
      __retres = tmp_0 + tmp_1;
      goto return_label;
    }
    else {
      __retres = 0;
      goto return_label;
    }
  else {
    __retres = 0;
    goto return_label;
  }
  return_label: return __retres;
}


[kernel] ================================
[kernel] printing status
[kernel] kf = Frama_C_bzero rte_gen_status = true precond_status = true
[kernel] kf = Frama_C_copy_block rte_gen_status = true precond_status = true
[kernel] kf = f rte_gen_status = true precond_status = true
[kernel] kf = g rte_gen_status = true precond_status = true
[kernel] kf = main rte_gen_status = true precond_status = true
[rte] annotating function f
[rte] annotating function main
/* Generated by Frama-C */
int g(int x, int y)
{
  int __retres;
  /*@ assert rte: division_by_zero: y ≢ 0; */
  __retres = x / y;
  return __retres;
}

int f(int x, int y)
{
  int __retres;
  /*@ assert rte: signed_overflow: -2147483648 ≤ x + y; */
  /*@ assert rte: signed_overflow: x + y ≤ 2147483647; */
  if (x + y != 0) 
    if (x == 2147483647) 
      if (y == 1) {
        __retres = -1;
        goto return_label;
      }
      else {
        __retres = 0;
        goto return_label;
      }
    else {
      __retres = 0;
      goto return_label;
    }
  else {
    __retres = 1;
    goto return_label;
  }
  return_label: return __retres;
}

int main(void)
{
  int __retres;
  int x;
  int y;
  int i;
  x = 1;
  y = 2;
  i = 0;
  while (i < 20) {
    {
      int tmp;
      /*@ assert rte: signed_overflow: -2147483648 ≤ x + y; */
      /*@ assert rte: signed_overflow: x + y ≤ 2147483647; */
      tmp = x + y;
      /*@ assert rte: signed_overflow: -2147483648 ≤ x - y; */
      /*@ assert rte: signed_overflow: x - y ≤ 2147483647; */
      y = x - y;
      x = tmp;
    }
    /*@ assert rte: signed_overflow: i + 1 ≤ 2147483647; */
    i ++;
  }
  if (x > 0) 
    if (y > 0) {
      int tmp_0;
      int tmp_1;
      { /* sequence */
        tmp_0 = f(x,y);
        tmp_1 = g(x,y);
      }
      /*@ assert rte: signed_overflow: -2147483648 ≤ tmp_0 + tmp_1; */
      /*@ assert rte: signed_overflow: tmp_0 + tmp_1 ≤ 2147483647; */
      __retres = tmp_0 + tmp_1;
      goto return_label;
    }
    else {
      __retres = 0;
      goto return_label;
    }
  else {
    __retres = 0;
    goto return_label;
  }
  return_label: return __retres;
}


[kernel] ================================
[kernel] printing status
[kernel] kf = Frama_C_bzero rte_gen_status = false precond_status = true
[kernel] kf = Frama_C_copy_block rte_gen_status = true precond_status = true
[kernel] kf = f rte_gen_status = true precond_status = true
[kernel] kf = g rte_gen_status = true precond_status = true
[kernel] kf = main rte_gen_status = true precond_status = true
