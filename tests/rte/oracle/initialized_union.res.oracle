[kernel] Parsing tests/rte/initialized_union.c (with preprocessing)
[rte] annotating function main
/* Generated by Frama-C */
union U {
   char c ;
   int i ;
   double f ;
};
union U2 {
   int i1 ;
   int i2 ;
};
union U3 {
   union U u ;
   union U2 u2 ;
};
struct S {
   union U u ;
};
union empty {
   
};
union U u_global;
int main(void)
{
  int __retres;
  union U u_local1;
  union U u_local2;
  union U2 u2_local1;
  union U2 u2_local2;
  union U3 u3_local1;
  union U3 u3_local2;
  union empty e;
  struct S s1;
  struct S s2;
  u_local1.c = (char)1;
  /*@ assert
      rte: initialization_of_union:
        \initialized(&u_local1.c) ∨ \initialized(&u_local1.i) ∨
        \initialized(&u_local1.f);
  */
  u_local2 = u_local1;
  /*@ assert rte: initialization: \initialized(&u_local1.i); */
  u2_local1.i2 = u_local1.i;
  /*@ assert
      rte: initialization_of_union:
        \initialized(&u2_local1.i1) ∨ \initialized(&u2_local1.i2);
  */
  u2_local2 = u2_local1;
  /*@ assert
      rte: initialization_of_union:
        \initialized(&u_local1.c) ∨ \initialized(&u_local1.i) ∨
        \initialized(&u_local1.f);
  */
  u3_local1.u = u_local1;
  /*@ assert
      rte: initialization_of_union:
        \initialized(&u3_local1.u) ∨ \initialized(&u3_local1.u2);
  */
  u3_local2 = u3_local1;
  double f = u_global.f;
  s1.u.c = (char)'a';
  /*@ assert
      rte: initialization_of_union:
        \initialized(&s1.u.c) ∨ \initialized(&s1.u.i) ∨
        \initialized(&s1.u.f);
  */
  s2.u = s1.u;
  union empty e1 = e;
  __retres = 0;
  /*@ assert rte: initialization: \initialized(&__retres); */
  return __retres;
}


