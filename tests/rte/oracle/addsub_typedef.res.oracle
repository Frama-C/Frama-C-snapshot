[kernel] Parsing share/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/rte/addsub_typedef.c (with preprocessing)
[rte] annotating function main
tests/rte/addsub_typedef.c:11:[rte] warning: guaranteed RTE:
               assert signed_overflow: 0x7fffffff + 0x7fffffff ≤ 2147483647;
tests/rte/addsub_typedef.c:12:[rte] warning: guaranteed RTE:
               assert signed_overflow: -2147483648 ≤ (int)(-0x7fffffff) - 0x7fffffff;
tests/rte/addsub_typedef.c:13:[rte] warning: guaranteed RTE:
               assert
               signed_overflow: -2147483648 ≤ (int)(-((int)((int)(-0x7fffffff) - 1))) - 1;
tests/rte/addsub_typedef.c:13:[rte] warning: guaranteed RTE:
               assert signed_overflow: -2147483647 ≤ (int)(-0x7fffffff) - 1;
/* Generated by Frama-C */
typedef int tint;
int main(void)
{
  int __retres;
  tint x;
  tint y;
  tint z;
  x = 0;
  y = 0;
  z = 0;
  /*@ assert rte: signed_overflow: 0x7fffffff + 0x7fffffff ≤ 2147483647; */
  z = 0x7fffffff + 0x7fffffff;
  /*@ assert
      rte: signed_overflow: -2147483648 ≤ (int)(-0x7fffffff) - 0x7fffffff;
  */
  z = -0x7fffffff - 0x7fffffff;
  /*@ assert
      rte: signed_overflow:
        -2147483648 ≤ (int)(-((int)((int)(-0x7fffffff) - 1))) - 1;
  */
  /*@ assert rte: signed_overflow: -2147483647 ≤ (int)(-0x7fffffff) - 1; */
  z = - (-0x7fffffff - 1) - 1;
  z = 0x7fffffff + 0;
  z = -0x7fffffff - 1;
  /*@ assert rte: signed_overflow: -2147483648 ≤ x + y; */
  /*@ assert rte: signed_overflow: x + y ≤ 2147483647; */
  z = x + y;
  /*@ assert rte: signed_overflow: -2147483648 ≤ (int)(-0x7ffffffc) - y; */
  z = -0x7ffffffc - y;
  /*@ assert rte: signed_overflow: -2147483648 ≤ (int)(-x) - 0x7ffffffc; */
  /*@ assert rte: signed_overflow: -2147483647 ≤ x; */
  z = - x - 0x7ffffffc;
  /*@ assert rte: signed_overflow: 0x7ffffffc + y ≤ 2147483647; */
  z = 0x7ffffffc + y;
  /*@ assert rte: signed_overflow: x + 0x7ffffffc ≤ 2147483647; */
  z = x + 0x7ffffffc;
  __retres = 0;
  return __retres;
}


