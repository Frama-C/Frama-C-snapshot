[kernel] Parsing tests/rte/gnu_zero_length.c (with preprocessing)
[rte] annotating function main
/* Generated by Frama-C */
#include "stdlib.h"
struct S {
   unsigned int length ;
   int fam[0] ;
};
int main(void)
{
  int __retres;
  struct S *tmp_0;
  unsigned int l = (unsigned int)3;
  struct S *s = malloc(sizeof(*tmp_0) + sizeof(int) * l);
  if (s) {
    /*@ assert rte: mem_access: \valid(&s->length); */
    s->length = l;
    {
      int i = 0;
      while (1) {
        /*@ assert rte: mem_access: \valid_read(&s->length); */
        if (! ((unsigned int)i < s->length)) break;
        /*@ assert rte: index_bound: 0 â‰¤ i; */
        /*@ assert rte: mem_access: \valid(&s->fam[i]); */
        s->fam[i] = i;
        /*@ assert rte: signed_overflow: i + 1 â‰¤ 2147483647; */
        i ++;
      }
    }
    /*@ assert rte: mem_access: \valid_read(&s->length); */
    /*@ assert
        rte: mem_access: \valid_read(&s->fam[(unsigned int)(s->length - 1)]);
    */
    __retres = s->fam[s->length - (unsigned int)1];
    goto return_label;
  }
  __retres = 0;
  return_label: return __retres;
}


