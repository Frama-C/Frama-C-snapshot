[kernel] Parsing share/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/slicing/call_demo.c (with preprocessing)
[slicing] slicing requests in progress...
[value] Analyzing a complete application starting at main
[value] Computing initial state
[value] Initial state computed
[value] Values of globals at initialization
  
tests/slicing/call_demo.c:22:[value] entering loop for the first time
[value] computing for function oper <- main.
        Called from tests/slicing/call_demo.c:23.
[value] Recording results for oper
[value] Done for function oper
[value] computing for function oper <- main.
        Called from tests/slicing/call_demo.c:23.
[value] Recording results for oper
[value] Done for function oper
[value] computing for function oper <- main.
        Called from tests/slicing/call_demo.c:23.
[value] Recording results for oper
[value] Done for function oper
[value] computing for function oper <- main.
        Called from tests/slicing/call_demo.c:23.
tests/slicing/call_demo.c:13:[kernel] warning: signed overflow. assert *s+i ≤ 2147483647;
tests/slicing/call_demo.c:14:[kernel] warning: signed overflow. assert *p*i ≤ 2147483647;
[value] Recording results for oper
[value] Done for function oper
[value] computing for function oper <- main.
        Called from tests/slicing/call_demo.c:23.
[value] Recording results for oper
[value] Done for function oper
[value] computing for function call1 <- main.
        Called from tests/slicing/call_demo.c:25.
[value] using specification for function call1
[value] Done for function call1
[value] computing for function call2 <- main.
        Called from tests/slicing/call_demo.c:26.
[value] using specification for function call2
[value] Done for function call2
[value] Recording results for main
[value] done for function main
[slicing] making slicing project 'Slicing'...
[slicing] interpreting slicing requests from the command line...
[pdg] computing for function main
[from] Computing for function oper
[from] Done for function oper
[from] Computing for function call1
[from] Done for function call1
[from] Computing for function call2
[from] Done for function call2
[pdg] done for function main
[slicing] applying all slicing requests...
[slicing] applying 0 actions...
[slicing] applying all slicing requests...
[slicing] applying 1 actions...
[slicing] applying actions: 1/1...
[pdg] computing for function oper
[pdg] done for function oper
[slicing] exporting project to 'Slicing export'...
[slicing] applying all slicing requests...
[slicing] applying 0 actions...
[sparecode] remove unused global declarations from project 'Slicing export tmp'
[sparecode] removed unused global declarations in new project 'Slicing export'
/* Generated by Frama-C */
extern int call2(int v);

void oper_slice_1(int *p, int i)
{
  *p *= i;
  return;
}

void main(int n)
{
  int i;
  int product;
  product = 1;
  i = 0;
  while (i < n) {
    oper_slice_1(& product,i);
    i ++;
  }
  call2(product);
  return;
}


