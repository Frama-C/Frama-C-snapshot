[kernel] Parsing tests/slicing/bts709.c (with preprocessing)
[slicing] slicing requests in progress...
[value] Analyzing a complete application starting at main
[value] Computing initial state
[value] Initial state computed
[value:initial-state] Values of globals at initialization
  inp1 IN {0}
  var1 IN {0}
  var2 IN {0}
[value] tests/slicing/bts709.c:46: entering loop for the first time
[value] computing for function inputsOf_testcase_func <- main.
  Called from tests/slicing/bts709.c:47.
[value] computing for function nondet_int <- inputsOf_testcase_func <- main.
  Called from tests/slicing/bts709.c:55.
[kernel:annot:missing-spec] tests/slicing/bts709.c:55: Warning: 
  Neither code nor specification for function nondet_int, generating default assigns from the prototype
[value] using specification for function nondet_int
[value] Done for function nondet_int
[value] computing for function nondet_int <- inputsOf_testcase_func <- main.
  Called from tests/slicing/bts709.c:56.
[value] Done for function nondet_int
[value] computing for function nondet_int <- inputsOf_testcase_func <- main.
  Called from tests/slicing/bts709.c:57.
[value] Done for function nondet_int
[value] Recording results for inputsOf_testcase_func
[value] Done for function inputsOf_testcase_func
[value] computing for function func <- main.
  Called from tests/slicing/bts709.c:48.
[value] computing for function __FC_assert <- func <- main.
  Called from tests/slicing/bts709.c:38.
[value] using specification for function __FC_assert
[value:alarm] tests/slicing/bts709.c:38: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[value] Done for function __FC_assert
[value] Recording results for func
[value] Done for function func
[value] computing for function inputsOf_testcase_func <- main.
  Called from tests/slicing/bts709.c:47.
[value] computing for function nondet_int <- inputsOf_testcase_func <- main.
  Called from tests/slicing/bts709.c:55.
[value] Done for function nondet_int
[value] computing for function nondet_int <- inputsOf_testcase_func <- main.
  Called from tests/slicing/bts709.c:56.
[value] Done for function nondet_int
[value] computing for function nondet_int <- inputsOf_testcase_func <- main.
  Called from tests/slicing/bts709.c:57.
[value] Done for function nondet_int
[value] Recording results for inputsOf_testcase_func
[value] Done for function inputsOf_testcase_func
[value] Recording results for main
[value] done for function main
[slicing] initializing slicing ...
[slicing] interpreting slicing requests from the command line...
[pdg] computing for function func
[from] Computing for function __FC_assert
[from] Done for function __FC_assert
[pdg] done for function func
[slicing] applying all slicing requests...
[slicing] applying 0 actions...
[slicing] applying all slicing requests...
[slicing] applying 1 actions...
[slicing] applying actions: 1/1...
[pdg] computing for function main
[from] Computing for function inputsOf_testcase_func
[from] Computing for function nondet_int <-inputsOf_testcase_func
[from] Done for function nondet_int
[from] Done for function inputsOf_testcase_func
[from] Computing for function func
[from] Done for function func
[pdg] done for function main
[pdg] computing for function inputsOf_testcase_func
[pdg] done for function inputsOf_testcase_func
[slicing] exporting project to 'Slicing export'...
[slicing] applying all slicing requests...
[slicing] applying 0 actions...
[sparecode] remove unused global declarations from project 'Slicing export tmp'
[sparecode] removed unused global declarations in new project 'Slicing export'
/* Generated by Frama-C */
#include "assert.h"
void inputsOf_testcase_func_slice_1(void);

int inp1;
int var1;
int var2;
void func_slice_1(void)
{
  if (1 == inp1) {
    var1 = 1;
    var2 = 1;
  }
  else 
    if (2 == inp1) {
      var1 = 2;
      var2 = 2;
    }
    else 
      if (3 == inp1) {
        var1 = 3;
        var2 = 3;
      }
  /*@ slice pragma stmt; */
  if (65 != var2) __FC_assert((5 != var1) != 0,"tests/slicing/bts709.c",38,
                              "5 != var1");
  return;
}

void main(void)
{
  int _noOfIter_;
  _noOfIter_ = 0;
  while (_noOfIter_ < 1) {
    inputsOf_testcase_func_slice_1();
    func_slice_1();
    _noOfIter_ ++;
  }
  return;
}

int nondet_int(void);

void inputsOf_testcase_func_slice_1(void)
{
  inp1 = nondet_int();
  var1 = nondet_int();
  var2 = nondet_int();
  return;
}


[kernel] Parsing tests/slicing/result/ocode_0_bts709.i (no preprocessing)
[kernel:typing:implicit-function-declaration] tests/slicing/result/ocode_0_bts709.i:25: Warning: 
  Calling undeclared function __FC_assert. Old style K&R code?
