[kernel] Parsing share/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/pdg/simple_intra_slice.c (with preprocessing)
[value] Analyzing a complete application starting at main
[value] Computing initial state
[value] Initial state computed
[value:initial-state] Values of globals at initialization
  Unknown ∈ {0}
  G ∈ {0}
  S ∈ {0}
  S1 ∈ {0}
  S2 ∈ {0}
tests/pdg/simple_intra_slice.c:98:[value] entering loop for the first time
tests/pdg/simple_intra_slice.c:99:[value] warning: signed overflow. assert -2147483648 ≤ uninit - 1;
tests/pdg/simple_intra_slice.c:99:[value] warning: signed overflow. assert Unknown + 1 ≤ 2147483647;
tests/pdg/simple_intra_slice.c:99:[value] warning: signed overflow. assert -2147483648 ≤ Unknown - 1;
tests/pdg/simple_intra_slice.c:100:[value] entering loop for the first time
tests/pdg/simple_intra_slice.c:101:[value] warning: signed overflow. assert -2147483648 ≤ uninit2 - 1;
tests/pdg/simple_intra_slice.c:101:[value] warning: signed overflow. assert S.a + 1 ≤ 2147483647;
tests/pdg/simple_intra_slice.c:101:[value] warning: signed overflow. assert -2147483648 ≤ S.a - 1;
[value] computing for function f2 <- main.
        Called from tests/pdg/simple_intra_slice.c:103.
[value] computing for function f1 <- f2 <- main.
        Called from tests/pdg/simple_intra_slice.c:23.
[value] Recording results for f1
[value] Done for function f1
[value] Recording results for f2
[value] Done for function f2
[value] computing for function f3 <- main.
        Called from tests/pdg/simple_intra_slice.c:104.
[value] Recording results for f3
[value] Done for function f3
[value] computing for function f4 <- main.
        Called from tests/pdg/simple_intra_slice.c:105.
[value] Recording results for f4
[value] Done for function f4
[value] computing for function f5 <- main.
        Called from tests/pdg/simple_intra_slice.c:106.
[value] Recording results for f5
[value] Done for function f5
[value] computing for function f6 <- main.
        Called from tests/pdg/simple_intra_slice.c:107.
tests/pdg/simple_intra_slice.c:59:[value] entering loop for the first time
tests/pdg/simple_intra_slice.c:71:[value] warning: signed overflow. assert -2147483648 ≤ 10 * n;
tests/pdg/simple_intra_slice.c:71:[value] warning: signed overflow. assert 10 * n ≤ 2147483647;
[value] Recording results for f6
[value] Done for function f6
tests/pdg/simple_intra_slice.c:107:[value] warning: signed overflow. assert res + tmp_3 ≤ 2147483647;
                                  (tmp_3 from f6(Unknown))
[value] computing for function f7 <- main.
        Called from tests/pdg/simple_intra_slice.c:108.
tests/pdg/simple_intra_slice.c:79:[value] warning: signed overflow. assert S.a + 3 ≤ 2147483647;
tests/pdg/simple_intra_slice.c:82:[value] warning: signed overflow. assert s0.a + 1 ≤ 2147483647;
[value] Recording results for f7
[value] Done for function f7
[value] computing for function f8 <- main.
        Called from tests/pdg/simple_intra_slice.c:110.
[value] Recording results for f8
[value] Done for function f8
[value] computing for function f8 <- main.
        Called from tests/pdg/simple_intra_slice.c:112.
[value] Recording results for f8
[value] Done for function f8
[value] Recording results for main
[value] done for function main
[pdg] computing for function f1
[pdg] done for function f1
[pdg] computing for function f2
[from] Computing for function f1
[from] Done for function f1
[pdg] done for function f2
[pdg] computing for function f3
[pdg] done for function f3
[pdg] computing for function f4
[pdg] done for function f4
[pdg] computing for function f5
[pdg] done for function f5
[pdg] computing for function f6
[pdg] done for function f6
[pdg] computing for function f7
[pdg] done for function f7
[pdg] computing for function f8
[pdg] done for function f8
[pdg] computing for function main
[from] Computing for function f2
[from] Done for function f2
[from] Computing for function f3
[from] Done for function f3
[from] Computing for function f4
[from] Done for function f4
[from] Computing for function f5
[from] Done for function f5
[from] Computing for function f6
[from] Done for function f6
[from] Computing for function f7
[from] Done for function f7
[from] Computing for function f8
[from] Done for function f8
[pdg] done for function main
[pdg] ====== PDG GRAPH COMPUTED ======
[pdg] PDG for f1
 {n1}: InCtrl
 {n2}: VarDecl : x
   -[a--]-> 3
 {n3}: In1
   -[a--]-> 2
 {n4}: VarDecl : y
   -[a--]-> 5
 {n5}: In2
   -[a--]-> 4
 {n6}: VarDecl : a
 {n7}: VarDecl : b
 {n8}: VarDecl : __retres
 {n9}: a = 1;
   -[-c-]-> 1
   -[a--]-> 6
 {n10}: b = 2;
   -[-c-]-> 1
   -[a--]-> 7
 {n11}: G = x + a;
   -[-c-]-> 1
   -[--d]-> 2
   -[--d]-> 3
   -[--d]-> 6
   -[--d]-> 9
 {n12}: __retres = y + b;
   -[-c-]-> 1
   -[--d]-> 4
   -[--d]-> 5
   -[--d]-> 7
   -[a--]-> 8
   -[--d]-> 10
 {n13}: return __retres;
   -[-c-]-> 1
   -[--d]-> 8
   -[--d]-> 12
 {n14}: OutRet
   -[--d]-> 13
[pdg] PDG for f2
 {n15}: InCtrl
 {n16}: VarDecl : a
 {n17}: VarDecl : b
 {n18}: VarDecl : c
 {n19}: VarDecl : tmp
 {n20}: a = 1;
   -[-c-]-> 15
   -[a--]-> 16
 {n21}: b = a + 1;
   -[-c-]-> 15
   -[--d]-> 16
   -[a--]-> 17
   -[--d]-> 20
 {n22}: c = 3;
   -[-c-]-> 15
   -[a--]-> 18
 {n23}: Call11-InCtrl : tmp = f1(b,c);
   -[-c-]-> 15
 {n24}: Call11-In1 : tmp = f1(b,c);
   -[-c-]-> 15
   -[--d]-> 17
   -[--d]-> 21
   -[-c-]-> 23
 {n25}: Call11-In2 : tmp = f1(b,c);
   -[-c-]-> 15
   -[--d]-> 18
   -[--d]-> 22
   -[-c-]-> 23
 {n26}: Call11-Out(G) : tmp = f1(b,c);
   -[-c-]-> 15
   -[-c-]-> 23
   -[--d]-> 24
 {n27}: Call11-OutRet : tmp = f1(b,c);
   -[-c-]-> 15
   -[a--]-> 19
   -[-c-]-> 23
   -[--d]-> 25
 {n28}: return tmp;
   -[-c-]-> 15
   -[--d]-> 19
   -[--d]-> 27
 {n29}: OutRet
   -[--d]-> 28
[pdg] PDG for f3
 {n30}: InCtrl
 {n31}: VarDecl : c
   -[a--]-> 32
 {n32}: In1
   -[a--]-> 31
 {n33}: VarDecl : a
 {n34}: VarDecl : b
 {n35}: VarDecl : x
 {n36}: a = 1;
   -[-c-]-> 30
   -[a--]-> 33
 {n37}: b = 2;
   -[-c-]-> 30
   -[a--]-> 34
 {n38}: x = 0;
   -[-c-]-> 30
   -[a--]-> 35
 {n39}: c > Unknown
   -[-c-]-> 30
   -[--d]-> 31
   -[--d]-> 32
   -[--d]-> 44
 {n40}: x = b;
   -[-c-]-> 30
   -[--d]-> 34
   -[a--]-> 35
   -[--d]-> 37
   -[-c-]-> 39
 {n41}: G = a;
   -[-c-]-> 30
   -[--d]-> 33
   -[--d]-> 36
   -[-c-]-> 39
 {n42}: return x;
   -[-c-]-> 30
   -[--d]-> 35
   -[--d]-> 38
   -[--d]-> 40
 {n43}: OutRet
   -[--d]-> 42
 {n44}: In(Unknown)
[pdg] PDG for f4
 {n45}: InCtrl
 {n46}: VarDecl : c
   -[a--]-> 47
 {n47}: In1
   -[a--]-> 46
 {n48}: VarDecl : a
 {n49}: VarDecl : b
 {n50}: VarDecl : x
 {n51}: a = 1;
   -[-c-]-> 45
   -[a--]-> 48
 {n52}: b = 2;
   -[-c-]-> 45
   -[a--]-> 49
 {n53}: x = 0;
   -[-c-]-> 45
   -[a--]-> 50
 {n54}: c > Unknown
   -[-c-]-> 45
   -[--d]-> 46
   -[--d]-> 47
   -[--d]-> 59
 {n55}: G = a;
   -[-c-]-> 45
   -[--d]-> 48
   -[--d]-> 51
   -[-c-]-> 54
 {n56}: x = b;
   -[-c-]-> 45
   -[--d]-> 49
   -[a--]-> 50
   -[--d]-> 52
   -[-c-]-> 54
 {n57}: return x;
   -[-c-]-> 45
   -[--d]-> 50
   -[--d]-> 53
   -[--d]-> 56
 {n58}: OutRet
   -[--d]-> 57
 {n59}: In(Unknown)
[pdg] PDG for f5
 {n60}: InCtrl
 {n61}: VarDecl : c
   -[a--]-> 62
 {n62}: In1
   -[a--]-> 61
 {n63}: VarDecl : x
 {n64}: x = 0;
   -[-c-]-> 60
   -[a--]-> 63
 {n65}: c > Unknown
   -[-c-]-> 60
   -[--d]-> 61
   -[--d]-> 62
   -[--d]-> 78
 {n66}: goto Lsuite;
   -[-c-]-> 60
   -[-c-]-> 65
   -[-c-]-> 67
 {n67}: Lsuite:
   -[-c-]-> 60
 {n68}: x ++;
   -[-c-]-> 60
   -[a-d]-> 63
   -[--d]-> 64
   -[-c-]-> 65
   -[-c-]-> 66
 {n69}: Lsuite: ;
   -[-c-]-> 60
 {n70}: c < Unknown
   -[-c-]-> 60
   -[--d]-> 61
   -[--d]-> 62
   -[--d]-> 78
 {n71}: goto L2;
   -[-c-]-> 60
   -[-c-]-> 70
   -[-c-]-> 72
 {n72}: L2:
   -[-c-]-> 60
 {n73}: G ++;
   -[-c-]-> 60
   -[-c-]-> 70
   -[-c-]-> 71
   -[--d]-> 77
 {n74}: L2: x ++;
   -[-c-]-> 60
   -[a-d]-> 63
   -[--d]-> 64
   -[--d]-> 68
 {n75}: return x;
   -[-c-]-> 60
   -[--d]-> 63
   -[--d]-> 74
 {n76}: OutRet
   -[--d]-> 75
 {n77}: In(G)
 {n78}: In(Unknown)
[pdg] PDG for f6
 {n79}: InCtrl
 {n80}: VarDecl : n
   -[a--]-> 81
 {n81}: In1
   -[a--]-> 80
 {n82}: VarDecl : i
 {n83}: VarDecl : __retres
 {n84}: i = 0;
   -[-c-]-> 79
   -[a--]-> 82
 {n85}: while(1)
   -[-c-]-> 79
   -[-c-]-> 85
   -[-c-]-> 86
   -[-c-]-> 87
   -[-c-]-> 88
   -[-c-]-> 93
   -[-c-]-> 94
 {n86}: n < 10
   -[-c-]-> 79
   -[--d]-> 80
   -[--d]-> 81
   -[-c-]-> 85
   -[-c-]-> 86
   -[-c-]-> 87
   -[-c-]-> 88
   -[--d]-> 91
   -[-c-]-> 93
   -[-c-]-> 94
 {n87}: block
   -[-c-]-> 79
   -[-c-]-> 85
   -[-c-]-> 86
   -[-c-]-> 87
   -[-c-]-> 88
   -[-c-]-> 93
   -[-c-]-> 94
 {n88}: Unknown > 3
   -[-c-]-> 79
   -[-c-]-> 85
   -[-c-]-> 86
   -[-c-]-> 87
   -[-c-]-> 88
   -[-c-]-> 93
   -[-c-]-> 94
   -[--d]-> 103
 {n89}: n % 2
   -[-c-]-> 79
   -[--d]-> 80
   -[--d]-> 81
   -[-c-]-> 85
   -[-c-]-> 86
   -[-c-]-> 87
   -[-c-]-> 88
   -[--d]-> 91
   -[-c-]-> 93
   -[-c-]-> 94
 {n90}: continue;
   -[-c-]-> 79
   -[-c-]-> 85
   -[-c-]-> 86
   -[-c-]-> 87
   -[-c-]-> 88
   -[-c-]-> 89
   -[-c-]-> 93
   -[-c-]-> 94
 {n91}: n ++;
   -[-c-]-> 79
   -[a-d]-> 80
   -[--d]-> 81
   -[-c-]-> 85
   -[-c-]-> 86
   -[-c-]-> 87
   -[-c-]-> 88
   -[-c-]-> 89
   -[-c-]-> 90
   -[--d]-> 91
   -[-c-]-> 93
   -[-c-]-> 94
 {n92}: i = 1;
   -[-c-]-> 79
   -[a--]-> 82
   -[-c-]-> 85
   -[-c-]-> 86
   -[-c-]-> 87
   -[-c-]-> 88
   -[-c-]-> 93
   -[-c-]-> 94
 {n93}: break;
   -[-c-]-> 79
   -[-c-]-> 85
   -[-c-]-> 86
   -[-c-]-> 87
   -[-c-]-> 88
   -[-c-]-> 93
   -[-c-]-> 94
 {n94}: break;
   -[-c-]-> 79
   -[-c-]-> 85
   -[-c-]-> 86
   -[-c-]-> 87
   -[-c-]-> 88
   -[-c-]-> 93
   -[-c-]-> 94
 {n95}: i
   -[-c-]-> 79
   -[--d]-> 82
   -[--d]-> 84
   -[--d]-> 92
 {n96}: __retres = 0;
   -[-c-]-> 79
   -[a--]-> 83
   -[-c-]-> 95
 {n97}: __retres = 10 * n;
   -[-c-]-> 79
   -[--d]-> 80
   -[--d]-> 81
   -[a--]-> 83
   -[--d]-> 91
   -[-c-]-> 95
 {n98}: goto return_label;
   -[-c-]-> 79
   -[-c-]-> 95
   -[-c-]-> 99
 {n99}: return_label:
   -[-c-]-> 79
 {n100}: goto return_label;
   -[-c-]-> 79
   -[-c-]-> 95
   -[-c-]-> 99
 {n101}: return_label: return __retres;
   -[-c-]-> 79
   -[--d]-> 83
   -[--d]-> 96
   -[--d]-> 97
 {n102}: OutRet
   -[--d]-> 101
 {n103}: In(Unknown)
[pdg] PDG for f7
 {n104}: InCtrl
 {n105}: VarDecl : s0
   -[a--]-> 106
 {n106}: In1
   -[a--]-> 105
 {n107}: VarDecl : x
 {n108}: x = S.a;
   -[-c-]-> 104
   -[a--]-> 107
   -[--d]-> 114
 {n109}: x > 0
   -[-c-]-> 104
   -[--d]-> 107
   -[--d]-> 108
 {n110}: S.a += 3;
   -[-c-]-> 104
   -[-c-]-> 109
   -[--d]-> 114
 {n111}: (s0.a) ++;
   -[-c-]-> 104
   -[a-d]-> 105
   -[--d]-> 106
   -[-c-]-> 109
 {n112}: S = s0;
   -[-c-]-> 104
   -[--d]-> 105
   -[--d]-> 106
   -[-c-]-> 109
   -[--d]-> 111
 {n113}: return;
   -[-c-]-> 104
 {n114}: In(S.a)
[pdg] PDG for f8
 {n115}: InCtrl
 {n116}: VarDecl : ps
   -[a--]-> 117
 {n117}: In1
   -[a--]-> 116
 {n118}: (ps->a) ++;
   -[-c-]-> 115
   -[a-d]-> 116
   -[a-d]-> 117
   -[--d]-> 123
   -[--d]-> 124
 {n119}: (ps->b) ++;
   -[-c-]-> 115
   -[a-d]-> 116
   -[a-d]-> 117
   -[--d]-> 121
   -[--d]-> 122
 {n120}: return;
   -[-c-]-> 115
 {n121}: In(S1.b)
 {n122}: In(S2.b)
 {n123}: In(S1.a)
 {n124}: In(S2.a)
[pdg] PDG for main
 {n125}: InCtrl
 {n126}: VarDecl : res
 {n127}: VarDecl : uninit
 {n128}: VarDecl : uninit2
 {n129}: VarDecl : tmp
 {n130}: VarDecl : tmp_0
 {n131}: VarDecl : tmp_1
 {n132}: VarDecl : tmp_2
 {n133}: VarDecl : tmp_3
 {n134}: res = 0;
   -[-c-]-> 125
   -[a--]-> 126
 {n135}: uninit = 0;
   -[-c-]-> 125
   -[a--]-> 127
 {n136}: uninit2 = 0;
   -[-c-]-> 125
   -[a--]-> 128
 {n137}: while(1)
   -[-c-]-> 125
   -[-c-]-> 137
   -[-c-]-> 138
   -[-c-]-> 142
 {n138}: uninit
   -[-c-]-> 125
   -[--d]-> 127
   -[--d]-> 135
   -[-c-]-> 137
   -[-c-]-> 138
   -[-c-]-> 142
 {n139}: uninit - 1
   -[-c-]-> 125
   -[--d]-> 127
   -[--d]-> 135
   -[-c-]-> 137
   -[-c-]-> 138
   -[-c-]-> 142
 {n140}: Unknown ++;
   -[-c-]-> 125
   -[-c-]-> 137
   -[-c-]-> 138
   -[-c-]-> 139
   -[--d]-> 140
   -[--d]-> 141
   -[-c-]-> 142
   -[--d]-> 200
 {n141}: Unknown --;
   -[-c-]-> 125
   -[-c-]-> 137
   -[-c-]-> 138
   -[-c-]-> 139
   -[--d]-> 140
   -[--d]-> 141
   -[-c-]-> 142
   -[--d]-> 200
 {n142}: break;
   -[-c-]-> 125
   -[-c-]-> 137
   -[-c-]-> 138
   -[-c-]-> 142
 {n143}: while(1)
   -[-c-]-> 125
   -[-c-]-> 137
   -[-c-]-> 138
   -[-c-]-> 142
   -[-c-]-> 143
   -[-c-]-> 144
   -[-c-]-> 148
 {n144}: uninit2
   -[-c-]-> 125
   -[--d]-> 128
   -[--d]-> 136
   -[-c-]-> 137
   -[-c-]-> 138
   -[-c-]-> 142
   -[-c-]-> 143
   -[-c-]-> 144
   -[-c-]-> 148
 {n145}: uninit2 - 1
   -[-c-]-> 125
   -[--d]-> 128
   -[--d]-> 136
   -[-c-]-> 137
   -[-c-]-> 138
   -[-c-]-> 142
   -[-c-]-> 143
   -[-c-]-> 144
   -[-c-]-> 148
 {n146}: (S.a) ++;
   -[-c-]-> 125
   -[-c-]-> 137
   -[-c-]-> 138
   -[-c-]-> 142
   -[-c-]-> 143
   -[-c-]-> 144
   -[-c-]-> 145
   -[--d]-> 146
   -[--d]-> 147
   -[-c-]-> 148
   -[--d]-> 201
 {n147}: (S.a) --;
   -[-c-]-> 125
   -[-c-]-> 137
   -[-c-]-> 138
   -[-c-]-> 142
   -[-c-]-> 143
   -[-c-]-> 144
   -[-c-]-> 145
   -[--d]-> 146
   -[--d]-> 147
   -[-c-]-> 148
   -[--d]-> 201
 {n148}: break;
   -[-c-]-> 125
   -[-c-]-> 137
   -[-c-]-> 138
   -[-c-]-> 142
   -[-c-]-> 143
   -[-c-]-> 144
   -[-c-]-> 148
 {n149}: unspecified sequence
   -[-c-]-> 125
 {n150}: Call104-InCtrl : tmp = f2();
   -[-c-]-> 125
   -[-c-]-> 149
 {n151}: Call104-Out(G) : tmp = f2();
   -[-c-]-> 125
   -[-c-]-> 149
   -[-c-]-> 150
 {n152}: Call104-OutRet : tmp = f2();
   -[-c-]-> 125
   -[a--]-> 129
   -[-c-]-> 149
   -[-c-]-> 150
 {n153}: res += tmp;
   -[-c-]-> 125
   -[a-d]-> 126
   -[--d]-> 129
   -[--d]-> 134
   -[-c-]-> 149
   -[--d]-> 152
 {n154}: unspecified sequence
   -[-c-]-> 125
 {n155}: Call107-InCtrl : tmp_0 = f3(1);
   -[-c-]-> 125
   -[-c-]-> 154
 {n156}: Call107-In1 : tmp_0 = f3(1);
   -[-c-]-> 125
   -[-c-]-> 154
   -[-c-]-> 155
 {n157}: Call107-Out(G) : tmp_0 = f3(1);
   -[-c-]-> 125
   -[--d]-> 140
   -[--d]-> 141
   -[-c-]-> 154
   -[-c-]-> 155
   -[--d]-> 156
   -[--d]-> 200
 {n158}: Call107-OutRet : tmp_0 = f3(1);
   -[-c-]-> 125
   -[a--]-> 130
   -[--d]-> 140
   -[--d]-> 141
   -[-c-]-> 154
   -[-c-]-> 155
   -[--d]-> 156
   -[--d]-> 200
 {n159}: res += tmp_0;
   -[-c-]-> 125
   -[a-d]-> 126
   -[--d]-> 130
   -[--d]-> 153
   -[-c-]-> 154
   -[--d]-> 158
 {n160}: unspecified sequence
   -[-c-]-> 125
 {n161}: Call110-InCtrl : tmp_1 = f4(1);
   -[-c-]-> 125
   -[-c-]-> 160
 {n162}: Call110-In1 : tmp_1 = f4(1);
   -[-c-]-> 125
   -[-c-]-> 160
   -[-c-]-> 161
 {n163}: Call110-Out(G) : tmp_1 = f4(1);
   -[-c-]-> 125
   -[--d]-> 140
   -[--d]-> 141
   -[-c-]-> 160
   -[-c-]-> 161
   -[--d]-> 162
   -[--d]-> 200
 {n164}: Call110-OutRet : tmp_1 = f4(1);
   -[-c-]-> 125
   -[a--]-> 131
   -[--d]-> 140
   -[--d]-> 141
   -[-c-]-> 160
   -[-c-]-> 161
   -[--d]-> 162
   -[--d]-> 200
 {n165}: res += tmp_1;
   -[-c-]-> 125
   -[a-d]-> 126
   -[--d]-> 131
   -[--d]-> 159
   -[-c-]-> 160
   -[--d]-> 164
 {n166}: unspecified sequence
   -[-c-]-> 125
 {n167}: Call113-InCtrl : tmp_2 = f5(1);
   -[-c-]-> 125
   -[-c-]-> 166
 {n168}: Call113-In1 : tmp_2 = f5(1);
   -[-c-]-> 125
   -[-c-]-> 166
   -[-c-]-> 167
 {n169}: Call113-Out(G) : tmp_2 = f5(1);
   -[-c-]-> 125
   -[--d]-> 140
   -[--d]-> 141
   -[--d](G)-> 151
   -[--d](G)-> 157
   -[--d](G)-> 163
   -[-c-]-> 166
   -[-c-]-> 167
   -[--d]-> 168
   -[--d]-> 200
 {n170}: Call113-OutRet : tmp_2 = f5(1);
   -[-c-]-> 125
   -[a--]-> 132
   -[--d]-> 140
   -[--d]-> 141
   -[-c-]-> 166
   -[-c-]-> 167
   -[--d]-> 168
   -[--d]-> 200
 {n171}: res += tmp_2;
   -[-c-]-> 125
   -[a-d]-> 126
   -[--d]-> 132
   -[--d]-> 165
   -[-c-]-> 166
   -[--d]-> 170
 {n172}: unspecified sequence
   -[-c-]-> 125
 {n173}: Call116-InCtrl : tmp_3 = f6(Unknown);
   -[-c-]-> 125
   -[-c-]-> 172
 {n174}: Call116-In1 : tmp_3 = f6(Unknown);
   -[-c-]-> 125
   -[--d]-> 140
   -[--d]-> 141
   -[-c-]-> 172
   -[-c-]-> 173
   -[--d]-> 200
 {n175}: Call116-OutRet : tmp_3 = f6(Unknown);
   -[-c-]-> 125
   -[a--]-> 133
   -[--d]-> 140
   -[--d]-> 141
   -[-c-]-> 172
   -[-c-]-> 173
   -[--d]-> 174
   -[--d]-> 200
 {n176}: res += tmp_3;
   -[-c-]-> 125
   -[a-d]-> 126
   -[--d]-> 133
   -[--d]-> 171
   -[-c-]-> 172
   -[--d]-> 175
 {n177}: Call118-InCtrl : f7(S);
   -[-c-]-> 125
 {n178}: Call118-In1 : f7(S);
   -[-c-]-> 125
   -[--d]-> 146
   -[--d]-> 147
   -[-c-]-> 177
   -[--d]-> 202
 {n179}: Call118-Out(S.a) : f7(S);
   -[-c-]-> 125
   -[--d]-> 146
   -[--d]-> 147
   -[-c-]-> 177
   -[--d]-> 178
   -[--d]-> 201
 {n180}: Call118-Out(S{.b; .c}) : f7(S);
   -[-c-]-> 125
   -[--d]-> 146
   -[--d]-> 147
   -[-c-]-> 177
   -[--d]-> 178
   -[--d]-> 201
 {n181}: Unknown
   -[-c-]-> 125
   -[--d]-> 140
   -[--d]-> 141
   -[--d]-> 200
 {n182}: Call121-InCtrl : f8(& S1);
   -[-c-]-> 125
   -[-c-]-> 181
 {n183}: Call121-In1 : f8(& S1);
   -[-c-]-> 125
   -[-c-]-> 181
   -[-c-]-> 182
 {n184}: Call121-Out(S1.a) : f8(& S1);
   -[-c-]-> 125
   -[-c-]-> 181
   -[-c-]-> 182
   -[--d]-> 183
   -[--d]-> 198
   -[--d]-> 199
 {n185}: Call121-Out(S1.b) : f8(& S1);
   -[-c-]-> 125
   -[-c-]-> 181
   -[-c-]-> 182
   -[--d]-> 183
   -[--d]-> 196
   -[--d]-> 197
 {n186}: Call121-Out(S2.a) : f8(& S1);
   -[-c-]-> 125
   -[-c-]-> 181
   -[-c-]-> 182
   -[--d]-> 183
   -[--d]-> 198
   -[--d]-> 199
 {n187}: Call121-Out(S2.b) : f8(& S1);
   -[-c-]-> 125
   -[-c-]-> 181
   -[-c-]-> 182
   -[--d]-> 183
   -[--d]-> 196
   -[--d]-> 197
 {n188}: Call122-InCtrl : f8(& S2);
   -[-c-]-> 125
   -[-c-]-> 181
 {n189}: Call122-In1 : f8(& S2);
   -[-c-]-> 125
   -[-c-]-> 181
   -[-c-]-> 188
 {n190}: Call122-Out(S1.a) : f8(& S2);
   -[-c-]-> 125
   -[-c-]-> 181
   -[-c-]-> 188
   -[--d]-> 189
   -[--d]-> 198
   -[--d]-> 199
 {n191}: Call122-Out(S1.b) : f8(& S2);
   -[-c-]-> 125
   -[-c-]-> 181
   -[-c-]-> 188
   -[--d]-> 189
   -[--d]-> 196
   -[--d]-> 197
 {n192}: Call122-Out(S2.a) : f8(& S2);
   -[-c-]-> 125
   -[-c-]-> 181
   -[-c-]-> 188
   -[--d]-> 189
   -[--d]-> 198
   -[--d]-> 199
 {n193}: Call122-Out(S2.b) : f8(& S2);
   -[-c-]-> 125
   -[-c-]-> 181
   -[-c-]-> 188
   -[--d]-> 189
   -[--d]-> 196
   -[--d]-> 197
 {n194}: return res;
   -[-c-]-> 125
   -[--d]-> 126
   -[--d]-> 176
 {n195}: OutRet
   -[--d]-> 194
 {n196}: In(S1.b)
 {n197}: In(S2.b)
 {n198}: In(S1.a)
 {n199}: In(S2.a)
 {n200}: In(Unknown)
 {n201}: In(S.a)
 {n202}: In(S)
