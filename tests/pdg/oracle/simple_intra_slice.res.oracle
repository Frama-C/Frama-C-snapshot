[kernel] Parsing tests/pdg/simple_intra_slice.c (with preprocessing)
[value] Analyzing a complete application starting at main
[value] Computing initial state
[value] Initial state computed
[value:initial-state] Values of globals at initialization
  Unknown ∈ {0}
  G ∈ {0}
  S ∈ {0}
  S1 ∈ {0}
  S2 ∈ {0}
[value] tests/pdg/simple_intra_slice.c:98: entering loop for the first time
[value:alarm] tests/pdg/simple_intra_slice.c:99: Warning: 
  signed overflow. assert -2147483648 ≤ uninit - 1;
[value:alarm] tests/pdg/simple_intra_slice.c:99: Warning: 
  signed overflow. assert Unknown + 1 ≤ 2147483647;
[value:alarm] tests/pdg/simple_intra_slice.c:99: Warning: 
  signed overflow. assert -2147483648 ≤ Unknown - 1;
[value] tests/pdg/simple_intra_slice.c:100: entering loop for the first time
[value:alarm] tests/pdg/simple_intra_slice.c:101: Warning: 
  signed overflow. assert -2147483648 ≤ uninit2 - 1;
[value:alarm] tests/pdg/simple_intra_slice.c:101: Warning: 
  signed overflow. assert S.a + 1 ≤ 2147483647;
[value:alarm] tests/pdg/simple_intra_slice.c:101: Warning: 
  signed overflow. assert -2147483648 ≤ S.a - 1;
[value] computing for function f2 <- main.
  Called from tests/pdg/simple_intra_slice.c:103.
[value] computing for function f1 <- f2 <- main.
  Called from tests/pdg/simple_intra_slice.c:23.
[value] Recording results for f1
[value] Done for function f1
[value] Recording results for f2
[value] Done for function f2
[value] computing for function f3 <- main.
  Called from tests/pdg/simple_intra_slice.c:104.
[value] Recording results for f3
[value] Done for function f3
[value] computing for function f4 <- main.
  Called from tests/pdg/simple_intra_slice.c:105.
[value] Recording results for f4
[value] Done for function f4
[value] computing for function f5 <- main.
  Called from tests/pdg/simple_intra_slice.c:106.
[value] Recording results for f5
[value] Done for function f5
[value] computing for function f6 <- main.
  Called from tests/pdg/simple_intra_slice.c:107.
[value] tests/pdg/simple_intra_slice.c:59: entering loop for the first time
[value:alarm] tests/pdg/simple_intra_slice.c:71: Warning: 
  signed overflow. assert -2147483648 ≤ 10 * n;
[value:alarm] tests/pdg/simple_intra_slice.c:71: Warning: 
  signed overflow. assert 10 * n ≤ 2147483647;
[value] Recording results for f6
[value] Done for function f6
[value:alarm] tests/pdg/simple_intra_slice.c:107: Warning: 
  signed overflow. assert res + tmp_3 ≤ 2147483647;
                   (tmp_3 from f6(Unknown))
[value] computing for function f7 <- main.
  Called from tests/pdg/simple_intra_slice.c:108.
[value:alarm] tests/pdg/simple_intra_slice.c:79: Warning: 
  signed overflow. assert S.a + 3 ≤ 2147483647;
[value:alarm] tests/pdg/simple_intra_slice.c:82: Warning: 
  signed overflow. assert s0.a + 1 ≤ 2147483647;
[value] Recording results for f7
[value] Done for function f7
[value] computing for function f8 <- main.
  Called from tests/pdg/simple_intra_slice.c:110.
[value] Recording results for f8
[value] Done for function f8
[value] computing for function f8 <- main.
  Called from tests/pdg/simple_intra_slice.c:112.
[value] Recording results for f8
[value] Done for function f8
[value] Recording results for main
[value] done for function main
[pdg] computing for function f1
[pdg] done for function f1
[pdg] computing for function f2
[from] Computing for function f1
[from] Done for function f1
[pdg] done for function f2
[pdg] computing for function f3
[pdg] done for function f3
[pdg] computing for function f4
[pdg] done for function f4
[pdg] computing for function f5
[pdg] done for function f5
[pdg] computing for function f6
[pdg] done for function f6
[pdg] computing for function f7
[pdg] done for function f7
[pdg] computing for function f8
[pdg] done for function f8
[pdg] computing for function main
[from] Computing for function f2
[from] Done for function f2
[from] Computing for function f3
[from] Done for function f3
[from] Computing for function f4
[from] Done for function f4
[from] Computing for function f5
[from] Done for function f5
[from] Computing for function f6
[from] Done for function f6
[from] Computing for function f7
[from] Done for function f7
[from] Computing for function f8
[from] Done for function f8
[pdg] done for function main
[pdg] ====== PDG GRAPH COMPUTED ======
[pdg] PDG for f1
 {n1}: InCtrl
 {n2}: VarDecl : x
   -[a--]-> 3
 {n3}: In1
   -[a--]-> 2
 {n4}: VarDecl : y
   -[a--]-> 5
 {n5}: In2
   -[a--]-> 4
 {n6}: VarDecl : a
 {n7}: VarDecl : b
 {n8}: VarDecl : __retres
 {n9}: int a = 1;
   -[-c-]-> 1
   -[a--]-> 6
 {n10}: int b = 2;
   -[-c-]-> 1
   -[a--]-> 7
 {n11}: G = x + a;
   -[-c-]-> 1
   -[--d]-> 2
   -[--d]-> 3
   -[--d]-> 6
   -[--d]-> 9
 {n12}: __retres = y + b;
   -[-c-]-> 1
   -[--d]-> 4
   -[--d]-> 5
   -[--d]-> 7
   -[a--]-> 8
   -[--d]-> 10
 {n13}: return __retres;
   -[-c-]-> 1
   -[--d]-> 8
   -[--d]-> 12
 {n14}: OutRet
   -[--d]-> 13
[pdg] PDG for f2
 {n15}: InCtrl
 {n16}: VarDecl : a
 {n17}: VarDecl : b
 {n18}: VarDecl : c
 {n19}: VarDecl : tmp
 {n20}: int a = 1;
   -[-c-]-> 15
   -[a--]-> 16
 {n21}: int b = a + 1;
   -[-c-]-> 15
   -[--d]-> 16
   -[a--]-> 17
   -[--d]-> 20
 {n22}: int c = 3;
   -[-c-]-> 15
   -[a--]-> 18
 {n23}: Call10-InCtrl : tmp = f1(b,c);
   -[-c-]-> 15
 {n24}: Call10-In1 : tmp = f1(b,c);
   -[-c-]-> 15
   -[--d]-> 17
   -[--d]-> 21
   -[-c-]-> 23
 {n25}: Call10-In2 : tmp = f1(b,c);
   -[-c-]-> 15
   -[--d]-> 18
   -[--d]-> 22
   -[-c-]-> 23
 {n26}: Call10-Out(G) : tmp = f1(b,c);
   -[-c-]-> 15
   -[-c-]-> 23
   -[--d]-> 24
 {n27}: Call10-OutRet : tmp = f1(b,c);
   -[-c-]-> 15
   -[a--]-> 19
   -[-c-]-> 23
   -[--d]-> 25
 {n28}: return tmp;
   -[-c-]-> 15
   -[--d]-> 19
   -[--d]-> 27
 {n29}: OutRet
   -[--d]-> 28
[pdg] PDG for f3
 {n30}: InCtrl
 {n31}: VarDecl : c
   -[a--]-> 32
 {n32}: In1
   -[a--]-> 31
 {n33}: VarDecl : a
 {n34}: VarDecl : b
 {n35}: VarDecl : x
 {n36}: int a = 1;
   -[-c-]-> 30
   -[a--]-> 33
 {n37}: int b = 2;
   -[-c-]-> 30
   -[a--]-> 34
 {n38}: int x = 0;
   -[-c-]-> 30
   -[a--]-> 35
 {n39}: c > Unknown
   -[-c-]-> 30
   -[--d]-> 31
   -[--d]-> 32
   -[--d]-> 44
 {n40}: x = b;
   -[-c-]-> 30
   -[--d]-> 34
   -[a--]-> 35
   -[--d]-> 37
   -[-c-]-> 39
 {n41}: G = a;
   -[-c-]-> 30
   -[--d]-> 33
   -[--d]-> 36
   -[-c-]-> 39
 {n42}: return x;
   -[-c-]-> 30
   -[--d]-> 35
   -[--d]-> 38
   -[--d]-> 40
 {n43}: OutRet
   -[--d]-> 42
 {n44}: In(Unknown)
[pdg] PDG for f4
 {n45}: InCtrl
 {n46}: VarDecl : c
   -[a--]-> 47
 {n47}: In1
   -[a--]-> 46
 {n48}: VarDecl : a
 {n49}: VarDecl : b
 {n50}: VarDecl : x
 {n51}: int a = 1;
   -[-c-]-> 45
   -[a--]-> 48
 {n52}: int b = 2;
   -[-c-]-> 45
   -[a--]-> 49
 {n53}: int x = 0;
   -[-c-]-> 45
   -[a--]-> 50
 {n54}: c > Unknown
   -[-c-]-> 45
   -[--d]-> 46
   -[--d]-> 47
   -[--d]-> 59
 {n55}: G = a;
   -[-c-]-> 45
   -[--d]-> 48
   -[--d]-> 51
   -[-c-]-> 54
 {n56}: x = b;
   -[-c-]-> 45
   -[--d]-> 49
   -[a--]-> 50
   -[--d]-> 52
   -[-c-]-> 54
 {n57}: return x;
   -[-c-]-> 45
   -[--d]-> 50
   -[--d]-> 53
   -[--d]-> 56
 {n58}: OutRet
   -[--d]-> 57
 {n59}: In(Unknown)
[pdg] PDG for f5
 {n60}: InCtrl
 {n61}: VarDecl : c
   -[a--]-> 62
 {n62}: In1
   -[a--]-> 61
 {n63}: VarDecl : x
 {n64}: int x = 0;
   -[-c-]-> 60
   -[a--]-> 63
 {n65}: c > Unknown
   -[-c-]-> 60
   -[--d]-> 61
   -[--d]-> 62
   -[--d]-> 78
 {n66}: goto Lsuite;
   -[-c-]-> 60
   -[-c-]-> 65
   -[-c-]-> 67
 {n67}: Lsuite:
   -[-c-]-> 60
 {n68}: x ++;
   -[-c-]-> 60
   -[a-d]-> 63
   -[--d]-> 64
   -[-c-]-> 65
   -[-c-]-> 66
 {n69}: Lsuite: ;
   -[-c-]-> 60
 {n70}: c < Unknown
   -[-c-]-> 60
   -[--d]-> 61
   -[--d]-> 62
   -[--d]-> 78
 {n71}: goto L2;
   -[-c-]-> 60
   -[-c-]-> 70
   -[-c-]-> 72
 {n72}: L2:
   -[-c-]-> 60
 {n73}: G ++;
   -[-c-]-> 60
   -[-c-]-> 70
   -[-c-]-> 71
   -[--d]-> 77
 {n74}: L2: x ++;
   -[-c-]-> 60
   -[a-d]-> 63
   -[--d]-> 64
   -[--d]-> 68
 {n75}: return x;
   -[-c-]-> 60
   -[--d]-> 63
   -[--d]-> 74
 {n76}: OutRet
   -[--d]-> 75
 {n77}: In(G)
 {n78}: In(Unknown)
[pdg] PDG for f6
 {n79}: InCtrl
 {n80}: VarDecl : n
   -[a--]-> 81
 {n81}: In1
   -[a--]-> 80
 {n82}: VarDecl : i
 {n83}: VarDecl : __retres
 {n84}: int i = 0;
   -[-c-]-> 79
   -[a--]-> 82
 {n85}: while(1)
   -[-c-]-> 79
   -[-c-]-> 85
   -[-c-]-> 86
   -[-c-]-> 87
   -[-c-]-> 88
   -[-c-]-> 93
   -[-c-]-> 94
 {n86}: n < 10
   -[-c-]-> 79
   -[--d]-> 80
   -[--d]-> 81
   -[-c-]-> 85
   -[-c-]-> 86
   -[-c-]-> 87
   -[-c-]-> 88
   -[--d]-> 91
   -[-c-]-> 93
   -[-c-]-> 94
 {n87}: block
   -[-c-]-> 79
   -[-c-]-> 85
   -[-c-]-> 86
   -[-c-]-> 87
   -[-c-]-> 88
   -[-c-]-> 93
   -[-c-]-> 94
 {n88}: Unknown > 3
   -[-c-]-> 79
   -[-c-]-> 85
   -[-c-]-> 86
   -[-c-]-> 87
   -[-c-]-> 88
   -[-c-]-> 93
   -[-c-]-> 94
   -[--d]-> 105
 {n89}: n % 2
   -[-c-]-> 79
   -[--d]-> 80
   -[--d]-> 81
   -[-c-]-> 85
   -[-c-]-> 86
   -[-c-]-> 87
   -[-c-]-> 88
   -[--d]-> 91
   -[-c-]-> 93
   -[-c-]-> 94
 {n90}: continue;
   -[-c-]-> 79
   -[-c-]-> 85
   -[-c-]-> 86
   -[-c-]-> 87
   -[-c-]-> 88
   -[-c-]-> 89
   -[-c-]-> 93
   -[-c-]-> 94
 {n91}: n ++;
   -[-c-]-> 79
   -[a-d]-> 80
   -[--d]-> 81
   -[-c-]-> 85
   -[-c-]-> 86
   -[-c-]-> 87
   -[-c-]-> 88
   -[-c-]-> 89
   -[-c-]-> 90
   -[--d]-> 91
   -[-c-]-> 93
   -[-c-]-> 94
 {n92}: i = 1;
   -[-c-]-> 79
   -[a--]-> 82
   -[-c-]-> 85
   -[-c-]-> 86
   -[-c-]-> 87
   -[-c-]-> 88
   -[-c-]-> 93
   -[-c-]-> 94
 {n93}: break;
   -[-c-]-> 79
   -[-c-]-> 85
   -[-c-]-> 86
   -[-c-]-> 87
   -[-c-]-> 88
   -[-c-]-> 93
   -[-c-]-> 94
 {n94}: break;
   -[-c-]-> 79
   -[-c-]-> 85
   -[-c-]-> 86
   -[-c-]-> 87
   -[-c-]-> 88
   -[-c-]-> 93
   -[-c-]-> 94
 {n95}: i
   -[-c-]-> 79
   -[--d]-> 82
   -[--d]-> 84
   -[--d]-> 92
 {n96}: block
   -[-c-]-> 79
   -[-c-]-> 95
 {n97}: block
   -[-c-]-> 79
   -[-c-]-> 95
 {n98}: __retres = 0;
   -[-c-]-> 79
   -[a--]-> 83
   -[-c-]-> 95
   -[-c-]-> 96
 {n99}: __retres = 10 * n;
   -[-c-]-> 79
   -[--d]-> 80
   -[--d]-> 81
   -[a--]-> 83
   -[--d]-> 91
   -[-c-]-> 95
   -[-c-]-> 97
 {n100}: goto return_label;
   -[-c-]-> 79
   -[-c-]-> 95
   -[-c-]-> 96
   -[-c-]-> 101
 {n101}: return_label:
   -[-c-]-> 79
 {n102}: goto return_label;
   -[-c-]-> 79
   -[-c-]-> 95
   -[-c-]-> 97
   -[-c-]-> 101
 {n103}: return_label: return __retres;
   -[-c-]-> 79
   -[--d]-> 83
   -[--d]-> 98
   -[--d]-> 99
 {n104}: OutRet
   -[--d]-> 103
 {n105}: In(Unknown)
[pdg] PDG for f7
 {n106}: InCtrl
 {n107}: VarDecl : s0
   -[a--]-> 108
 {n108}: In1
   -[a--]-> 107
 {n109}: VarDecl : x
 {n110}: int x = S.a;
   -[-c-]-> 106
   -[a--]-> 109
   -[--d]-> 116
 {n111}: x > 0
   -[-c-]-> 106
   -[--d]-> 109
   -[--d]-> 110
 {n112}: S.a += 3;
   -[-c-]-> 106
   -[-c-]-> 111
   -[--d]-> 116
 {n113}: (s0.a) ++;
   -[-c-]-> 106
   -[a-d]-> 107
   -[--d]-> 108
   -[-c-]-> 111
 {n114}: S = s0;
   -[-c-]-> 106
   -[--d]-> 107
   -[--d]-> 108
   -[-c-]-> 111
   -[--d]-> 113
 {n115}: return;
   -[-c-]-> 106
 {n116}: In(S.a)
[pdg] PDG for f8
 {n117}: InCtrl
 {n118}: VarDecl : ps
   -[a--]-> 119
 {n119}: In1
   -[a--]-> 118
 {n120}: (ps->a) ++;
   -[-c-]-> 117
   -[a-d]-> 118
   -[a-d]-> 119
   -[--d]-> 125
   -[--d]-> 126
 {n121}: (ps->b) ++;
   -[-c-]-> 117
   -[a-d]-> 118
   -[a-d]-> 119
   -[--d]-> 123
   -[--d]-> 124
 {n122}: return;
   -[-c-]-> 117
 {n123}: In(S1.b)
 {n124}: In(S2.b)
 {n125}: In(S1.a)
 {n126}: In(S2.a)
[pdg] PDG for main
 {n127}: InCtrl
 {n128}: VarDecl : res
 {n129}: VarDecl : uninit
 {n130}: VarDecl : uninit2
 {n131}: VarDecl : tmp
 {n132}: VarDecl : tmp_0
 {n133}: VarDecl : tmp_1
 {n134}: VarDecl : tmp_2
 {n135}: VarDecl : tmp_3
 {n136}: int res = 0;
   -[-c-]-> 127
   -[a--]-> 128
 {n137}: int volatile uninit = 0;
   -[-c-]-> 127
   -[a--]-> 129
 {n138}: int volatile uninit2 = 0;
   -[-c-]-> 127
   -[a--]-> 130
 {n139}: while(1)
   -[-c-]-> 127
   -[-c-]-> 139
   -[-c-]-> 140
   -[-c-]-> 144
 {n140}: uninit
   -[-c-]-> 127
   -[--d]-> 129
   -[--d]-> 137
   -[-c-]-> 139
   -[-c-]-> 140
   -[-c-]-> 144
 {n141}: uninit - 1
   -[-c-]-> 127
   -[--d]-> 129
   -[--d]-> 137
   -[-c-]-> 139
   -[-c-]-> 140
   -[-c-]-> 144
 {n142}: Unknown ++;
   -[-c-]-> 127
   -[-c-]-> 139
   -[-c-]-> 140
   -[-c-]-> 141
   -[--d]-> 142
   -[--d]-> 143
   -[-c-]-> 144
   -[--d]-> 202
 {n143}: Unknown --;
   -[-c-]-> 127
   -[-c-]-> 139
   -[-c-]-> 140
   -[-c-]-> 141
   -[--d]-> 142
   -[--d]-> 143
   -[-c-]-> 144
   -[--d]-> 202
 {n144}: break;
   -[-c-]-> 127
   -[-c-]-> 139
   -[-c-]-> 140
   -[-c-]-> 144
 {n145}: while(1)
   -[-c-]-> 127
   -[-c-]-> 139
   -[-c-]-> 140
   -[-c-]-> 144
   -[-c-]-> 145
   -[-c-]-> 146
   -[-c-]-> 150
 {n146}: uninit2
   -[-c-]-> 127
   -[--d]-> 130
   -[--d]-> 138
   -[-c-]-> 139
   -[-c-]-> 140
   -[-c-]-> 144
   -[-c-]-> 145
   -[-c-]-> 146
   -[-c-]-> 150
 {n147}: uninit2 - 1
   -[-c-]-> 127
   -[--d]-> 130
   -[--d]-> 138
   -[-c-]-> 139
   -[-c-]-> 140
   -[-c-]-> 144
   -[-c-]-> 145
   -[-c-]-> 146
   -[-c-]-> 150
 {n148}: (S.a) ++;
   -[-c-]-> 127
   -[-c-]-> 139
   -[-c-]-> 140
   -[-c-]-> 144
   -[-c-]-> 145
   -[-c-]-> 146
   -[-c-]-> 147
   -[--d]-> 148
   -[--d]-> 149
   -[-c-]-> 150
   -[--d]-> 203
 {n149}: (S.a) --;
   -[-c-]-> 127
   -[-c-]-> 139
   -[-c-]-> 140
   -[-c-]-> 144
   -[-c-]-> 145
   -[-c-]-> 146
   -[-c-]-> 147
   -[--d]-> 148
   -[--d]-> 149
   -[-c-]-> 150
   -[--d]-> 203
 {n150}: break;
   -[-c-]-> 127
   -[-c-]-> 139
   -[-c-]-> 140
   -[-c-]-> 144
   -[-c-]-> 145
   -[-c-]-> 146
   -[-c-]-> 150
 {n151}: unspecified sequence
   -[-c-]-> 127
 {n152}: Call102-InCtrl : tmp = f2();
   -[-c-]-> 127
   -[-c-]-> 151
 {n153}: Call102-Out(G) : tmp = f2();
   -[-c-]-> 127
   -[-c-]-> 151
   -[-c-]-> 152
 {n154}: Call102-OutRet : tmp = f2();
   -[-c-]-> 127
   -[a--]-> 131
   -[-c-]-> 151
   -[-c-]-> 152
 {n155}: res += tmp;
   -[-c-]-> 127
   -[a-d]-> 128
   -[--d]-> 131
   -[--d]-> 136
   -[-c-]-> 151
   -[--d]-> 154
 {n156}: unspecified sequence
   -[-c-]-> 127
 {n157}: Call105-InCtrl : tmp_0 = f3(1);
   -[-c-]-> 127
   -[-c-]-> 156
 {n158}: Call105-In1 : tmp_0 = f3(1);
   -[-c-]-> 127
   -[-c-]-> 156
   -[-c-]-> 157
 {n159}: Call105-Out(G) : tmp_0 = f3(1);
   -[-c-]-> 127
   -[--d]-> 142
   -[--d]-> 143
   -[-c-]-> 156
   -[-c-]-> 157
   -[--d]-> 158
   -[--d]-> 202
 {n160}: Call105-OutRet : tmp_0 = f3(1);
   -[-c-]-> 127
   -[a--]-> 132
   -[--d]-> 142
   -[--d]-> 143
   -[-c-]-> 156
   -[-c-]-> 157
   -[--d]-> 158
   -[--d]-> 202
 {n161}: res += tmp_0;
   -[-c-]-> 127
   -[a-d]-> 128
   -[--d]-> 132
   -[--d]-> 155
   -[-c-]-> 156
   -[--d]-> 160
 {n162}: unspecified sequence
   -[-c-]-> 127
 {n163}: Call108-InCtrl : tmp_1 = f4(1);
   -[-c-]-> 127
   -[-c-]-> 162
 {n164}: Call108-In1 : tmp_1 = f4(1);
   -[-c-]-> 127
   -[-c-]-> 162
   -[-c-]-> 163
 {n165}: Call108-Out(G) : tmp_1 = f4(1);
   -[-c-]-> 127
   -[--d]-> 142
   -[--d]-> 143
   -[-c-]-> 162
   -[-c-]-> 163
   -[--d]-> 164
   -[--d]-> 202
 {n166}: Call108-OutRet : tmp_1 = f4(1);
   -[-c-]-> 127
   -[a--]-> 133
   -[--d]-> 142
   -[--d]-> 143
   -[-c-]-> 162
   -[-c-]-> 163
   -[--d]-> 164
   -[--d]-> 202
 {n167}: res += tmp_1;
   -[-c-]-> 127
   -[a-d]-> 128
   -[--d]-> 133
   -[--d]-> 161
   -[-c-]-> 162
   -[--d]-> 166
 {n168}: unspecified sequence
   -[-c-]-> 127
 {n169}: Call111-InCtrl : tmp_2 = f5(1);
   -[-c-]-> 127
   -[-c-]-> 168
 {n170}: Call111-In1 : tmp_2 = f5(1);
   -[-c-]-> 127
   -[-c-]-> 168
   -[-c-]-> 169
 {n171}: Call111-Out(G) : tmp_2 = f5(1);
   -[-c-]-> 127
   -[--d]-> 142
   -[--d]-> 143
   -[--d](G)-> 153
   -[--d](G)-> 159
   -[--d](G)-> 165
   -[-c-]-> 168
   -[-c-]-> 169
   -[--d]-> 170
   -[--d]-> 202
 {n172}: Call111-OutRet : tmp_2 = f5(1);
   -[-c-]-> 127
   -[a--]-> 134
   -[--d]-> 142
   -[--d]-> 143
   -[-c-]-> 168
   -[-c-]-> 169
   -[--d]-> 170
   -[--d]-> 202
 {n173}: res += tmp_2;
   -[-c-]-> 127
   -[a-d]-> 128
   -[--d]-> 134
   -[--d]-> 167
   -[-c-]-> 168
   -[--d]-> 172
 {n174}: unspecified sequence
   -[-c-]-> 127
 {n175}: Call114-InCtrl : tmp_3 = f6(Unknown);
   -[-c-]-> 127
   -[-c-]-> 174
 {n176}: Call114-In1 : tmp_3 = f6(Unknown);
   -[-c-]-> 127
   -[--d]-> 142
   -[--d]-> 143
   -[-c-]-> 174
   -[-c-]-> 175
   -[--d]-> 202
 {n177}: Call114-OutRet : tmp_3 = f6(Unknown);
   -[-c-]-> 127
   -[a--]-> 135
   -[--d]-> 142
   -[--d]-> 143
   -[-c-]-> 174
   -[-c-]-> 175
   -[--d]-> 176
   -[--d]-> 202
 {n178}: res += tmp_3;
   -[-c-]-> 127
   -[a-d]-> 128
   -[--d]-> 135
   -[--d]-> 173
   -[-c-]-> 174
   -[--d]-> 177
 {n179}: Call116-InCtrl : f7(S);
   -[-c-]-> 127
 {n180}: Call116-In1 : f7(S);
   -[-c-]-> 127
   -[--d]-> 148
   -[--d]-> 149
   -[-c-]-> 179
   -[--d]-> 204
 {n181}: Call116-Out(S.a) : f7(S);
   -[-c-]-> 127
   -[--d]-> 148
   -[--d]-> 149
   -[-c-]-> 179
   -[--d]-> 180
   -[--d]-> 203
 {n182}: Call116-Out(S{.b; .c}) : f7(S);
   -[-c-]-> 127
   -[--d]-> 148
   -[--d]-> 149
   -[-c-]-> 179
   -[--d]-> 180
   -[--d]-> 203
 {n183}: Unknown
   -[-c-]-> 127
   -[--d]-> 142
   -[--d]-> 143
   -[--d]-> 202
 {n184}: Call119-InCtrl : f8(& S1);
   -[-c-]-> 127
   -[-c-]-> 183
 {n185}: Call119-In1 : f8(& S1);
   -[-c-]-> 127
   -[-c-]-> 183
   -[-c-]-> 184
 {n186}: Call119-Out(S1.a) : f8(& S1);
   -[-c-]-> 127
   -[-c-]-> 183
   -[-c-]-> 184
   -[--d]-> 185
   -[--d]-> 200
   -[--d]-> 201
 {n187}: Call119-Out(S1.b) : f8(& S1);
   -[-c-]-> 127
   -[-c-]-> 183
   -[-c-]-> 184
   -[--d]-> 185
   -[--d]-> 198
   -[--d]-> 199
 {n188}: Call119-Out(S2.a) : f8(& S1);
   -[-c-]-> 127
   -[-c-]-> 183
   -[-c-]-> 184
   -[--d]-> 185
   -[--d]-> 200
   -[--d]-> 201
 {n189}: Call119-Out(S2.b) : f8(& S1);
   -[-c-]-> 127
   -[-c-]-> 183
   -[-c-]-> 184
   -[--d]-> 185
   -[--d]-> 198
   -[--d]-> 199
 {n190}: Call120-InCtrl : f8(& S2);
   -[-c-]-> 127
   -[-c-]-> 183
 {n191}: Call120-In1 : f8(& S2);
   -[-c-]-> 127
   -[-c-]-> 183
   -[-c-]-> 190
 {n192}: Call120-Out(S1.a) : f8(& S2);
   -[-c-]-> 127
   -[-c-]-> 183
   -[-c-]-> 190
   -[--d]-> 191
   -[--d]-> 200
   -[--d]-> 201
 {n193}: Call120-Out(S1.b) : f8(& S2);
   -[-c-]-> 127
   -[-c-]-> 183
   -[-c-]-> 190
   -[--d]-> 191
   -[--d]-> 198
   -[--d]-> 199
 {n194}: Call120-Out(S2.a) : f8(& S2);
   -[-c-]-> 127
   -[-c-]-> 183
   -[-c-]-> 190
   -[--d]-> 191
   -[--d]-> 200
   -[--d]-> 201
 {n195}: Call120-Out(S2.b) : f8(& S2);
   -[-c-]-> 127
   -[-c-]-> 183
   -[-c-]-> 190
   -[--d]-> 191
   -[--d]-> 198
   -[--d]-> 199
 {n196}: return res;
   -[-c-]-> 127
   -[--d]-> 128
   -[--d]-> 178
 {n197}: OutRet
   -[--d]-> 196
 {n198}: In(S1.b)
 {n199}: In(S2.b)
 {n200}: In(S1.a)
 {n201}: In(S2.a)
 {n202}: In(Unknown)
 {n203}: In(S.a)
 {n204}: In(S)
