[kernel] Parsing tests/pdg/dpds_intra.c (with preprocessing)
[value] Analyzing a complete application starting at main
[value] Computing initial state
[value] Initial state computed
[value:initial-state] Values of globals at initialization
  G ∈ [--..--]
  S ∈ [--..--]
[value:alarm] tests/pdg/dpds_intra.c:113: Warning: 
  signed overflow. assert b + 1 ≤ 2147483647;
[value:alarm] tests/pdg/dpds_intra.c:113: Warning: 
  signed overflow. assert tmp + s.a ≤ 2147483647;
                   (tmp from b++)
[value:alarm] tests/pdg/dpds_intra.c:114: Warning: 
  signed overflow. assert -2147483648 ≤ 2 * a;
[value:alarm] tests/pdg/dpds_intra.c:114: Warning: 
  signed overflow. assert 2 * a ≤ 2147483647;
[value:alarm] tests/pdg/dpds_intra.c:124: Warning: 
  signed overflow. assert *p + 1 ≤ 2147483647;
[value] computing for function test_struct <- main.
  Called from tests/pdg/dpds_intra.c:126.
[value] Recording results for test_struct
[value] Done for function test_struct
[value] computing for function test_if_simple <- main.
  Called from tests/pdg/dpds_intra.c:127.
[value:alarm] tests/pdg/dpds_intra.c:51: Warning: 
  accessing uninitialized left-value. assert \initialized(&x);
[value] Recording results for test_if_simple
[value] Done for function test_if_simple
[value] computing for function test_goto_simple <- main.
  Called from tests/pdg/dpds_intra.c:128.
[value] Recording results for test_goto_simple
[value] Done for function test_goto_simple
[value] computing for function test_goto_arriere <- main.
  Called from tests/pdg/dpds_intra.c:129.
[value:alarm] tests/pdg/dpds_intra.c:66: Warning: 
  signed overflow. assert -2147483648 ≤ G - 1;
[value:alarm] tests/pdg/dpds_intra.c:65: Warning: 
  signed overflow. assert x + 1 ≤ 2147483647;
[value] Recording results for test_goto_arriere
[value] Done for function test_goto_arriere
[value:alarm] tests/pdg/dpds_intra.c:129: Warning: 
  signed overflow.
  assert res + tmp_3 ≤ 2147483647;
  (tmp_3 from test_goto_arriere())
[value] computing for function test_goto_else <- main.
  Called from tests/pdg/dpds_intra.c:130.
[value] Recording results for test_goto_else
[value] Done for function test_goto_else
[value:alarm] tests/pdg/dpds_intra.c:130: Warning: 
  signed overflow.
  assert res + tmp_4 ≤ 2147483647;
  (tmp_4 from test_goto_else())
[value] computing for function test_simple_loop <- main.
  Called from tests/pdg/dpds_intra.c:131.
[value] tests/pdg/dpds_intra.c:99: entering loop for the first time
[value:alarm] tests/pdg/dpds_intra.c:100: Warning: 
  signed overflow. assert s + 1 ≤ 2147483647;
[value] Recording results for test_simple_loop
[value] Done for function test_simple_loop
[value:alarm] tests/pdg/dpds_intra.c:131: Warning: 
  signed overflow.
  assert res + tmp_5 ≤ 2147483647;
  (tmp_5 from test_simple_loop(G))
[value] computing for function multiple_global_inputs <- main.
  Called from tests/pdg/dpds_intra.c:132.
[value:alarm] tests/pdg/dpds_intra.c:35: Warning: 
  signed overflow. assert -2147483648 ≤ S.a + G;
[value:alarm] tests/pdg/dpds_intra.c:35: Warning: 
  signed overflow. assert S.a + G ≤ 2147483647;
[value] Recording results for multiple_global_inputs
[value] Done for function multiple_global_inputs
[value:alarm] tests/pdg/dpds_intra.c:132: Warning: 
  signed overflow.
  assert res + tmp_6 ≤ 2147483647;
  (tmp_6 from multiple_global_inputs())
[value:alarm] tests/pdg/dpds_intra.c:134: Warning: 
  signed overflow. assert -2147483648 ≤ *p + res;
[value:alarm] tests/pdg/dpds_intra.c:134: Warning: 
  signed overflow. assert *p + res ≤ 2147483647;
[value] Recording results for main
[value] done for function main
[pdg] computing for function main
[from] Computing for function test_struct
[from] Done for function test_struct
[from] Computing for function test_if_simple
[from] Done for function test_if_simple
[from] Computing for function test_goto_simple
[from] Done for function test_goto_simple
[from] Computing for function test_goto_arriere
[from] Done for function test_goto_arriere
[from] Computing for function test_goto_else
[from] Done for function test_goto_else
[from] Computing for function test_simple_loop
[from] Done for function test_simple_loop
[from] Computing for function multiple_global_inputs
[from] Done for function multiple_global_inputs
[pdg] done for function main
[pdg] PDG for main
 {n1}: InCtrl
 {n2}: VarDecl : a
 {n3}: VarDecl : b
 {n4}: VarDecl : res
 {n5}: VarDecl : s
 {n6}: VarDecl : p
 {n7}: VarDecl : tmp
 {n8}: VarDecl : a_0
 {n9}: VarDecl : tmp_0
 {n10}: VarDecl : tmp_1
 {n11}: VarDecl : tmp_2
 {n12}: VarDecl : tmp_3
 {n13}: VarDecl : tmp_4
 {n14}: VarDecl : tmp_5
 {n15}: VarDecl : tmp_6
 {n16}: VarDecl : __retres
 {n17}: int b = G;
   -[-c-]-> 1
   -[a--]-> 3
   -[--d]-> 65
 {n18}: int res = 0;
   -[-c-]-> 1
   -[a--]-> 4
 {n19}: Tstr s = {.a = 1, .b = 2};
   -[-c-]-> 1
   -[a--]-> 5
 {n20}: unspecified sequence
   -[-c-]-> 1
 {n21}: tmp = b;
   -[-c-]-> 1
   -[--d]-> 3
   -[a--]-> 7
   -[--d]-> 17
   -[-c-]-> 20
 {n22}: b ++;
   -[-c-]-> 1
   -[a-d]-> 3
   -[--d]-> 17
   -[-c-]-> 20
 {n23}: a = tmp + s.a;
   -[-c-]-> 1
   -[a--]-> 2
   -[--d]-> 5
   -[--d]-> 7
   -[--d]-> 19
   -[-c-]-> 20
   -[--d]-> 21
 {n24}: b = 2 * a;
   -[-c-]-> 1
   -[--d]-> 2
   -[a--]-> 3
   -[--d]-> 23
 {n25}: b > G
   -[-c-]-> 1
   -[--d]-> 3
   -[--d]-> 24
   -[--d]-> 65
 {n26}: p = & a;
   -[-c-]-> 1
   -[--d]-> 2
   -[a--]-> 6
   -[-c-]-> 25
 {n27}: int a_0 = 1;
   -[-c-]-> 1
   -[a--]-> 8
   -[-c-]-> 25
 {n28}: p = & b;
   -[-c-]-> 1
   -[--d]-> 3
   -[a--]-> 6
   -[-c-]-> 25
 {n29}: a_0 ++;
   -[-c-]-> 1
   -[a-d]-> 8
   -[-c-]-> 25
   -[--d]-> 27
 {n30}: (*p) ++;
   -[-c-]-> 1
   -[a-d]-> 6
   -[--d]-> 23
   -[--d]-> 24
   -[a-d]-> 26
   -[a-d]-> 28
 {n31}: unspecified sequence
   -[-c-]-> 1
 {n32}: Call101-InCtrl : tmp_0 = test_struct();
   -[-c-]-> 1
   -[-c-]-> 31
 {n33}: Call101-OutRet : tmp_0 = test_struct();
   -[-c-]-> 1
   -[a--]-> 9
   -[-c-]-> 31
   -[-c-]-> 32
 {n34}: res += tmp_0;
   -[-c-]-> 1
   -[a-d]-> 4
   -[--d]-> 9
   -[--d]-> 18
   -[-c-]-> 31
   -[--d]-> 33
 {n35}: unspecified sequence
   -[-c-]-> 1
 {n36}: Call104-InCtrl : tmp_1 = test_if_simple();
   -[-c-]-> 1
   -[-c-]-> 35
 {n37}: Call104-OutRet : tmp_1 = test_if_simple();
   -[-c-]-> 1
   -[a--]-> 10
   -[-c-]-> 35
   -[-c-]-> 36
   -[--d]-> 65
 {n38}: res += tmp_1;
   -[-c-]-> 1
   -[a-d]-> 4
   -[--d]-> 10
   -[--d]-> 34
   -[-c-]-> 35
   -[--d]-> 37
 {n39}: unspecified sequence
   -[-c-]-> 1
 {n40}: Call107-InCtrl : tmp_2 = test_goto_simple();
   -[-c-]-> 1
   -[-c-]-> 39
 {n41}: Call107-OutRet : tmp_2 = test_goto_simple();
   -[-c-]-> 1
   -[a--]-> 11
   -[-c-]-> 39
   -[-c-]-> 40
   -[--d]-> 65
 {n42}: res += tmp_2;
   -[-c-]-> 1
   -[a-d]-> 4
   -[--d]-> 11
   -[--d]-> 38
   -[-c-]-> 39
   -[--d]-> 41
 {n43}: unspecified sequence
   -[-c-]-> 1
 {n44}: Call110-InCtrl : tmp_3 = test_goto_arriere();
   -[-c-]-> 1
   -[-c-]-> 43
 {n45}: Call110-Out(G) : tmp_3 = test_goto_arriere();
   -[-c-]-> 1
   -[-c-]-> 43
   -[-c-]-> 44
   -[--d]-> 65
 {n46}: Call110-OutRet : tmp_3 = test_goto_arriere();
   -[-c-]-> 1
   -[a--]-> 12
   -[-c-]-> 43
   -[-c-]-> 44
   -[--d]-> 65
 {n47}: res += tmp_3;
   -[-c-]-> 1
   -[a-d]-> 4
   -[--d]-> 12
   -[--d]-> 42
   -[-c-]-> 43
   -[--d]-> 46
 {n48}: unspecified sequence
   -[-c-]-> 1
 {n49}: Call113-InCtrl : tmp_4 = test_goto_else();
   -[-c-]-> 1
   -[-c-]-> 48
 {n50}: Call113-OutRet : tmp_4 = test_goto_else();
   -[-c-]-> 1
   -[a--]-> 13
   -[-c-]-> 48
   -[-c-]-> 49
 {n51}: res += tmp_4;
   -[-c-]-> 1
   -[a-d]-> 4
   -[--d]-> 13
   -[--d]-> 47
   -[-c-]-> 48
   -[--d]-> 50
 {n52}: unspecified sequence
   -[-c-]-> 1
 {n53}: Call116-InCtrl : tmp_5 = test_simple_loop(G);
   -[-c-]-> 1
   -[-c-]-> 52
 {n54}: Call116-In1 : tmp_5 = test_simple_loop(G);
   -[-c-]-> 1
   -[--d](G)-> 45
   -[-c-]-> 52
   -[-c-]-> 53
 {n55}: Call116-OutRet : tmp_5 = test_simple_loop(G);
   -[-c-]-> 1
   -[a--]-> 14
   -[-c-]-> 52
   -[-c-]-> 53
   -[--d]-> 54
 {n56}: res += tmp_5;
   -[-c-]-> 1
   -[a-d]-> 4
   -[--d]-> 14
   -[--d]-> 51
   -[-c-]-> 52
   -[--d]-> 55
 {n57}: unspecified sequence
   -[-c-]-> 1
 {n58}: Call119-InCtrl : tmp_6 = multiple_global_inputs();
   -[-c-]-> 1
   -[-c-]-> 57
 {n59}: Call119-OutRet : tmp_6 = multiple_global_inputs();
   -[-c-]-> 1
   -[a--]-> 15
   -[--d](G)-> 45
   -[-c-]-> 57
   -[-c-]-> 58
   -[--d]-> 64
 {n60}: res += tmp_6;
   -[-c-]-> 1
   -[a-d]-> 4
   -[--d]-> 15
   -[--d]-> 56
   -[-c-]-> 57
   -[--d]-> 59
 {n61}: __retres = *p + res;
   -[-c-]-> 1
   -[--d]-> 4
   -[--d]-> 6
   -[a--]-> 16
   -[--d]-> 23
   -[--d]-> 24
   -[--d]-> 26
   -[--d]-> 28
   -[--d]-> 30
   -[--d]-> 60
 {n62}: return __retres;
   -[-c-]-> 1
   -[--d]-> 16
   -[--d]-> 61
 {n63}: OutRet
   -[--d]-> 62
 {n64}: In(S.a)
 {n65}: In(G)
