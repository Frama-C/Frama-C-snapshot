[kernel] Parsing tests/pdg/dpds_intra.c (with preprocessing)
[value] Analyzing a complete application starting at main
[value] Computing initial state
[value] Initial state computed
[value:initial-state] Values of globals at initialization
  G ∈ [--..--]
  S ∈ [--..--]
[value:alarm] tests/pdg/dpds_intra.c:113: Warning: 
  signed overflow. assert b + 1 ≤ 2147483647;
[value:alarm] tests/pdg/dpds_intra.c:113: Warning: 
  signed overflow. assert tmp + s.a ≤ 2147483647;
                   (tmp from b++)
[value:alarm] tests/pdg/dpds_intra.c:114: Warning: 
  signed overflow. assert -2147483648 ≤ 2 * a;
[value:alarm] tests/pdg/dpds_intra.c:114: Warning: 
  signed overflow. assert 2 * a ≤ 2147483647;
[value:alarm] tests/pdg/dpds_intra.c:124: Warning: 
  signed overflow. assert *p + 1 ≤ 2147483647;
[value] computing for function test_struct <- main.
  Called from tests/pdg/dpds_intra.c:126.
[value] Recording results for test_struct
[value] Done for function test_struct
[value] computing for function test_if_simple <- main.
  Called from tests/pdg/dpds_intra.c:127.
[value:alarm] tests/pdg/dpds_intra.c:51: Warning: 
  accessing uninitialized left-value. assert \initialized(&x);
[value] Recording results for test_if_simple
[value] Done for function test_if_simple
[value] computing for function test_goto_simple <- main.
  Called from tests/pdg/dpds_intra.c:128.
[value] Recording results for test_goto_simple
[value] Done for function test_goto_simple
[value] computing for function test_goto_arriere <- main.
  Called from tests/pdg/dpds_intra.c:129.
[value:alarm] tests/pdg/dpds_intra.c:66: Warning: 
  signed overflow. assert -2147483648 ≤ G - 1;
[value:alarm] tests/pdg/dpds_intra.c:65: Warning: 
  signed overflow. assert x + 1 ≤ 2147483647;
[value] Recording results for test_goto_arriere
[value] Done for function test_goto_arriere
[value:alarm] tests/pdg/dpds_intra.c:129: Warning: 
  signed overflow.
  assert res + tmp_3 ≤ 2147483647;
  (tmp_3 from test_goto_arriere())
[value] computing for function test_goto_else <- main.
  Called from tests/pdg/dpds_intra.c:130.
[value] Recording results for test_goto_else
[value] Done for function test_goto_else
[value:alarm] tests/pdg/dpds_intra.c:130: Warning: 
  signed overflow.
  assert res + tmp_4 ≤ 2147483647;
  (tmp_4 from test_goto_else())
[value] computing for function test_simple_loop <- main.
  Called from tests/pdg/dpds_intra.c:131.
[value] tests/pdg/dpds_intra.c:99: entering loop for the first time
[value:alarm] tests/pdg/dpds_intra.c:100: Warning: 
  signed overflow. assert s + 1 ≤ 2147483647;
[value] Recording results for test_simple_loop
[value] Done for function test_simple_loop
[value:alarm] tests/pdg/dpds_intra.c:131: Warning: 
  signed overflow.
  assert res + tmp_5 ≤ 2147483647;
  (tmp_5 from test_simple_loop(G))
[value] computing for function multiple_global_inputs <- main.
  Called from tests/pdg/dpds_intra.c:132.
[value:alarm] tests/pdg/dpds_intra.c:35: Warning: 
  signed overflow. assert -2147483648 ≤ S.a + G;
[value:alarm] tests/pdg/dpds_intra.c:35: Warning: 
  signed overflow. assert S.a + G ≤ 2147483647;
[value] Recording results for multiple_global_inputs
[value] Done for function multiple_global_inputs
[value:alarm] tests/pdg/dpds_intra.c:132: Warning: 
  signed overflow.
  assert res + tmp_6 ≤ 2147483647;
  (tmp_6 from multiple_global_inputs())
[value:alarm] tests/pdg/dpds_intra.c:134: Warning: 
  signed overflow. assert -2147483648 ≤ *p + res;
[value:alarm] tests/pdg/dpds_intra.c:134: Warning: 
  signed overflow. assert *p + res ≤ 2147483647;
[value] Recording results for main
[value] done for function main
[pdg] computing for function test_goto_else
[pdg] done for function test_goto_else
[pdg] PDG for test_goto_else
 {n1}: InCtrl
 {n2}: VarDecl : x
 {n3}: VarDecl : a
 {n4}: VarDecl : b
 {n5}: int b = 0;
   -[-c-]-> 1
   -[a--]-> 4
 {n6}: G
   -[-c-]-> 1
   -[--d]-> 14
 {n7}: x = 1;
   -[-c-]-> 1
   -[a--]-> 2
   -[-c-]-> 6
 {n8}: a = 1;
   -[-c-]-> 1
   -[a--]-> 3
   -[-c-]-> 6
 {n9}: goto L;
   -[-c-]-> 1
   -[-c-]-> 6
   -[-c-]-> 10
 {n10}: L:
   -[-c-]-> 1
   -[-c-]-> 6
   -[-c-]-> 9
 {n11}: L: b = 1;
   -[-c-]-> 1
   -[a--]-> 4
   -[-c-]-> 6
   -[-c-]-> 9
 {n12}: return b;
   -[-c-]-> 1
   -[--d]-> 4
   -[--d]-> 11
 {n13}: OutRet
   -[--d]-> 12
 {n14}: In(G)
