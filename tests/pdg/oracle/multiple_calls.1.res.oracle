[kernel] Parsing share/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/pdg/multiple_calls.c (with preprocessing)
[value] Analyzing a complete application starting at appel_ptr_fct_bis
[value] Computing initial state
[value] Initial state computed
[value:initial-state] Values of globals at initialization
  G1 ∈ [--..--]
  G2 ∈ [--..--]
  G3 ∈ [--..--]
  G4 ∈ [--..--]
[value] computing for function fct2 <- appel_ptr_fct_bis.
        Called from tests/pdg/multiple_calls.c:28.
[value] Recording results for fct2
[value] Done for function fct2
[value] computing for function fct1 <- appel_ptr_fct_bis.
        Called from tests/pdg/multiple_calls.c:28.
[value] Recording results for fct1
[value] Done for function fct1
[value] Recording results for appel_ptr_fct_bis
[value] done for function appel_ptr_fct_bis
[from] Computing for function fct1
[from] Done for function fct1
[from] Computing for function fct2
[from] Done for function fct2
[from] Computing for function appel_ptr_fct_bis
[from] Done for function appel_ptr_fct_bis
[from] ====== DEPENDENCIES COMPUTED ======
       These dependencies hold at termination for the executions that terminate:
[from] Function fct1:
  G1 FROM z
  G3 FROM y
  G4 FROM z
  \result FROM x
[from] Function fct2:
  G2 FROM z
  G3 FROM x
  \result FROM y
[from] Function appel_ptr_fct_bis:
  G1 FROM c; d (and SELF)
  G2 FROM c; d (and SELF)
  G3 FROM c; a; b
  G4 FROM c; a; b
  \result FROM c; a; b
[from] ====== END OF DEPENDENCIES ======
[inout] InOut (internal) for function fct1:
        Operational inputs:
          x; y; z
        Operational inputs on termination:
          x; y; z
        Sure outputs:
          G1; G3; G4
[inout] InOut (internal) for function fct2:
        Operational inputs:
          x; y; z
        Operational inputs on termination:
          x; y; z
        Sure outputs:
          G2; G3
[inout] InOut (internal) for function appel_ptr_fct_bis:
        Operational inputs:
          c; a; b; d
        Operational inputs on termination:
          c; a; b; d
        Sure outputs:
          G3; G4; pf; tmp
[pdg] computing for function appel_ptr_fct_bis
[pdg] done for function appel_ptr_fct_bis
[pdg] PDG for appel_ptr_fct_bis
 {n1}: InCtrl
 {n2}: VarDecl : c
   -[a--]-> 3
 {n3}: In1
   -[a--]-> 2
 {n4}: VarDecl : a
   -[a--]-> 5
 {n5}: In2
   -[a--]-> 4
 {n6}: VarDecl : b
   -[a--]-> 7
 {n7}: In3
   -[a--]-> 6
 {n8}: VarDecl : d
   -[a--]-> 9
 {n9}: In4
   -[a--]-> 8
 {n10}: VarDecl : pf
 {n11}: VarDecl : tmp
 {n12}: c
   -[-c-]-> 1
   -[--d]-> 2
   -[--d]-> 3
 {n13}: tmp = & fct1;
   -[-c-]-> 1
   -[a--]-> 11
   -[-c-]-> 12
 {n14}: tmp = & fct2;
   -[-c-]-> 1
   -[a--]-> 11
   -[-c-]-> 12
 {n15}: pf = tmp;
   -[-c-]-> 1
   -[a--]-> 10
   -[--d]-> 11
   -[--d]-> 13
   -[--d]-> 14
 {n16}: Call28-InCtrl : G4 = (*pf)(a,b,d);
   -[-c-]-> 1
 {n17}: Call28-In1 : G4 = (*pf)(a,b,d);
   -[-c-]-> 1
   -[--d]-> 4
   -[--d]-> 5
   -[-c-]-> 16
 {n18}: Call28-In2 : G4 = (*pf)(a,b,d);
   -[-c-]-> 1
   -[--d]-> 6
   -[--d]-> 7
   -[-c-]-> 16
 {n19}: Call28-In3 : G4 = (*pf)(a,b,d);
   -[-c-]-> 1
   -[--d]-> 8
   -[--d]-> 9
   -[-c-]-> 16
 {n20}: Call28-Out(G1) : G4 = (*pf)(a,b,d);
   -[-c-]-> 1
   -[-c-]-> 15
   -[-c-]-> 16
   -[--d]-> 19
 {n21}: Call28-Out(G3) : G4 = (*pf)(a,b,d);
   -[-c-]-> 1
   -[-c-]-> 15
   -[-c-]-> 16
   -[--d]-> 17
   -[--d]-> 18
 {n22}: Call28-Out(G4) : G4 = (*pf)(a,b,d);
   -[-c-]-> 1
   -[-c-]-> 15
   -[-c-]-> 16
   -[--d]-> 19
 {n23}: Call28-OutRet : G4 = (*pf)(a,b,d);
   -[-c-]-> 1
   -[-c-]-> 15
   -[-c-]-> 16
   -[--d]-> 17
   -[--d]-> 18
 {n24}: Call28-Out(G2) : G4 = (*pf)(a,b,d);
   -[-c-]-> 1
   -[-c-]-> 15
   -[-c-]-> 16
   -[--d]-> 19
 {n25}: return G4;
   -[-c-]-> 1
   -[--d]-> 23
 {n26}: OutRet
   -[--d]-> 25
