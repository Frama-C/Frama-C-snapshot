[kernel] Parsing share/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/value/array_array.c (with preprocessing)
[value] Analyzing a complete application starting at main3
[value] Computing initial state
[value] Initial state computed
[value] Values of globals at initialization
  StaticAllocHEAP[0..3] ∈ {2}
                 [4..9999] ∈ {0}
  next_free ∈ {0}
[value] computing for function LIB_MEM_StaticAlloc <- main3.
        Called from tests/value/array_array.c:66.
[value] Called Frama_C_show_each_ALLOCATION_WITH_STATIC_ALLOC({24})
[value] Recording results for LIB_MEM_StaticAlloc
[value] Done for function LIB_MEM_StaticAlloc
tests/value/array_array.c:68:[value] entering loop for the first time
tests/value/array_array.c:69:[kernel] warning: accessing out of bounds index. assert i < 3;
tests/value/array_array.c:69:[kernel] warning: all target addresses were invalid. This path is assumed to be dead.
[value] Recording results for main3
[value] done for function main3
tests/value/array_array.c:69:[value] assertion 'Value,index_bound' got final status invalid.
[value] ====== VALUES COMPUTED ======
[value] Values at end of function LIB_MEM_StaticAlloc:
  new ∈ {{ (void *)&StaticAllocHEAP }}
  next_free ∈ {24}
[value] Values at end of function main3:
  NON TERMINATING FUNCTION
[from] Computing for function LIB_MEM_StaticAlloc
[from] Done for function LIB_MEM_StaticAlloc
[from] Computing for function main3
[from] Non-terminating function main3 (no dependencies)
[from] Done for function main3
[from] ====== DEPENDENCIES COMPUTED ======
       These dependencies hold at termination for the executions that terminate:
[from] Function LIB_MEM_StaticAlloc:
  next_free FROM size; next_free
  \result FROM next_free
[from] Function main3:
  NON TERMINATING - NO EFFECTS
[from] ====== END OF DEPENDENCIES ======
[inout] Out (internal) for function LIB_MEM_StaticAlloc:
          new; tmp; next_free
[inout] Inputs for function LIB_MEM_StaticAlloc:
          next_free
[inout] Out (internal) for function main3:
          v; i; next_free
[inout] Inputs for function main3:
          next_free
