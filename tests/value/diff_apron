diff tests/value/oracle/alias.1.res.oracle tests/value/oracle_apron/alias.1.res.oracle
85c85
<   z ∈ {0; 1; 2}
---
>   z ∈ {0; 2}
diff tests/value/oracle/alias.2.res.oracle tests/value/oracle_apron/alias.2.res.oracle
76c76
<   z ∈ {-5; -4; -3; -2; -1; 0; 1; 1000}
---
>   z ∈ {-1; 1000}
diff tests/value/oracle/alias.3.res.oracle tests/value/oracle_apron/alias.3.res.oracle
67c67
<   z ∈ {0; 1; 2}
---
>   z ∈ {0; 2}
diff tests/value/oracle/alias.6.res.oracle tests/value/oracle_apron/alias.6.res.oracle
82c82
<   t ∈ {4; 5; 6}
---
>   t ∈ {5}
diff tests/value/oracle/array_degenerating_loop.res.oracle tests/value/oracle_apron/array_degenerating_loop.res.oracle
11,12d10
< [eva:alarm] tests/value/array_degenerating_loop.i:9: Warning: 
<   signed overflow. assert G + t[i] ≤ 2147483647;
14c12
<   Frama_C_show_each: [55..2147483647], [-2147483648..99]
---
>   Frama_C_show_each: [55..155], [-2147483648..99]
diff tests/value/oracle/backward_add_ptr.res.oracle tests/value/oracle_apron/backward_add_ptr.res.oracle
71c71,74
< [eva] tests/value/backward_add_ptr.c:91: Reusing old results for call to gm
---
> [eva] computing for function gm <- main3 <- main.
>   Called from tests/value/backward_add_ptr.c:91.
> [eva] Recording results for gm
> [eva] Done for function gm
93c96,99
< [eva] tests/value/backward_add_ptr.c:110: Reusing old results for call to gm
---
> [eva] computing for function gm <- main3 <- main.
>   Called from tests/value/backward_add_ptr.c:110.
> [eva] Recording results for gm
> [eva] Done for function gm
107c113,116
< [eva] tests/value/backward_add_ptr.c:125: Reusing old results for call to gm
---
> [eva] computing for function gm <- main3 <- main.
>   Called from tests/value/backward_add_ptr.c:125.
> [eva] Recording results for gm
> [eva] Done for function gm
160c169,172
< [eva] tests/value/backward_add_ptr.c:160: Reusing old results for call to gm
---
> [eva] computing for function gm <- main4 <- main.
>   Called from tests/value/backward_add_ptr.c:160.
> [eva] Recording results for gm
> [eva] Done for function gm
diff tests/value/oracle/call_simple.res.oracle tests/value/oracle_apron/call_simple.res.oracle
28c28
<   c ∈ [--..--]
---
>   c ∈ [-2147483648..2147483646]
diff tests/value/oracle/deps_compose.res.oracle tests/value/oracle_apron/deps_compose.res.oracle
24c24,27
< [eva] tests/value/deps_compose.i:26: Reusing old results for call to f
---
> [eva] computing for function f <- main.
>   Called from tests/value/deps_compose.i:26.
> [eva] Recording results for f
> [eva] Done for function f
diff tests/value/oracle/divneg.res.oracle tests/value/oracle_apron/divneg.res.oracle
57c57
<   vic ∈ {4294967295}
---
>   vic ∈ {-1}
diff tests/value/oracle/downcast.res.oracle tests/value/oracle_apron/downcast.res.oracle
61c61
<   [100000..2147483647], [100145..2147483647], [100145..2147483647]
---
>   [100000..2147483502], [100145..2147483647], [100145..2147483647]
diff tests/value/oracle/dur.res.oracle tests/value/oracle_apron/dur.res.oracle
310c310
<   V6 ∈ [--..--] or UNINITIALIZED
---
>   V6 ∈ [0..32767] or UNINITIALIZED
diff tests/value/oracle/find_ivaltop.res.oracle tests/value/oracle_apron/find_ivaltop.res.oracle
32,33c32,33
<   j ∈ {0; 1; 2; 3; 4; 5; 6; 7}
<   X ∈ {1; 2; 3; 4; 5; 6; 7; 8}
---
>   j ∈ {7}
>   X ∈ {8}
39c39
<   \result FROM t[0..7]
---
>   \result FROM t[7]
44c44
<     t[0..7]
---
>     t[7]
diff tests/value/oracle/for_loops.1.res.oracle tests/value/oracle_apron/for_loops.1.res.oracle
39,41c39
< [eva:alarm] tests/value/for_loops.c:16: Warning: 
<   signed overflow. assert w + 1 ≤ 2147483647;
< [eva] tests/value/for_loops.c:17: Frama_C_show_each_F: [0..2147483647]
---
> [eva] tests/value/for_loops.c:17: Frama_C_show_each_F: [0..100]
47c45
<   j ∈ [0..2147483647]
---
>   j ∈ [0..100]
diff tests/value/oracle/for_loops.2.res.oracle tests/value/oracle_apron/for_loops.2.res.oracle
37,39c37
< [eva:alarm] tests/value/for_loops.c:42: Warning: 
<   signed overflow. assert w + T[j] ≤ 2147483647;
< [eva] tests/value/for_loops.c:43: Frama_C_show_each: [0..2147483647]
---
> [eva] tests/value/for_loops.c:43: Frama_C_show_each: [0..1000]
diff tests/value/oracle/fptr.0.res.oracle tests/value/oracle_apron/fptr.0.res.oracle
57c57,60
< [eva] tests/value/fptr.i:9: Reusing old results for call to h
---
> [eva] computing for function h <- f <- main.
>   Called from tests/value/fptr.i:9.
> [eva] Recording results for h
> [eva] Done for function h
66,67c69,76
< [eva] tests/value/fptr.i:9: Reusing old results for call to hh
< [eva] tests/value/fptr.i:9: Reusing old results for call to h
---
> [eva] computing for function hh <- f <- main.
>   Called from tests/value/fptr.i:9.
> [eva] Recording results for hh
> [eva] Done for function hh
> [eva] computing for function h <- f <- main.
>   Called from tests/value/fptr.i:9.
> [eva] Recording results for h
> [eva] Done for function h
72c81,92
< [eva] tests/value/fptr.i:52: Reusing old results for call to f
---
> [eva] computing for function f <- main.
>   Called from tests/value/fptr.i:52.
> [eva] computing for function hh <- f <- main.
>   Called from tests/value/fptr.i:9.
> [eva] Recording results for hh
> [eva] Done for function hh
> [eva] computing for function h <- f <- main.
>   Called from tests/value/fptr.i:9.
> [eva] Recording results for h
> [eva] Done for function h
> [eva] Recording results for f
> [eva] Done for function f
diff tests/value/oracle/fptr.1.res.oracle tests/value/oracle_apron/fptr.1.res.oracle
42c42,45
< [eva] tests/value/fptr.i:9: Reusing old results for call to h
---
> [eva] computing for function h <- f <- main_uninit.
>   Called from tests/value/fptr.i:9.
> [eva] Recording results for h
> [eva] Done for function h
51,52c54,61
< [eva] tests/value/fptr.i:9: Reusing old results for call to hh
< [eva] tests/value/fptr.i:9: Reusing old results for call to h
---
> [eva] computing for function hh <- f <- main_uninit.
>   Called from tests/value/fptr.i:9.
> [eva] Recording results for hh
> [eva] Done for function hh
> [eva] computing for function h <- f <- main_uninit.
>   Called from tests/value/fptr.i:9.
> [eva] Recording results for h
> [eva] Done for function h
57c66,77
< [eva] tests/value/fptr.i:68: Reusing old results for call to f
---
> [eva] computing for function f <- main_uninit.
>   Called from tests/value/fptr.i:68.
> [eva] computing for function hh <- f <- main_uninit.
>   Called from tests/value/fptr.i:9.
> [eva] Recording results for hh
> [eva] Done for function hh
> [eva] computing for function h <- f <- main_uninit.
>   Called from tests/value/fptr.i:9.
> [eva] Recording results for h
> [eva] Done for function h
> [eva] Recording results for f
> [eva] Done for function f
diff tests/value/oracle/from_call.0.res.oracle tests/value/oracle_apron/from_call.0.res.oracle
64c64,69
< [eva] tests/value/from_call.i:20: Reusing old results for call to g
---
> [eva] computing for function g <- f <- main.
>   Called from tests/value/from_call.i:20.
> [eva] Recording results for g
> [from] Computing for function g
> [from] Done for function g
> [eva] Done for function g
74c79,84
< [eva] tests/value/from_call.i:20: Reusing old results for call to g
---
> [eva] computing for function g <- f <- main.
>   Called from tests/value/from_call.i:20.
> [eva] Recording results for g
> [from] Computing for function g
> [from] Done for function g
> [eva] Done for function g
145,146c155,166
< [eva] tests/value/from_call.i:44: Reusing old results for call to return_A1
< [eva] tests/value/from_call.i:44: Reusing old results for call to return_A2
---
> [eva] computing for function return_A1 <- dispatcher2 <- call_dispatcher2 <- main.
>   Called from tests/value/from_call.i:44.
> [eva] Recording results for return_A1
> [from] Computing for function return_A1
> [from] Done for function return_A1
> [eva] Done for function return_A1
> [eva] computing for function return_A2 <- dispatcher2 <- call_dispatcher2 <- main.
>   Called from tests/value/from_call.i:44.
> [eva] Recording results for return_A2
> [from] Computing for function return_A2
> [from] Done for function return_A2
> [eva] Done for function return_A2
diff tests/value/oracle/from_call.1.res.oracle tests/value/oracle_apron/from_call.1.res.oracle
60c60,63
< [eva] tests/value/from_call.i:20: Reusing old results for call to g
---
> [eva] computing for function g <- f <- main.
>   Called from tests/value/from_call.i:20.
> [eva] Recording results for g
> [eva] Done for function g
68c71,74
< [eva] tests/value/from_call.i:20: Reusing old results for call to g
---
> [eva] computing for function g <- f <- main.
>   Called from tests/value/from_call.i:20.
> [eva] Recording results for g
> [eva] Done for function g
119,120c125,132
< [eva] tests/value/from_call.i:44: Reusing old results for call to return_A1
< [eva] tests/value/from_call.i:44: Reusing old results for call to return_A2
---
> [eva] computing for function return_A1 <- dispatcher2 <- call_dispatcher2 <- main.
>   Called from tests/value/from_call.i:44.
> [eva] Recording results for return_A1
> [eva] Done for function return_A1
> [eva] computing for function return_A2 <- dispatcher2 <- call_dispatcher2 <- main.
>   Called from tests/value/from_call.i:44.
> [eva] Recording results for return_A2
> [eva] Done for function return_A2
diff tests/value/oracle/fun_ptr.0.res.oracle tests/value/oracle_apron/fun_ptr.0.res.oracle
39c39,42
< [eva] tests/value/fun_ptr.i:33: Reusing old results for call to f
---
> [eva] computing for function f <- test2 <- main.
>   Called from tests/value/fun_ptr.i:33.
> [eva] Recording results for f
> [eva] Done for function f
diff tests/value/oracle/fun_ptr.1.res.oracle tests/value/oracle_apron/fun_ptr.1.res.oracle
39c39,42
< [eva] tests/value/fun_ptr.i:33: Reusing old results for call to f
---
> [eva] computing for function f <- test2 <- main.
>   Called from tests/value/fun_ptr.i:33.
> [eva] Recording results for f
> [eva] Done for function f
diff tests/value/oracle/gauges.res.oracle tests/value/oracle_apron/gauges.res.oracle
38,39d37
< [eva:alarm] tests/value/gauges.c:26: Warning: 
<   signed overflow. assert l + 1 ≤ 2147483647;
70,71d67
< [eva:alarm] tests/value/gauges.c:48: Warning: 
<   signed overflow. assert l + 1 ≤ 2147483647;
113,114d108
< [eva:alarm] tests/value/gauges.c:81: Warning: 
<   signed overflow. assert k + 1 ≤ 2147483647;
116,117d109
< [eva:alarm] tests/value/gauges.c:84: Warning: 
<   signed overflow. assert k + 1 ≤ 2147483647;
123a116,117
> [eva:alarm] tests/value/gauges.c:81: Warning: 
>   signed overflow. assert k + 1 ≤ 2147483647;
125c119,121
< [eva] tests/value/gauges.c:86: Frama_C_show_each: [0..2147483647]
---
> [eva:alarm] tests/value/gauges.c:84: Warning: 
>   signed overflow. assert k + 1 ≤ 2147483647;
> [eva] tests/value/gauges.c:86: Frama_C_show_each: [15..2147483647]
139,140d134
< [eva:alarm] tests/value/gauges.c:99: Warning: 
<   signed overflow. assert c + 1 ≤ 2147483647;
187,188d180
< [eva:alarm] tests/value/gauges.c:140: Warning: 
<   signed overflow. assert j + 1 ≤ 2147483647;
299,300d290
< [eva:alarm] tests/value/gauges.c:220: Warning: 
<   signed overflow. assert -2147483648 ≤ n - 1;
315,316d304
< [eva:alarm] tests/value/gauges.c:240: Warning: 
<   signed overflow. assert j + 1 ≤ 2147483647;
318c306
<   Frama_C_show_each: {45; 46; 47; 48; 49; 50; 51}, [0..2147483647]
---
>   Frama_C_show_each: {45; 46; 47; 48; 49; 50; 51}, [0..46]
324,325d311
< [eva:alarm] tests/value/gauges.c:251: Warning: 
<   signed overflow. assert j + 1 ≤ 2147483647;
327c313
<   Frama_C_show_each: {48; 49; 50; 51; 52; 53; 54}, [0..2147483647]
---
>   Frama_C_show_each: {48; 49; 50; 51; 52; 53; 54}, [0..49]
333,334d318
< [eva:alarm] tests/value/gauges.c:263: Warning: 
<   signed overflow. assert j + 1 ≤ 2147483647;
336c320
<   Frama_C_show_each: {-59; -58; -57; -56; -55; -54; -53}, [0..2147483647]
---
>   Frama_C_show_each: {-59; -58; -57; -56; -55; -54; -53}, [0..65]
342,343d325
< [eva:alarm] tests/value/gauges.c:274: Warning: 
<   signed overflow. assert j + 1 ≤ 2147483647;
345c327
<   Frama_C_show_each: {-64; -63; -62; -61; -60; -59; -58}, [0..2147483647]
---
>   Frama_C_show_each: {-64; -63; -62; -61; -60; -59; -58}, [0..70]
353,354d334
< [eva:alarm] tests/value/gauges.c:293: Warning: 
<   signed overflow. assert j + 1 ≤ 2147483647;
356c336
<   Frama_C_show_each: {-593; -592; -591; -590; -589; -588}, [0..2147483647]
---
>   Frama_C_show_each: {-593; -592; -591; -590; -589; -588}, [0..598]
798c778
<   n ∈ [-2147483648..99]
---
>   n ∈ [-2147483547..99]
801c781
<   i ∈ [0..2147483647]
---
>   i ∈ [10..2147483647]
837c817
<   i ∈ [0..2147483647]
---
>   i ∈ [0..21]
diff tests/value/oracle/ghost.res.oracle tests/value/oracle_apron/ghost.res.oracle
10,11d9
< [eva:alarm] tests/value/ghost.i:17: Warning: 
<   signed overflow. assert G + 1 ≤ 2147483647;
diff tests/value/oracle/hierarchical_convergence.res.oracle tests/value/oracle_apron/hierarchical_convergence.res.oracle
40c40
<   j ∈ [0..2147483647]
---
>   j ∈ [0..99]
diff tests/value/oracle/initialized_copy.1.res.oracle tests/value/oracle_apron/initialized_copy.1.res.oracle
24,27c24
<   c_0[bits 0 to 7] ∈ {1} or UNINITIALIZED
<      [bits 8 to 15] ∈ {2}
<      [bits 16 to 23] ∈ {3}
<      [bits 24 to 31] ∈ {4}
---
>   c_0 ∈ {67305985} or UNINITIALIZED
29,32c26
<   a_2[bits 0 to 7] ∈ {1} or UNINITIALIZED
<      [bits 8 to 15] ∈ {2}
<      [bits 16 to 23] ∈ {3}
<      [bits 24 to 31] ∈ {4}
---
>   a_2 ∈ {67305985} or UNINITIALIZED
diff tests/value/oracle/invalid_loc_return.res.oracle tests/value/oracle_apron/invalid_loc_return.res.oracle
70c70,73
< [eva] tests/value/invalid_loc_return.i:17: Reusing old results for call to foo
---
> [eva] computing for function foo <- main <- main2.
>   Called from tests/value/invalid_loc_return.i:17.
> [eva] Recording results for foo
> [eva] Done for function foo
diff tests/value/oracle/local.res.oracle tests/value/oracle_apron/local.res.oracle
22c22,25
< [eva] tests/value/local.i:13: Reusing old results for call to f
---
> [eva] computing for function f <- g <- main.
>   Called from tests/value/local.i:13.
> [eva] Recording results for f
> [eva] Done for function f
diff tests/value/oracle/local_slevel.res.oracle tests/value/oracle_apron/local_slevel.res.oracle
13,15c13,15
< [eva] tests/value/local_slevel.i:18: Frama_C_show_each: {1}, {1}, {0; 1}
< [eva] tests/value/local_slevel.i:18: Frama_C_show_each: {-1}, {0}, {0; 1}
< [eva] tests/value/local_slevel.i:18: Frama_C_show_each: {1}, {1}, {0; 1; 2}
---
> [eva] tests/value/local_slevel.i:18: Frama_C_show_each: {1}, {1}, {1}
> [eva] tests/value/local_slevel.i:18: Frama_C_show_each: {-1}, {0}, {0}
> [eva] tests/value/local_slevel.i:18: Frama_C_show_each: {1}, {1}, {1}
18c18
<   Frama_C_show_each: {1}, [1..79],1%2, {0; 1; 2; 3}
---
>   Frama_C_show_each: {1}, [1..79],1%2, {1; 2; 3}
22c22
<   Frama_C_show_each: {1}, [1..79],1%2, {0; 1; 2; 3; 4}
---
>   Frama_C_show_each: {1}, [1..79],1%2, {1; 2; 3; 4}
26,34c26
<   Frama_C_show_each: {1}, [1..79],1%2, [0..2147483647]
< [eva] tests/value/local_slevel.i:18: 
<   Frama_C_show_each: {-1}, [0..78],0%2, [0..2147483647]
< [eva] tests/value/local_slevel.i:18: 
<   Frama_C_show_each: {1}, [1..79],1%2, [0..2147483648]
< [eva] tests/value/local_slevel.i:18: 
<   Frama_C_show_each: {-1}, [0..78],0%2, [0..2147483648]
< [eva] tests/value/local_slevel.i:18: 
<   Frama_C_show_each: {1}, [1..79],1%2, [0..4294967295]
---
>   Frama_C_show_each: {1}, [1..79],1%2, [1..79]
36c28
<   Frama_C_show_each: {-1}, [0..78],0%2, [0..4294967295]
---
>   Frama_C_show_each: {-1}, [0..78],0%2, [0..78]
152c144
<   r ∈ [--..--]
---
>   r ∈ [0..2147483647]
393,395c385,387
< [eva] tests/value/local_slevel.i:18: Frama_C_show_each: {1}, {1}, {0; 1}
< [eva] tests/value/local_slevel.i:18: Frama_C_show_each: {-1}, {0}, {0; 1}
< [eva] tests/value/local_slevel.i:18: Frama_C_show_each: {1}, {1}, {0; 1; 2}
---
> [eva] tests/value/local_slevel.i:18: Frama_C_show_each: {1}, {1}, {1}
> [eva] tests/value/local_slevel.i:18: Frama_C_show_each: {-1}, {0}, {0}
> [eva] tests/value/local_slevel.i:18: Frama_C_show_each: {1}, {1}, {1}
398c390
<   Frama_C_show_each: {1}, [1..79],1%2, {0; 1; 2; 3}
---
>   Frama_C_show_each: {1}, [1..79],1%2, {1; 2; 3}
402c394
<   Frama_C_show_each: {1}, [1..79],1%2, {0; 1; 2; 3; 4}
---
>   Frama_C_show_each: {1}, [1..79],1%2, {1; 2; 3; 4}
406,414c398
<   Frama_C_show_each: {1}, [1..79],1%2, [0..2147483647]
< [eva] tests/value/local_slevel.i:18: 
<   Frama_C_show_each: {-1}, [0..78],0%2, [0..2147483647]
< [eva] tests/value/local_slevel.i:18: 
<   Frama_C_show_each: {1}, [1..79],1%2, [0..2147483648]
< [eva] tests/value/local_slevel.i:18: 
<   Frama_C_show_each: {-1}, [0..78],0%2, [0..2147483648]
< [eva] tests/value/local_slevel.i:18: 
<   Frama_C_show_each: {1}, [1..79],1%2, [0..4294967295]
---
>   Frama_C_show_each: {1}, [1..79],1%2, [1..79]
416c400
<   Frama_C_show_each: {-1}, [0..78],0%2, [0..4294967295]
---
>   Frama_C_show_each: {-1}, [0..78],0%2, [0..78]
532c516
<   r ∈ [--..--]
---
>   r ∈ [0..2147483647]
diff tests/value/oracle/logicdeps.res.oracle tests/value/oracle_apron/logicdeps.res.oracle
31c31,39
< [eva] tests/value/logicdeps.i:25: Reusing old results for call to g
---
> [eva] computing for function g <- main.
>   Called from tests/value/logicdeps.i:25.
> [eva] computing for function f <- g <- main.
>   Called from tests/value/logicdeps.i:13.
> [eva] Done for function f
> [eva] Recording results for g
> [from] Computing for function g
> [from] Done for function g
> [eva] Done for function g
51c59,67
< [eva] tests/value/logicdeps.i:32: Reusing old results for call to g
---
> [eva] computing for function g <- main.
>   Called from tests/value/logicdeps.i:32.
> [eva] computing for function f <- g <- main.
>   Called from tests/value/logicdeps.i:13.
> [eva] Done for function f
> [eva] Recording results for g
> [from] Computing for function g
> [from] Done for function g
> [eva] Done for function g
diff tests/value/oracle/long.res.oracle tests/value/oracle_apron/long.res.oracle
15,17c15,26
< [eva] tests/value/long.i:12: Reusing old results for call to f
< [eva] tests/value/long.i:12: Reusing old results for call to f
< [eva] tests/value/long.i:12: Reusing old results for call to f
---
> [eva] computing for function f <- main.
>   Called from tests/value/long.i:12.
> [eva] Recording results for f
> [eva] Done for function f
> [eva] computing for function f <- main.
>   Called from tests/value/long.i:12.
> [eva] Recording results for f
> [eva] Done for function f
> [eva] computing for function f <- main.
>   Called from tests/value/long.i:12.
> [eva] Recording results for f
> [eva] Done for function f
diff tests/value/oracle/long_const.0.res.oracle tests/value/oracle_apron/long_const.0.res.oracle
19c19,22
< [eva] tests/value/long_const.i:25: Reusing old results for call to LL_ABS
---
> [eva] computing for function LL_ABS <- div64 <- main.
>   Called from tests/value/long_const.i:25.
> [eva] Recording results for LL_ABS
> [eva] Done for function LL_ABS
diff tests/value/oracle/long_const.1.res.oracle tests/value/oracle_apron/long_const.1.res.oracle
19c19,22
< [eva] tests/value/long_const.i:25: Reusing old results for call to LL_ABS
---
> [eva] computing for function LL_ABS <- div64 <- main.
>   Called from tests/value/long_const.i:25.
> [eva] Recording results for LL_ABS
> [eva] Done for function LL_ABS
diff tests/value/oracle/loop_wvar.1.res.oracle tests/value/oracle_apron/loop_wvar.1.res.oracle
12,13d11
< [eva:alarm] tests/value/loop_wvar.i:57: Warning: 
<   signed overflow. assert next + 1 ≤ 2147483647;
27,28c25
< [eva] tests/value/loop_wvar.i:71: Frama_C_show_each: [0..9], [0..17], [0..11]
< [eva] tests/value/loop_wvar.i:71: Frama_C_show_each: [0..9], [0..18], [0..12]
---
> [eva] tests/value/loop_wvar.i:71: Frama_C_show_each: [0..9], [0..9], [0..9]
37,38c34,35
<   j ∈ [0..18]
<   k ∈ [0..12]
---
>   j ∈ [0..17]
>   k ∈ [0..11]
41c38
<   next ∈ [0..2147483647]
---
>   next ∈ [0..25]
diff tests/value/oracle/loopinv.res.oracle tests/value/oracle_apron/loopinv.res.oracle
51,53c51
< [eva:alarm] tests/value/loopinv.c:45: Warning: 
<   signed overflow. assert j + 1 ≤ 2147483647;
< [eva] tests/value/loopinv.c:46: Frama_C_show_each: [0..99], [0..2147483647]
---
> [eva] tests/value/loopinv.c:46: Frama_C_show_each: [0..99], [0..100]
134,135d131
< [    -    ] Assertion 'Eva,signed_overflow' (file tests/value/loopinv.c, line 45)
<             tried with Eva.
148,149c144,145
<      4 To be validated
<     13 Total
---
>      3 To be validated
>     12 Total
diff tests/value/oracle/memexec.res.oracle tests/value/oracle_apron/memexec.res.oracle
25,30c25,48
< [eva] tests/value/memexec.c:13: Reusing old results for call to f11
< [eva] tests/value/memexec.c:14: Reusing old results for call to f11
< [eva] tests/value/memexec.c:16: Reusing old results for call to f11
< [eva] tests/value/memexec.c:18: Reusing old results for call to f11
< [eva] tests/value/memexec.c:20: Reusing old results for call to f11
< [eva] tests/value/memexec.c:21: Reusing old results for call to f11
---
> [eva] computing for function f11 <- f1 <- main.
>   Called from tests/value/memexec.c:13.
> [eva] Recording results for f11
> [eva] Done for function f11
> [eva] computing for function f11 <- f1 <- main.
>   Called from tests/value/memexec.c:14.
> [eva] Recording results for f11
> [eva] Done for function f11
> [eva] computing for function f11 <- f1 <- main.
>   Called from tests/value/memexec.c:16.
> [eva] Recording results for f11
> [eva] Done for function f11
> [eva] computing for function f11 <- f1 <- main.
>   Called from tests/value/memexec.c:18.
> [eva] Recording results for f11
> [eva] Done for function f11
> [eva] computing for function f11 <- f1 <- main.
>   Called from tests/value/memexec.c:20.
> [eva] Recording results for f11
> [eva] Done for function f11
> [eva] computing for function f11 <- f1 <- main.
>   Called from tests/value/memexec.c:21.
> [eva] Recording results for f11
> [eva] Done for function f11
104c122,125
< [eva] tests/value/memexec.c:113: Reusing old results for call to f5_aux
---
> [eva] computing for function f5_aux <- f5 <- main.
>   Called from tests/value/memexec.c:113.
> [eva] Recording results for f5_aux
> [eva] Done for function f5_aux
106,107c127
<   Frama_C_show_each_f5:
<   [9..2147483647], [-2147483648..2147483647], [-2147483648..7]
---
>   Frama_C_show_each_f5: [9..2147483647], [-2147483648..6], [-2147483648..7]
128c148,151
< [eva] tests/value/memexec.c:137: Reusing old results for call to f7_1
---
> [eva] computing for function f7_1 <- f7 <- main.
>   Called from tests/value/memexec.c:137.
> [eva] Recording results for f7_1
> [eva] Done for function f7_1
143c166,169
< [eva] tests/value/memexec.c:150: Reusing old results for call to f8_1
---
> [eva] computing for function f8_1 <- f8 <- main.
>   Called from tests/value/memexec.c:150.
> [eva] Recording results for f8_1
> [eva] Done for function f8_1
195c221
<   g_f5_1 ∈ [--..--]
---
>   g_f5_1 ∈ [-2147483648..6]
231c257
<   g_f5_1 ∈ [--..--]
---
>   g_f5_1 ∈ [-2147483648..6]
diff tests/value/oracle/modulo.res.oracle tests/value/oracle_apron/modulo.res.oracle
40a41,64
> [eva] tests/value/modulo.i:41: Frama_C_show_each_1: [-10..-1], [-9..-1], [-8..0]
> [eva] tests/value/modulo.i:41: Frama_C_show_each_1: [-10..-1], [1..9], [-8..0]
> [eva] tests/value/modulo.i:41: Frama_C_show_each_1: [1..10], [-9..-1], [0..8]
> [eva] tests/value/modulo.i:41: Frama_C_show_each_1: [1..10], [1..9], [0..8]
> [eva] tests/value/modulo.i:41: 
>   Frama_C_show_each_1:
>   [1..9], {1; 2; 3; 4; 5; 6; 7; 8}, {0; 1; 2; 3; 4; 5; 6; 7}
> [eva] tests/value/modulo.i:41: 
>   Frama_C_show_each_1:
>   [-9..-1], {1; 2; 3; 4; 5; 6; 7; 8}, {-7; -6; -5; -4; -3; -2; -1; 0}
> [eva] tests/value/modulo.i:41: 
>   Frama_C_show_each_1:
>   [1..9], {-8; -7; -6; -5; -4; -3; -2; -1}, {0; 1; 2; 3; 4; 5; 6; 7}
> [eva] tests/value/modulo.i:41: 
>   Frama_C_show_each_1:
>   [-9..-1], {-8; -7; -6; -5; -4; -3; -2; -1}, {-7; -6; -5; -4; -3; -2; -1; 0}
> [eva] tests/value/modulo.i:41: 
>   Frama_C_show_each_1:
>   {-8; -7; -6; -5; -4; -3; -2; -1},
>   {1; 2; 3; 4; 5; 6; 7},
>   {-6; -5; -4; -3; -2; -1; 0}
> [eva] tests/value/modulo.i:41: 
>   Frama_C_show_each_1:
>   {1; 2; 3; 4; 5; 6; 7; 8}, {-7; -6; -5; -4; -3; -2; -1}, {0; 1; 2; 3; 4; 5; 6}
50a75,98
> [eva] tests/value/modulo.i:53: Frama_C_show_each_2: [-10..-1], [1..9], [-8..0]
> [eva] tests/value/modulo.i:53: Frama_C_show_each_2: [-10..-1], [-9..-1], [-8..0]
> [eva] tests/value/modulo.i:53: Frama_C_show_each_2: [1..10], [1..9], [0..8]
> [eva] tests/value/modulo.i:53: Frama_C_show_each_2: [1..10], [-9..-1], [0..8]
> [eva] tests/value/modulo.i:53: 
>   Frama_C_show_each_2:
>   [-9..-1], {1; 2; 3; 4; 5; 6; 7; 8}, {-7; -6; -5; -4; -3; -2; -1; 0}
> [eva] tests/value/modulo.i:53: 
>   Frama_C_show_each_2:
>   [1..9], {1; 2; 3; 4; 5; 6; 7; 8}, {0; 1; 2; 3; 4; 5; 6; 7}
> [eva] tests/value/modulo.i:53: 
>   Frama_C_show_each_2:
>   [-9..-1], {-8; -7; -6; -5; -4; -3; -2; -1}, {-7; -6; -5; -4; -3; -2; -1; 0}
> [eva] tests/value/modulo.i:53: 
>   Frama_C_show_each_2:
>   [1..9], {-8; -7; -6; -5; -4; -3; -2; -1}, {0; 1; 2; 3; 4; 5; 6; 7}
> [eva] tests/value/modulo.i:53: 
>   Frama_C_show_each_2:
>   {-8; -7; -6; -5; -4; -3; -2; -1},
>   {1; 2; 3; 4; 5; 6; 7},
>   {-6; -5; -4; -3; -2; -1; 0}
> [eva] tests/value/modulo.i:53: 
>   Frama_C_show_each_2:
>   {1; 2; 3; 4; 5; 6; 7; 8}, {-7; -6; -5; -4; -3; -2; -1}, {0; 1; 2; 3; 4; 5; 6}
60a109,110
> [eva] tests/value/modulo.i:64: Frama_C_show_each_3: [-10..10], [-9..9], [-8..8]
> [eva] tests/value/modulo.i:64: Frama_C_show_each_3: [-9..9], [-8..8], [-7..7]
diff tests/value/oracle/octagons.res.oracle tests/value/oracle_apron/octagons.res.oracle
270,273c270,273
<   a ∈ [-1024..2147483647]
<   b ∈ [-1023..2147483647]
<   c ∈ [-1023..2147483647]
<   d ∈ [-1032..2147483647]
---
>   a ∈ [-603..2147483646]
>   b ∈ [-602..2147483647]
>   c ∈ [-602..1446]
>   d ∈ [-611..2147483647]
diff tests/value/oracle/offsetmap.0.res.oracle tests/value/oracle_apron/offsetmap.0.res.oracle
62,63c62
<   a[bits 0 to 7] ∈ {1; 6}
<    [bits 8 to 31]# ∈ {6}%32, bits 8 to 31 
---
>   a ∈ {1; 6}
65,66c64
<   a7[bits 0 to 7] ∈ {1}
<     [bits 8 to 31]# ∈ {97}%32, bits 8 to 31 
---
>   a7 ∈ {1}
106,107c104
<   a[bits 0 to 7] ∈ {1; 6}
<    [bits 8 to 31]# ∈ {6}%32, bits 8 to 31 
---
>   a ∈ {1; 6}
109,110c106
<   a7[bits 0 to 7] ∈ {1}
<     [bits 8 to 31]# ∈ {97}%32, bits 8 to 31 
---
>   a7 ∈ {1}
diff tests/value/oracle/offsetmap.1.res.oracle tests/value/oracle_apron/offsetmap.1.res.oracle
62,67c62,64
<   a[bits 0 to 7] ∈ {1; 6}
<    [bits 8 to 31]# ∈ {6}%32, bits 8 to 31 
<   b[bits 0 to 7] ∈ {0; 1}
<    [bits 8 to 31]# ∈ {0; 6}%32, bits 8 to 31 
<   a7[bits 0 to 7] ∈ {1}
<     [bits 8 to 31]# ∈ {97}%32, bits 8 to 31 
---
>   a ∈ {1; 6}
>   b ∈ {0; 1}
>   a7 ∈ {1}
107,112c104,106
<   a[bits 0 to 7] ∈ {1; 6}
<    [bits 8 to 31]# ∈ {6}%32, bits 8 to 31 
<   b[bits 0 to 7] ∈ {0; 1}
<    [bits 8 to 31]# ∈ {0; 6}%32, bits 8 to 31 
<   a7[bits 0 to 7] ∈ {1}
<     [bits 8 to 31]# ∈ {97}%32, bits 8 to 31 
---
>   a ∈ {1; 6}
>   b ∈ {0; 1}
>   a7 ∈ {1}
diff tests/value/oracle/partitioning-annots.4.res.oracle tests/value/oracle_apron/partitioning-annots.4.res.oracle
14,15d13
< [eva:alarm] tests/value/partitioning-annots.c:134: Warning: 
<   division by zero. assert j ≢ 0;
diff tests/value/oracle/precise_locations.res.oracle tests/value/oracle_apron/precise_locations.res.oracle
32,35c32,47
< [eva] tests/value/precise_locations.i:39: Reusing old results for call to ct
< [eva] tests/value/precise_locations.i:39: Reusing old results for call to ct
< [eva] tests/value/precise_locations.i:39: Reusing old results for call to ct
< [eva] tests/value/precise_locations.i:39: Reusing old results for call to ct
---
> [eva] computing for function ct <- main.
>   Called from tests/value/precise_locations.i:39.
> [eva] Recording results for ct
> [eva] Done for function ct
> [eva] computing for function ct <- main.
>   Called from tests/value/precise_locations.i:39.
> [eva] Recording results for ct
> [eva] Done for function ct
> [eva] computing for function ct <- main.
>   Called from tests/value/precise_locations.i:39.
> [eva] Recording results for ct
> [eva] Done for function ct
> [eva] computing for function ct <- main.
>   Called from tests/value/precise_locations.i:39.
> [eva] Recording results for ct
> [eva] Done for function ct
37,42c49,72
< [eva] tests/value/precise_locations.i:39: Reusing old results for call to ct
< [eva] tests/value/precise_locations.i:39: Reusing old results for call to ct
< [eva] tests/value/precise_locations.i:39: Reusing old results for call to ct
< [eva] tests/value/precise_locations.i:39: Reusing old results for call to ct
< [eva] tests/value/precise_locations.i:39: Reusing old results for call to ct
< [eva] tests/value/precise_locations.i:39: Reusing old results for call to ct
---
> [eva] computing for function ct <- main.
>   Called from tests/value/precise_locations.i:39.
> [eva] Recording results for ct
> [eva] Done for function ct
> [eva] computing for function ct <- main.
>   Called from tests/value/precise_locations.i:39.
> [eva] Recording results for ct
> [eva] Done for function ct
> [eva] computing for function ct <- main.
>   Called from tests/value/precise_locations.i:39.
> [eva] Recording results for ct
> [eva] Done for function ct
> [eva] computing for function ct <- main.
>   Called from tests/value/precise_locations.i:39.
> [eva] Recording results for ct
> [eva] Done for function ct
> [eva] computing for function ct <- main.
>   Called from tests/value/precise_locations.i:39.
> [eva] Recording results for ct
> [eva] Done for function ct
> [eva] computing for function ct <- main.
>   Called from tests/value/precise_locations.i:39.
> [eva] Recording results for ct
> [eva] Done for function ct
520,529c550,589
< [eva] tests/value/precise_locations.i:39: Reusing old results for call to ct
< [eva] tests/value/precise_locations.i:39: Reusing old results for call to ct
< [eva] tests/value/precise_locations.i:39: Reusing old results for call to ct
< [eva] tests/value/precise_locations.i:39: Reusing old results for call to ct
< [eva] tests/value/precise_locations.i:39: Reusing old results for call to ct
< [eva] tests/value/precise_locations.i:39: Reusing old results for call to ct
< [eva] tests/value/precise_locations.i:39: Reusing old results for call to ct
< [eva] tests/value/precise_locations.i:39: Reusing old results for call to ct
< [eva] tests/value/precise_locations.i:39: Reusing old results for call to ct
< [eva] tests/value/precise_locations.i:39: Reusing old results for call to ct
---
> [eva] computing for function ct <- main.
>   Called from tests/value/precise_locations.i:39.
> [eva] Recording results for ct
> [eva] Done for function ct
> [eva] computing for function ct <- main.
>   Called from tests/value/precise_locations.i:39.
> [eva] Recording results for ct
> [eva] Done for function ct
> [eva] computing for function ct <- main.
>   Called from tests/value/precise_locations.i:39.
> [eva] Recording results for ct
> [eva] Done for function ct
> [eva] computing for function ct <- main.
>   Called from tests/value/precise_locations.i:39.
> [eva] Recording results for ct
> [eva] Done for function ct
> [eva] computing for function ct <- main.
>   Called from tests/value/precise_locations.i:39.
> [eva] Recording results for ct
> [eva] Done for function ct
> [eva] computing for function ct <- main.
>   Called from tests/value/precise_locations.i:39.
> [eva] Recording results for ct
> [eva] Done for function ct
> [eva] computing for function ct <- main.
>   Called from tests/value/precise_locations.i:39.
> [eva] Recording results for ct
> [eva] Done for function ct
> [eva] computing for function ct <- main.
>   Called from tests/value/precise_locations.i:39.
> [eva] Recording results for ct
> [eva] Done for function ct
> [eva] computing for function ct <- main.
>   Called from tests/value/precise_locations.i:39.
> [eva] Recording results for ct
> [eva] Done for function ct
> [eva] computing for function ct <- main.
>   Called from tests/value/precise_locations.i:39.
> [eva] Recording results for ct
> [eva] Done for function ct
diff tests/value/oracle/precond.res.oracle tests/value/oracle_apron/precond.res.oracle
49a50,51
> [eva] computing for function f <- main.
>   Called from tests/value/precond.c:39.
53c55,56
< [eva] tests/value/precond.c:39: Reusing old results for call to f
---
> [eva] Recording results for f
> [eva] Done for function f
diff tests/value/oracle/ptr_relation.1.res.oracle tests/value/oracle_apron/ptr_relation.1.res.oracle
24c24
<   j ∈ {-1; 0; 1}
---
>   j ∈ {0}
diff tests/value/oracle/raz.res.oracle tests/value/oracle_apron/raz.res.oracle
14c14
<   i ∈ [0..2147483647]
---
>   i ∈ [0..10]
diff tests/value/oracle/reevaluate_alarms.res.oracle tests/value/oracle_apron/reevaluate_alarms.res.oracle
61c61
<   S ∈ [0..2147483647]
---
>   S ∈ [4..2147483647]
diff tests/value/oracle/relation_reduction.res.oracle tests/value/oracle_apron/relation_reduction.res.oracle
24,27d23
< [eva:alarm] tests/value/relation_reduction.i:20: Warning: 
<   accessing out of bounds index. assert 0 ≤ y;
< [eva:alarm] tests/value/relation_reduction.i:20: Warning: 
<   accessing out of bounds index. assert y < 9;
34,37c30,33
<   R1 ∈ [-2147483648..2147483637]
<   R2 ∈ [-2147483638..2147483647]
<   R3 ∈ [--..--]
<   R4 ∈ {0; 1; 2; 3; 4; 5}
---
>   R1 ∈ {0; 2}
>   R2 ∈ {0; 12}
>   R3 ∈ {0; 7}
>   R4 ∈ {0; 2}
diff tests/value/oracle/relation_shift.res.oracle tests/value/oracle_apron/relation_shift.res.oracle
31,32c31,32
<   r1 ∈ [--..--]
<   r2 ∈ [--..--]
---
>   r1 ∈ {2}
>   r2 ∈ {7}
35,37c35,37
<   x ∈ [-2147483647..2147483647]
<   y ∈ [-2147483648..2147483646]
<   z ∈ [-2147483642..2147483647]
---
>   x ∈ [-2147483646..2147483642]
>   y ∈ [-2147483648..2147483640]
>   z ∈ [-2147483641..2147483647]
49,50c49,50
<   r1 ∈ [--..--]
<   r2 ∈ [--..--]
---
>   r1 ∈ {2}
>   r2 ∈ {7}
53,55c53,55
<   x ∈ [-2147483647..2147483647]
<   y ∈ [-2147483648..2147483646]
<   z ∈ [-2147483642..2147483647]
---
>   x ∈ [-2147483646..2147483642]
>   y ∈ [-2147483648..2147483640]
>   z ∈ [-2147483641..2147483647]
diff tests/value/oracle/relations.res.oracle tests/value/oracle_apron/relations.res.oracle
80,81c80,82
<   e ∈ [--..--]
<   f ∈ [--..--]
---
>   e ∈ {1}
>   f[bits 0 to 7] ∈ {1; 4}
>    [bits 8 to 31] ∈ [--..--]
diff tests/value/oracle/relations2.res.oracle tests/value/oracle_apron/relations2.res.oracle
25c25
<   len ∈ [--..--]
---
>   len ∈ [0..1023]
36,37c36
< [eva] tests/value/relations2.i:17: 
<   Frama_C_show_each_end: [0..4294967295], [0..64]
---
> [eva] tests/value/relations2.i:17: Frama_C_show_each_end: [0..1023], [0..64]
69,71d67
< [eva:alarm] tests/value/relations2.i:34: Warning: 
<   accessing out of bounds index.
<   assert (unsigned int)(i - (unsigned int)(t + 1)) < 514;
124,125d119
< [eva:alarm] tests/value/relations2.i:35: Warning: 
<   signed overflow. assert s + b3 ≤ 2147483647;
140c134
<   len ∈ [--..--]
---
>   len ∈ [0..1023]
diff tests/value/oracle/return.res.oracle tests/value/oracle_apron/return.res.oracle
12c12,15
< [eva] tests/value/return.i:19: Reusing old results for call to f
---
> [eva] computing for function f <- main.
>   Called from tests/value/return.i:19.
> [eva] Recording results for f
> [eva] Done for function f
diff tests/value/oracle/static.res.oracle tests/value/oracle_apron/static.res.oracle
22c22,25
< [eva] tests/value/static.i:20: Reusing old results for call to f
---
> [eva] computing for function f <- main.
>   Called from tests/value/static.i:20.
> [eva] Recording results for f
> [eva] Done for function f
diff tests/value/oracle/struct2.res.oracle tests/value/oracle_apron/struct2.res.oracle
81,84d80
<   accessing out of bounds index. assert 0 ≤ (int)(i + j);
< [eva:alarm] tests/value/struct2.i:185: Warning: 
<   accessing out of bounds index. assert (int)(i + j) < 2;
< [eva:alarm] tests/value/struct2.i:185: Warning: 
106d101
< [scope:rm_asserts] removing 2 assertion(s)
diff tests/value/oracle/test.0.res.oracle tests/value/oracle_apron/test.0.res.oracle
29c29
<   j ∈ [-1073741822..1]
---
>   j ∈ {-1; 0; 1}
diff tests/value/oracle/undefined_sequence.1.res.oracle tests/value/oracle_apron/undefined_sequence.1.res.oracle
33c33,36
< [eva] tests/value/undefined_sequence.i:54: Reusing old results for call to g
---
> [eva] computing for function g <- main.
>   Called from tests/value/undefined_sequence.i:54.
> [eva] Recording results for g
> [eva] Done for function g
diff tests/value/oracle/unroll.res.oracle tests/value/oracle_apron/unroll.res.oracle
13,14d12
< [eva:alarm] tests/value/unroll.i:34: Warning: 
<   signed overflow. assert -2147483648 ≤ j - 1;
26c24
<   j ∈ [-2147483648..-123]
---
>   j ∈ {-238}
diff tests/value/oracle/unroll_simple.res.oracle tests/value/oracle_apron/unroll_simple.res.oracle
8,9d7
< [eva:alarm] tests/value/unroll_simple.i:11: Warning: 
<   signed overflow. assert -2147483648 ≤ j - 1;
21c19
<   j ∈ [-2147483648..-126]
---
>   j ∈ {-250}
diff tests/value/oracle/widen_on_non_monotonic.res.oracle tests/value/oracle_apron/widen_on_non_monotonic.res.oracle
25a26
> [eva] tests/value/widen_on_non_monotonic.i:21: starting to merge loop iterations
diff tests/value/oracle/with_comment.res.oracle tests/value/oracle_apron/with_comment.res.oracle
9,10d8
< [eva:alarm] tests/value/with_comment.i:21: Warning: 
<   signed overflow. assert G + 1 ≤ 2147483647;
