[kernel] Parsing tests/value/loop_simple.i (no preprocessing)
[value] Analyzing a complete application starting at main
[value] Computing initial state
[value] Initial state computed
[value:initial-state] Values of globals at initialization
  i ∈ {0}
  j ∈ {0}
  k ∈ {0}
  n ∈ {0}
  r ∈ {0}
[value] tests/value/loop_simple.i:24: entering loop for the first time
[value] tests/value/loop_simple.i:25: entering loop for the first time
[value] tests/value/loop_simple.i:26: entering loop for the first time
[value:alarm] tests/value/loop_simple.i:27: Warning: 
  signed overflow. assert (int)((int)(i + j) + k) + r ≤ 2147483647;
[value:alarm] tests/value/loop_simple.i:27: Warning: 
  signed overflow.
  assert (int)((int)((int)(i + j) + k) + r) + 1 ≤ 2147483647;
[value] Recording results for main
[value] done for function main
[value] ====== VALUES COMPUTED ======
[value:final-states] Values at end of function main:
  i ∈ {2}
  j ∈ {0; 2}
  k ∈ {0; 2}
  n ∈ {2}
  r ∈ [0..2147483647]
[from] Computing for function main
[from] Done for function main
[from] ====== DEPENDENCIES COMPUTED ======
  These dependencies hold at termination for the executions that terminate:
[from] Function main:
  i FROM \nothing
  j FROM \nothing (and SELF)
  k FROM \nothing
  n FROM \nothing
  r FROM \nothing
  \result FROM \nothing
[from] ====== END OF DEPENDENCIES ======
[inout] Out (internal) for function main:
    i; j; k; n; r
[inout] Inputs for function main:
    i; j; k; n; r
