[kernel] Parsing share/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/value/simple_packed.c (with preprocessing)
[value] Analyzing a complete application starting at main
[value] Computing initial state
[value] Initial state computed
[value:initial-state] Values of globals at initialization
  
[value] computing for function f <- main.
        Called from tests/value/simple_packed.c:19.
[value] Recording results for f
[value] Done for function f
[value] Recording results for main
[value] done for function main
[value] ====== VALUES COMPUTED ======
[value:final-states] Values at end of function f:
  bar{.c; .i; .s.c} ∈ [--..--]
     .s.[bits 8 to 31] ∈ UNINITIALIZED
     .s.i ∈ [--..--]
[value:final-states] Values at end of function main:
  
[from] Computing for function f
[from] Done for function f
[from] Computing for function main
[from] Done for function main
[from] ====== DEPENDENCIES COMPUTED ======
       These dependencies hold at termination for the executions that terminate:
[from] Function f:
  \result FROM foo
[from] Function main:
  \result FROM foo
[from] ====== END OF DEPENDENCIES ======
[inout] Out (internal) for function f:
          bar
[inout] Inputs for function f:
          \nothing
[inout] Out (internal) for function main:
          \nothing
[inout] Inputs for function main:
          \nothing
