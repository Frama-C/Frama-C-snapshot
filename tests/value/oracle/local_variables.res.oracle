[kernel] Parsing share/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/value/local_variables.i (no preprocessing)
[value] Analyzing a complete application starting at main
[value] Computing initial state
[value] Initial state computed
[value:initial-state] Values of globals at initialization
  A ∈ {0}
  B ∈ {0}
  C ∈ {0}
  D ∈ {0}
  R ∈ {0}
  S ∈ {0}
[value] computing for function u <- main.
        Called from tests/value/local_variables.i:30.
[value] computing for function w <- u <- main.
        Called from tests/value/local_variables.i:11.
[value] computing for function unkn <- w <- u <- main.
        Called from tests/value/local_variables.i:24.
tests/value/local_variables.i:24:[kernel] warning: Neither code nor specification for function unkn, generating default assigns from the prototype
[value] using specification for function unkn
[value] Done for function unkn
[value] Recording results for w
[value] Done for function w
[value] Recording results for u
[value] Done for function u
[value] computing for function v <- main.
        Called from tests/value/local_variables.i:31.
[value] computing for function w <- v <- main.
        Called from tests/value/local_variables.i:18.
[value] computing for function unkn <- w <- v <- main.
        Called from tests/value/local_variables.i:24.
[value] Done for function unkn
[value] Recording results for w
[value] Done for function w
[value] Recording results for v
[value] Done for function v
tests/value/local_variables.i:35:[value] warning: locals {x} escaping the scope of a block of main through p
tests/value/local_variables.i:43:[value] entering loop for the first time
tests/value/local_variables.i:47:[value] warning: accessing left-value that contains escaping addresses.
                 assert ¬\dangling(&p);
tests/value/local_variables.i:47:[value] warning: out of bounds read. assert \valid_read(p);
[value] Recording results for main
[value] done for function main
[value] ====== VALUES COMPUTED ======
[value:final-states] Values at end of function w:
  B ∈ {0}
  wu ∈ {0}
  wv ∈ {0}
  __retres ∈ {0}
[value:final-states] Values at end of function u:
  B ∈ {0}
  ru ∈ {0}
  wu ∈ {0}
[value:final-states] Values at end of function v:
  B ∈ {0}
  rv ∈ {0}
  wv ∈ {0}
[value:final-states] Values at end of function main:
  B ∈ {0}
  R ∈ {0}
  S ∈ {0}
  p ∈ {{ &S_p[0] }}
  __retres ∈ [--..--]
[from] Computing for function w
[from] Computing for function unkn <-w
[from] Done for function unkn
[from] Done for function w
[from] Computing for function u
[from] Done for function u
[from] Computing for function v
[from] Done for function v
[from] Computing for function main
[from] Done for function main
[from] ====== DEPENDENCIES COMPUTED ======
       These dependencies hold at termination for the executions that terminate:
[from] Function unkn:
  \result FROM \nothing
[from] Function w:
  B FROM ru; rv; pr (and SELF)
  wu FROM A; pw (and SELF)
  wv FROM A; pw (and SELF)
  \result FROM ru; rv; pr
[from] Function u:
  B FROM C (and SELF)
  \result FROM C
[from] Function v:
  B FROM D (and SELF)
  \result FROM D
[from] Function main:
  B FROM C; D (and SELF)
  R FROM C
  S FROM D
  \result FROM c; p; S_p[0]
[from] ====== END OF DEPENDENCIES ======
[inout] Out (internal) for function w:
          B; wu; wv; tmp; __retres
[inout] Inputs for function w:
          A; ru; rv
[inout] InOut (internal) for function w:
        Operational inputs:
          A; ru; rv; pr; pw
        Operational inputs on termination:
          A; ru; rv; pr; pw
        Sure outputs:
          tmp; __retres
[inout] Out (internal) for function u:
          B; ru; wu; tmp
[inout] Inputs for function u:
          A; C
[inout] InOut (internal) for function u:
        Operational inputs:
          A; C
        Operational inputs on termination:
          A; C
        Sure outputs:
          ru; wu; tmp
[inout] Out (internal) for function v:
          B; rv; wv; tmp
[inout] Inputs for function v:
          A; D
[inout] InOut (internal) for function v:
        Operational inputs:
          A; D
        Operational inputs on termination:
          A; D
        Sure outputs:
          rv; wv; tmp
[inout] Out (internal) for function main:
          B; R; S; p; x; y; z; t; i; a; __retres
[inout] Inputs for function main:
          A; C; D; S_p[0]
[inout] InOut (internal) for function main:
        Operational inputs:
          A; C; D; c; p; S_p[0]
        Operational inputs on termination:
          A; C; D; c; p; S_p[0]
        Sure outputs:
          R; S; y; z; t; i; __retres
