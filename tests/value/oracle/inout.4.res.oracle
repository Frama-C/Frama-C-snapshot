[kernel] Parsing share/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/value/inout.i (no preprocessing)
[value] Analyzing a complete application starting at call_may_not_terminate
[value] Computing initial state
[value] Initial state computed
[value:initial-state] Values of globals at initialization
  Xt ∈ {0}
  Xs ∈ {0}
  Xs_I ∈ {0}
  Ys ∈ {0}
  Ys_I ∈ {0}
  Z ∈ {0}
  I ∈ {0}
  I_size ∈ {8}
  Itab[0] ∈ {-40}
      [1] ∈ {-25}
      [2] ∈ {-15}
      [3] ∈ {-5}
      [4] ∈ {5}
      [5] ∈ {15}
      [6] ∈ {25}
      [7] ∈ {40}
  I5_nt ∈ {0}
[value] computing for function may_not_terminate <- call_may_not_terminate.
        Called from tests/value/inout.i:68.
tests/value/inout.i:60:[value] entering loop for the first time
[value] Recording results for may_not_terminate
[value] Done for function may_not_terminate
[value] Recording results for call_may_not_terminate
[value] done for function call_may_not_terminate
[from] Computing for function may_not_terminate
[from] Done for function may_not_terminate
[from] Computing for function call_may_not_terminate
[from] Done for function call_may_not_terminate
[from] ====== DEPENDENCIES COMPUTED ======
       These dependencies hold at termination for the executions that terminate:
[from] Function may_not_terminate:
  Xs FROM i3
[from] Function call_may_not_terminate:
  Xs FROM j3
[from] ====== END OF DEPENDENCIES ======
[inout] InOut (internal) for function may_not_terminate:
        Operational inputs:
          I5_nt; i1; i2; i3; i4; i5_nt
        Operational inputs on termination:
          i1; i2; i3; i4
        Sure outputs:
          Xs; es
[inout] InOut (internal) for function call_may_not_terminate:
        Operational inputs:
          I5_nt; j1; j2; j3; j4; j5; c1; c2
        Operational inputs on termination:
          j1; j2; j3; j4; j5; c1; c2
        Sure outputs:
          Xs
