[kernel] Parsing share/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/value/backward_add_ptr.c (with preprocessing)
[value] Analyzing a complete application starting at main
[value] Computing initial state
[value] Initial state computed
[value:initial-state] Values of globals at initialization
  rand âˆˆ [--..--]
[value] computing for function main1 <- main.
        Called from tests/value/backward_add_ptr.c:185.
tests/value/backward_add_ptr.c:25:[value] warning: out of bounds read. assert \valid_read(p + (unsigned int)q);
[value] Called Frama_C_show_each_only_a({0; 1}, {{ &a }}, {0})
tests/value/backward_add_ptr.c:32:[value] warning: out of bounds read. assert \valid_read((char *)p + (unsigned int)q);
[value] Called Frama_C_show_each_reduced_offset({0; 1},
                                                {{ NULL + {0; 1; 2; 3} ; &a }},
                                                {{ NULL + {0; 1; 2; 3} ; &b }})
tests/value/backward_add_ptr.c:38:[value] warning: out of bounds read.
                 assert \valid_read(p + (unsigned int)((unsigned int)q / 4));
[value] Called Frama_C_show_each_no_reduction({0; 1},
                                              {{ NULL + [0..4294967295] ; &a }},
                                              {{ NULL + [0..4294967295] ; &b }})
[value] Recording results for main1
[value] Done for function main1
[value] computing for function main2 <- main.
        Called from tests/value/backward_add_ptr.c:186.
tests/value/backward_add_ptr.c:54:[value] warning: out of bounds read. assert \valid_read((int *)((char *)p + (unsigned int)q));
[value] Called Frama_C_show_each_int_if({{ &a }}, {0})
[value] Called Frama_C_show_each_int_else({0}, {{ &b }})
tests/value/backward_add_ptr.c:60:[value] warning: out of bounds read. assert \valid_read((char *)p + (unsigned int)q);
[value] Called Frama_C_show_each_char_if({{ NULL + {1; 2; 3} ; &a }},
                                         {{ NULL + {0; 1; 2; 3} ; &b }})
[value] Called Frama_C_show_each_char_else({0}, {{ &b }})
[value] Recording results for main2
[value] Done for function main2
[value] computing for function main3 <- main.
        Called from tests/value/backward_add_ptr.c:187.
[value] computing for function gm <- main3 <- main.
        Called from tests/value/backward_add_ptr.c:75.
tests/value/backward_add_ptr.c:68:[value] Assigning imprecise value to __retres.
        The imprecision originates from Arithmetic
        {tests/value/backward_add_ptr.c:68}
[value] Recording results for gm
[value] Done for function gm
tests/value/backward_add_ptr.c:81:[value] warning: out of bounds read. assert \valid_read(p + (unsigned int)q);
[value] Called Frama_C_show_each_GM_only_a({{ &a + [-17179869180..0],0%4 }},
                                           [0..4294967295])
tests/value/backward_add_ptr.c:87:[value] warning: out of bounds read. assert \valid_read((char *)p + (unsigned int)q);
[value] Called Frama_C_show_each_GM_reduce_p_offset({{ NULL + {0; 1; 2; 3} ;
                                                       &a + [-4294967295..3] }},
                                                    {{ NULL + [0..4294967295] ; &b }})
[value] computing for function gm <- main3 <- main.
        Called from tests/value/backward_add_ptr.c:91.
[value] Recording results for gm
[value] Done for function gm
tests/value/backward_add_ptr.c:96:[value] warning: out of bounds read. assert \valid_read(p + (unsigned int)q);
[value] computing for function gm <- main3 <- main.
        Called from tests/value/backward_add_ptr.c:100.
[value] Recording results for gm
[value] Done for function gm
tests/value/backward_add_ptr.c:106:[value] warning: out of bounds read. assert \valid_read(p + (unsigned int)q);
tests/value/backward_add_ptr.c:107:[value] Reading left-value p.
        It contains a garbled mix of {a; b} because of Arithmetic
        {tests/value/backward_add_ptr.c:68}.
[value] Called Frama_C_show_each_GM_no_reduction({{ garbled mix of &{a; b}
                                                 (origin: Arithmetic
                                                 {tests/value/backward_add_ptr.c:68}) }},
                                                 {{ NULL + [0..4294967295] ; &b }})
[value] computing for function gm <- main3 <- main.
        Called from tests/value/backward_add_ptr.c:110.
[value] Recording results for gm
[value] Done for function gm
tests/value/backward_add_ptr.c:115:[value] warning: out of bounds read. assert \valid_read((char *)p + (unsigned int)q);
[value] Called Frama_C_show_each_GM_only_c({0}, {{ &c }})
tests/value/backward_add_ptr.c:121:[value] warning: out of bounds read. assert \valid_read(p + (unsigned int)q);
[value] Called Frama_C_show_each_GM_only_b({{ &b + [-17179869180..0],0%4 }},
                                           [0..4294967295])
[value] computing for function gm <- main3 <- main.
        Called from tests/value/backward_add_ptr.c:125.
[value] Recording results for gm
[value] Done for function gm
tests/value/backward_add_ptr.c:130:[value] warning: out of bounds read. assert \valid_read((char *)p + (unsigned int)q);
tests/value/backward_add_ptr.c:136:[value] warning: out of bounds read. assert \valid_read((char *)p + (unsigned int)q);
tests/value/backward_add_ptr.c:137:[value] Reading left-value p.
        It contains a garbled mix of {b} because of Arithmetic
        {tests/value/backward_add_ptr.c:68}.
[value] Called Frama_C_show_each_GM_only_b_and_gm({{ garbled mix of &{b}
                                                  (origin: Arithmetic
                                                  {tests/value/backward_add_ptr.c:68}) }},
                                                  {{ NULL + [0..4294967295] ; &b }})
[value] Recording results for main3
[value] Done for function main3
[value] computing for function main4 <- main.
        Called from tests/value/backward_add_ptr.c:188.
[value] computing for function gm <- main4 <- main.
        Called from tests/value/backward_add_ptr.c:145.
[value] Recording results for gm
[value] Done for function gm
tests/value/backward_add_ptr.c:145:[value] Assigning imprecise value to p.
        The imprecision originates from Arithmetic
        {tests/value/backward_add_ptr.c:68}
[value] computing for function gm <- main4 <- main.
        Called from tests/value/backward_add_ptr.c:146.
[value] Recording results for gm
[value] Done for function gm
tests/value/backward_add_ptr.c:150:[value] warning: out of bounds read. assert \valid_read(p + (unsigned int)q);
tests/value/backward_add_ptr.c:151:[value] Reading left-value q.
        It contains a garbled mix of {c} because of Arithmetic
        {tests/value/backward_add_ptr.c:68}.
tests/value/backward_add_ptr.c:151:[value] Reading left-value p.
        It contains a garbled mix of {a; b} because of Arithmetic
        {tests/value/backward_add_ptr.c:68}.
[value] Called Frama_C_show_each_2GM_no_reduction({{ garbled mix of &{a; b}
                                                  (origin: Arithmetic
                                                  {tests/value/backward_add_ptr.c:68}) }},
                                                  {{ garbled mix of &{c}
                                                  (origin: Arithmetic
                                                  {tests/value/backward_add_ptr.c:68}) }})
tests/value/backward_add_ptr.c:156:[value] warning: out of bounds read. assert \valid_read((char *)p + (unsigned int)q);
tests/value/backward_add_ptr.c:157:[value] Reading left-value p.
        It contains a garbled mix of {b} because of Arithmetic
        {tests/value/backward_add_ptr.c:68}.
[value] Called Frama_C_show_each_2GM_only_b({{ garbled mix of &{b}
                                            (origin: Arithmetic
                                            {tests/value/backward_add_ptr.c:68}) }},
                                            [0..4294967295])
[value] computing for function gm <- main4 <- main.
        Called from tests/value/backward_add_ptr.c:160.
[value] Recording results for gm
[value] Done for function gm
[value] computing for function gm <- main4 <- main.
        Called from tests/value/backward_add_ptr.c:161.
[value] Recording results for gm
[value] Done for function gm
tests/value/backward_add_ptr.c:165:[value] warning: out of bounds read. assert \valid_read((char *)p + (unsigned int)q);
tests/value/backward_add_ptr.c:166:[value] Reading left-value q.
        It contains a garbled mix of {b} because of Arithmetic
        {tests/value/backward_add_ptr.c:68}.
tests/value/backward_add_ptr.c:166:[value] Reading left-value p.
        It contains a garbled mix of {b} because of Arithmetic
        {tests/value/backward_add_ptr.c:68}.
[value] Called Frama_C_show_each_2GM_TEST({{ garbled mix of &{b}
                                          (origin: Arithmetic
                                          {tests/value/backward_add_ptr.c:68}) }},
                                          {{ garbled mix of &{b}
                                          (origin: Arithmetic
                                          {tests/value/backward_add_ptr.c:68}) }})
tests/value/backward_add_ptr.c:171:[value] warning: out of bounds read. assert \valid_read(p + (unsigned int)q);
tests/value/backward_add_ptr.c:172:[value] Reading left-value q.
        It contains a garbled mix of {b} because of Arithmetic
        {tests/value/backward_add_ptr.c:68}.
tests/value/backward_add_ptr.c:172:[value] Reading left-value p.
        It contains a garbled mix of {a; b} because of Arithmetic
        {tests/value/backward_add_ptr.c:68}.
[value] Called Frama_C_show_each_2GM_gm_of_a_b({{ garbled mix of &{a; b}
                                               (origin: Arithmetic
                                               {tests/value/backward_add_ptr.c:68}) }},
                                               {{ garbled mix of &{b}
                                               (origin: Arithmetic
                                               {tests/value/backward_add_ptr.c:68}) }})
tests/value/backward_add_ptr.c:177:[value] warning: out of bounds read. assert \valid_read((char *)p + (unsigned int)q);
tests/value/backward_add_ptr.c:178:[value] Reading left-value q.
        It contains a garbled mix of {b; c} because of Arithmetic
        {tests/value/backward_add_ptr.c:68}.
tests/value/backward_add_ptr.c:178:[value] Reading left-value p.
        It contains a garbled mix of {b} because of Arithmetic
        {tests/value/backward_add_ptr.c:68}.
[value] Called Frama_C_show_each_2GM_gm_of_b_c({{ garbled mix of &{b}
                                               (origin: Arithmetic
                                               {tests/value/backward_add_ptr.c:68}) }},
                                               {{ garbled mix of &{b; c}
                                               (origin: Arithmetic
                                               {tests/value/backward_add_ptr.c:68}) }})
[value] Recording results for main4
[value] Done for function main4
[value] Recording results for main
[value] done for function main
[value] ====== VALUES COMPUTED ======
[value:final-states] Values at end of function gm:
  __retres âˆˆ
          {{ garbled mix of &{a; b; a; b; c}
           (origin: Arithmetic {tests/value/backward_add_ptr.c:68}) }}
[value:final-states] Values at end of function main1:
  a âˆˆ {0}
  b âˆˆ {1}
  p âˆˆ {{ NULL + [0..4294967295] ; &a }}
  q âˆˆ {{ NULL + [0..4294967295] ; &b }}
  v âˆˆ {0; 1} or UNINITIALIZED
  w âˆˆ {0; 1} or UNINITIALIZED
[value:final-states] Values at end of function main2:
  a âˆˆ {0}
  b[bits 0 to 7] âˆˆ {1}
   [bits 8 to 31]# âˆˆ {1}%32, bits 8 to 31 
  p âˆˆ {{ NULL + [0..4294967295] ; &a }}
  q âˆˆ {{ NULL + [0..4294967295] ; &b }}
[value:final-states] Values at end of function main3:
  a âˆˆ {0}
  b[bits 0 to 7] âˆˆ {1}
   [bits 8 to 31]# âˆˆ {1}%32, bits 8 to 31 
  c[bits 0 to 7] âˆˆ {2}
   [bits 8 to 31]# âˆˆ {2}%32, bits 8 to 31 
  p âˆˆ
   {{ garbled mix of &{a; b}
    (origin: Arithmetic {tests/value/backward_add_ptr.c:68}) }}
  q âˆˆ {{ NULL + [--..--] ; &b }}
  v âˆˆ {0; 1} or UNINITIALIZED
  w âˆˆ {0; 1} or UNINITIALIZED
[value:final-states] Values at end of function main4:
  a âˆˆ {0}
  b[bits 0 to 7] âˆˆ {1}
   [bits 8 to 31]# âˆˆ {1}%32, bits 8 to 31 
  c[bits 0 to 7] âˆˆ {2}
   [bits 8 to 31]# âˆˆ {2}%32, bits 8 to 31 
  p âˆˆ
   {{ garbled mix of &{a; b}
    (origin: Arithmetic {tests/value/backward_add_ptr.c:68}) }}
  q âˆˆ
   {{ garbled mix of &{b; c}
    (origin: Arithmetic {tests/value/backward_add_ptr.c:68}) }}
  v âˆˆ {0; 1; 2} or UNINITIALIZED
[value:final-states] Values at end of function main:
  __retres âˆˆ {0}
[from] Computing for function gm
[from] Done for function gm
[from] Computing for function main1
[from] Done for function main1
[from] Computing for function main2
[from] Done for function main2
[from] Computing for function main3
[from] Done for function main3
[from] Computing for function main4
[from] Done for function main4
[from] Computing for function main
[from] Done for function main
[from] ====== DEPENDENCIES COMPUTED ======
       These dependencies hold at termination for the executions that terminate:
[from] Function gm:
  \result FROM p
[from] Function main1:
  NO EFFECTS
[from] Function main2:
  NO EFFECTS
[from] Function main3:
  NO EFFECTS
[from] Function main4:
  NO EFFECTS
[from] Function main:
  \result FROM \nothing
[from] ====== END OF DEPENDENCIES ======
[inout] Out (internal) for function gm:
          __retres
[inout] Inputs for function gm:
          \nothing
[inout] Out (internal) for function main1:
          a; b; p; tmp; q; tmp_0; v; w
[inout] Inputs for function main1:
          rand
[inout] Out (internal) for function main2:
          a; b; p; tmp; q; tmp_0
[inout] Inputs for function main2:
          rand
[inout] Out (internal) for function main3:
          a; b; c; p; q; tmp_0; v; w; tmp_1; tmp_2; tmp_3
[inout] Inputs for function main3:
          rand
[inout] Out (internal) for function main4:
          a; b; c; p; tmp; tmp_0; q; v; tmp_2; tmp_3
[inout] Inputs for function main4:
          rand
[inout] Out (internal) for function main:
          __retres
[inout] Inputs for function main:
          rand
