diff tests/value/oracle/addition.res.oracle tests/value/oracle_legacy/addition.res.oracle
101d100
<                  {{ garbled mix of &{p2} (origin: Arithmetic {tests/value/addition.i:42}) }}
102a102
>                  {{ garbled mix of &{p2} (origin: Arithmetic {tests/value/addition.i:42}) }}
319d318
<                  {{ garbled mix of &{p2} (origin: Arithmetic {tests/value/addition.i:42}) }}
320a320
>                  {{ garbled mix of &{p2} (origin: Arithmetic {tests/value/addition.i:42}) }}
diff tests/value/oracle/align_char_array.res.oracle tests/value/oracle_legacy/align_char_array.res.oracle
35,36c35,36
<   overlapread1 ∈ {16843009}
<   overlapread2 ∈ {16843009}
---
>   overlapread1# ∈ {1} repeated %8 
>   overlapread2# ∈ {1} repeated %8 
diff tests/value/oracle/array_access.res.oracle tests/value/oracle_legacy/array_access.res.oracle
154c154,157
<   R ∈ {16777472; 16777473}
---
>   R[bits 0 to 7] ∈ {0; 1}
>    [bits 8 to 15] ∈ {1}
>    [bits 16 to 23] ∈ {0}
>    [bits 24 to 31] ∈ {1}
diff tests/value/oracle/array_bounds.0.res.oracle tests/value/oracle_legacy/array_bounds.0.res.oracle
41c41,42
< [value] Called Frama_C_show_each([0..11])
---
> [value] Called Frama_C_show_each([0..12])
> tests/value/array_bounds.i:16:[value] warning: accessing out of bounds index. assert i < 12;
diff tests/value/oracle/array_bounds.1.res.oracle tests/value/oracle_legacy/array_bounds.1.res.oracle
41c41,45
< [value] Called Frama_C_show_each([0..11])
---
> [value] Called Frama_C_show_each([0..12])
> tests/value/array_bounds.i:14:[value] warning: signed overflow. assert i + 5 ≤ 2147483647;
> [value] Called Frama_C_show_each([0..2147483647])
> tests/value/array_bounds.i:16:[value] warning: out of bounds write. assert \valid(&u.T[i]);
> tests/value/array_bounds.i:14:[value] warning: signed overflow. assert i + 1 ≤ 2147483647;
43a48,49
> tests/value/array_bounds.i:20:[value] warning: out of bounds write. assert \valid(&s.T[j]);
> tests/value/array_bounds.i:19:[value] warning: signed overflow. assert j + 1 ≤ 2147483647;
51,52c57
<    .T[0..11] ∈ [--..--]
<    .b ∈ {20}
---
>    {.T[0..11]; .b} ∈ [--..--]
62c67
<    .T[0..11] FROM c (and SELF)
---
>    {.T[0..11]; .b} FROM c (and SELF)
65c70
<           s; u{.a; .T[0..11]}; i; j
---
>           s; u; i; j
diff tests/value/oracle/assigns.res.oracle tests/value/oracle_legacy/assigns.res.oracle
76a77
> tests/value/assigns.i:57:[value] warning: locals escaping the scope of main1 through x
369c370
<   x ∈ {{ ANYTHING }}
---
>   x ∈ {{ ANYTHING }} or ESCAPINGADDR
diff tests/value/oracle/backward_add_ptr.res.oracle tests/value/oracle_legacy/backward_add_ptr.res.oracle
11c11,13
< [value] Called Frama_C_show_each_only_a({0; 1}, {{ &a }}, {0})
---
> [value] Called Frama_C_show_each_only_a({0; 1},
>                                         {{ NULL + [0..4294967295] ; &a }},
>                                         {{ NULL + [0..4294967295] ; &b }})
13,15c15,17
< [value] Called Frama_C_show_each_reduced_offset({0; 1},
<                                                 {{ NULL + {0; 1; 2; 3} ; &a }},
<                                                 {{ NULL + {0; 1; 2; 3} ; &b }})
---
> [value] Called Frama_C_show_each_reduced_offset([-128..127],
>                                                 {{ NULL + [0..4294967295] ; &a }},
>                                                 {{ NULL + [0..4294967295] ; &b }})
26,27c28,31
< [value] Called Frama_C_show_each_int_if({{ &a }}, {0})
< [value] Called Frama_C_show_each_int_else({0}, {{ &b }})
---
> [value] Called Frama_C_show_each_int_if({{ NULL + [0..4294967295] ; &a }},
>                                         {{ NULL + [0..4294967295] ; &b }})
> [value] Called Frama_C_show_each_int_else({{ NULL + [0..4294967295] ; &a }},
>                                           {{ NULL + [0..4294967295] ; &b }})
29,31c33,36
< [value] Called Frama_C_show_each_char_if({{ NULL + {1; 2; 3} ; &a }},
<                                          {{ NULL + {0; 1; 2; 3} ; &b }})
< [value] Called Frama_C_show_each_char_else({0}, {{ &b }})
---
> [value] Called Frama_C_show_each_char_if({{ NULL + [0..4294967295] ; &a }},
>                                          {{ NULL + [0..4294967295] ; &b }})
> [value] Called Frama_C_show_each_char_else({{ NULL + [0..4294967295] ; &a }},
>                                            {{ NULL + [0..4294967295] ; &b }})
44,45c49,55
< [value] Called Frama_C_show_each_GM_only_a({{ &a + [-17179869180..0],0%4 }},
<                                            [0..4294967295])
---
> tests/value/backward_add_ptr.c:82:[value] Reading left-value p.
>         It contains a garbled mix of {a} because of Arithmetic
>         {tests/value/backward_add_ptr.c:68}.
> [value] Called Frama_C_show_each_GM_only_a({{ garbled mix of &{a}
>                                            (origin: Arithmetic
>                                            {tests/value/backward_add_ptr.c:68}) }},
>                                            {{ NULL + [0..4294967295] ; &b }})
47,48c57,62
< [value] Called Frama_C_show_each_GM_reduce_p_offset({{ NULL + {0; 1; 2; 3} ;
<                                                        &a + [-4294967295..3] }},
---
> tests/value/backward_add_ptr.c:88:[value] Reading left-value p.
>         It contains a garbled mix of {a} because of Arithmetic
>         {tests/value/backward_add_ptr.c:68}.
> [value] Called Frama_C_show_each_GM_reduce_p_offset({{ garbled mix of &{a}
>                                                     (origin: Arithmetic
>                                                     {tests/value/backward_add_ptr.c:68}) }},
54a69,75
> tests/value/backward_add_ptr.c:97:[value] Reading left-value p.
>         It contains a garbled mix of {a} because of Arithmetic
>         {tests/value/backward_add_ptr.c:68}.
> [value] Called Frama_C_show_each_GM_BOTTOM({{ garbled mix of &{a}
>                                            (origin: Arithmetic
>                                            {tests/value/backward_add_ptr.c:68}) }},
>                                            {{ &b }})
72c93,99
< [value] Called Frama_C_show_each_GM_only_c({0}, {{ &c }})
---
> tests/value/backward_add_ptr.c:116:[value] Reading left-value p.
>         It contains a garbled mix of {a; b} because of Arithmetic
>         {tests/value/backward_add_ptr.c:68}.
> [value] Called Frama_C_show_each_GM_only_c({{ garbled mix of &{a; b}
>                                            (origin: Arithmetic
>                                            {tests/value/backward_add_ptr.c:68}) }},
>                                            {{ NULL + [0..4294967295] ; &c }})
74,75c101,107
< [value] Called Frama_C_show_each_GM_only_b({{ &b + [-17179869180..0],0%4 }},
<                                            [0..4294967295])
---
> tests/value/backward_add_ptr.c:122:[value] Reading left-value p.
>         It contains a garbled mix of {a; b} because of Arithmetic
>         {tests/value/backward_add_ptr.c:68}.
> [value] Called Frama_C_show_each_GM_only_b({{ garbled mix of &{a; b}
>                                            (origin: Arithmetic
>                                            {tests/value/backward_add_ptr.c:68}) }},
>                                            {{ NULL + [0..4294967295] ; &c }})
80a113,119
> tests/value/backward_add_ptr.c:131:[value] Reading left-value p.
>         It contains a garbled mix of {a; b} because of Arithmetic
>         {tests/value/backward_add_ptr.c:68}.
> [value] Called Frama_C_show_each_GM_BOTTOM({{ garbled mix of &{a; b}
>                                            (origin: Arithmetic
>                                            {tests/value/backward_add_ptr.c:68}) }},
>                                            {{ NULL + [0..4294967295] ; &b }})
83c122
<         It contains a garbled mix of {b} because of Arithmetic
---
>         It contains a garbled mix of {a; b} because of Arithmetic
85c124
< [value] Called Frama_C_show_each_GM_only_b_and_gm({{ garbled mix of &{b}
---
> [value] Called Frama_C_show_each_GM_only_b_and_gm({{ garbled mix of &{a; b}
117a157,159
> tests/value/backward_add_ptr.c:157:[value] Reading left-value q.
>         It contains a garbled mix of {c} because of Arithmetic
>         {tests/value/backward_add_ptr.c:68}.
119c161
<         It contains a garbled mix of {b} because of Arithmetic
---
>         It contains a garbled mix of {a; b} because of Arithmetic
121c163
< [value] Called Frama_C_show_each_2GM_only_b({{ garbled mix of &{b}
---
> [value] Called Frama_C_show_each_2GM_only_b({{ garbled mix of &{a; b}
124c166,168
<                                             [0..4294967295])
---
>                                             {{ garbled mix of &{c}
>                                             (origin: Arithmetic
>                                             {tests/value/backward_add_ptr.c:68}) }})
135c179
<         It contains a garbled mix of {b} because of Arithmetic
---
>         It contains a garbled mix of {b; c} because of Arithmetic
138c182
<         It contains a garbled mix of {b} because of Arithmetic
---
>         It contains a garbled mix of {a; b} because of Arithmetic
140c184
< [value] Called Frama_C_show_each_2GM_TEST({{ garbled mix of &{b}
---
> [value] Called Frama_C_show_each_2GM_TEST({{ garbled mix of &{a; b}
143c187
<                                           {{ garbled mix of &{b}
---
>                                           {{ garbled mix of &{b; c}
148c192
<         It contains a garbled mix of {b} because of Arithmetic
---
>         It contains a garbled mix of {b; c} because of Arithmetic
156c200
<                                                {{ garbled mix of &{b}
---
>                                                {{ garbled mix of &{b; c}
164c208
<         It contains a garbled mix of {b} because of Arithmetic
---
>         It contains a garbled mix of {a; b} because of Arithmetic
166c210
< [value] Called Frama_C_show_each_2GM_gm_of_b_c({{ garbled mix of &{b}
---
> [value] Called Frama_C_show_each_2GM_gm_of_b_c({{ garbled mix of &{a; b}
184,185c228,229
<   p ∈ {{ NULL + [0..4294967295] ; &a }}
<   q ∈ {{ NULL + [0..4294967295] ; &b }}
---
>   p ∈ {{ NULL + [--..--] ; &a }}
>   q ∈ {{ NULL + [--..--] ; &b }}
187c231
<   w ∈ {0; 1} or UNINITIALIZED
---
>   w ∈ [--..--] or UNINITIALIZED
190,193c234,236
<   b[bits 0 to 7] ∈ {1}
<    [bits 8 to 31]# ∈ {1}%32, bits 8 to 31 
<   p ∈ {{ NULL + [0..4294967295] ; &a }}
<   q ∈ {{ NULL + [0..4294967295] ; &b }}
---
>   b ∈ {1}
>   p ∈ {{ NULL + [--..--] ; &a }}
>   q ∈ {{ NULL + [--..--] ; &b }}
196,199c239,240
<   b[bits 0 to 7] ∈ {1}
<    [bits 8 to 31]# ∈ {1}%32, bits 8 to 31 
<   c[bits 0 to 7] ∈ {2}
<    [bits 8 to 31]# ∈ {2}%32, bits 8 to 31 
---
>   b ∈ {1}
>   c ∈ {2}
205c246
<   w ∈ {0; 1} or UNINITIALIZED
---
>   w ∈ [--..--] or UNINITIALIZED
208,211c249,250
<   b[bits 0 to 7] ∈ {1}
<    [bits 8 to 31]# ∈ {1}%32, bits 8 to 31 
<   c[bits 0 to 7] ∈ {2}
<    [bits 8 to 31]# ∈ {2}%32, bits 8 to 31 
---
>   b ∈ {1}
>   c ∈ {2}
diff tests/value/oracle/bitfield.res.oracle tests/value/oracle_legacy/bitfield.res.oracle
82a83
> tests/value/bitfield.i:135:[value] warning: locals {v} escaping the scope of main_old through h
85d85
< tests/value/bitfield.i:150:[value] warning: locals {v} escaping the scope of main_old through h
110a111,113
> tests/value/bitfield.i:70:[value] Reading left-value c.
>         It contains a garbled mix of {b; ee} because of Misaligned
>         {tests/value/bitfield.i:70}.
154c157
<            .b ∈ {8}
---
>            .b ∈ {-8}
225c228
<      .b ∈ {8}
---
>      .b ∈ {-8}
250c253
<      .b ∈ {8}
---
>      .b ∈ {-8}
diff tests/value/oracle/bitwise_pointer.res.oracle tests/value/oracle_legacy/bitwise_pointer.res.oracle
43,53c43
<   t[0] ∈ {0; 5}
<    [1] ∈ {1; 5}
<    [2] ∈ {2; 5}
<    [3] ∈ {3; 5}
<    [4] ∈ {4; 5}
<    [5] ∈ {5}
<    [6] ∈ {5; 6}
<    [7] ∈ {5; 7}
<    [8] ∈ {5; 8}
<    [9] ∈ {5; 9}
<    [10..99] ∈ {0; 5}
---
>   t[0..99] ∈ [--..--]
55,66c45,46
<   x ∈ [0..9]
<   t1[0] ∈ {0; 5}
<     [1] ∈ {1; 5}
<     [2] ∈ {2; 5}
<     [3] ∈ {3; 5}
<     [4] ∈ {4; 5}
<     [5] ∈ {5}
<     [6] ∈ {5; 6}
<     [7] ∈ {5; 7}
<     [8] ∈ {5; 8}
<     [9] ∈ {5; 9}
<     [10..99] ∈ {0; 5}
---
>   x ∈ [-128..127]
>   t1[0..99] ∈ [--..--]
68c48
<   x1 ∈ [0..9]
---
>   x1 ∈ [-128..127]
diff tests/value/oracle/bitwise_reduction.res.oracle tests/value/oracle_legacy/bitwise_reduction.res.oracle
14c14,15
< [value] Called Frama_C_show_each_then1({1}, {0; 1})
---
> [value] Called Frama_C_show_each_then1({1},
>                                        {0; 1; 0x3000; 0x3001; 0x3200; 0x3201; 0xF000})
22c23,24
< [value] Called Frama_C_show_each_then2({{ &t + {4} }}, {0; 1})
---
> [value] Called Frama_C_show_each_then2({{ &t + {4} }},
>                                        {0; 1; 0x3000; 0x3001; 0x3200; 0x3201; 0xF000})
diff tests/value/oracle/bts0506.0.res.oracle tests/value/oracle_legacy/bts0506.0.res.oracle
113,120c113,117
<   r13 ∈
<      {{ NULL + [0..4294967295] ; &alloced_return_f6 + [0..2147483644],0%4 }}
<   r14 ∈
<      {{ NULL + [0..4294967295] ; &alloced_return_f6 + [0..2147483644],0%4 }}
<   r15 ∈
<      {{ NULL + [0..4294967295] ; &alloced_return_f6 + [0..2147483644],0%4 }}
<   r16 ∈ {{ NULL + [0..4294967295] ; &alloced_return_f7 + [0..2147483647] }}
<   r17 ∈ {{ NULL + [0..4294967295] ; &alloced_return_f7 + [0..2147483647] }}
---
>   r13 ∈ {{ NULL + [--..--] ; &alloced_return_f6 + [0..2147483644],0%4 }}
>   r14 ∈ {{ NULL + [--..--] ; &alloced_return_f6 + [0..2147483644],0%4 }}
>   r15 ∈ {{ NULL + [--..--] ; &alloced_return_f6 + [0..2147483644],0%4 }}
>   r16 ∈ {{ NULL + [--..--] ; &alloced_return_f7 + [0..2147483647] }}
>   r17 ∈ {{ NULL + [--..--] ; &alloced_return_f7 + [0..2147483647] }}
diff tests/value/oracle/bts0506.1.res.oracle tests/value/oracle_legacy/bts0506.1.res.oracle
105c105
<   r10 ∈ [--..--]
---
>   r10 ∈ [-3.40282346639e+38 .. 3.40282346639e+38]
diff tests/value/oracle/call_2.res.oracle tests/value/oracle_legacy/call_2.res.oracle
9d8
< tests/value/call_2.i:15:[value] warning: non-finite float value. assert \is_finite(f);
13a13
> tests/value/call_2.i:6:[value] warning: non-finite float value. assert \is_finite(f);
25c25
<   f ∈ [-3.40282346639e+38 .. 3.40282346639e+38]
---
>   f ∈ [--..--]
diff tests/value/oracle/cast_fun.res.oracle tests/value/oracle_legacy/cast_fun.res.oracle
13c13,14
< tests/value/cast_fun.i:63:[value] warning: pointer to function with incompatible type. assert \valid_function(p1);
---
> tests/value/cast_fun.i:63:[value] warning: Function pointer and pointed function have incompatible types.
>                  assert \valid_function(p1);
24,25c25,28
< tests/value/cast_fun.i:73:[value] warning: pointer to function with incompatible type. assert \valid_function(p1);
< tests/value/cast_fun.i:78:[value] warning: pointer to function with incompatible type. assert \valid_function(p1);
---
> tests/value/cast_fun.i:73:[value] warning: Function pointer and pointed function have completely incompatible types.
>                  assert \valid_function(p1);
> tests/value/cast_fun.i:78:[value] warning: Function pointer and pointed function have completely incompatible types.
>                  assert \valid_function(p1);
34c37,38
< tests/value/cast_fun.i:93:[value] warning: pointer to function with incompatible type. assert \valid_function(p2);
---
> tests/value/cast_fun.i:93:[value] warning: Function pointer and pointed function have completely incompatible types.
>                  assert \valid_function(p2);
39,40c43,46
< tests/value/cast_fun.i:103:[value] warning: pointer to function with incompatible type. assert \valid_function(p3);
< tests/value/cast_fun.i:108:[value] warning: pointer to function with incompatible type. assert \valid_function(p4);
---
> tests/value/cast_fun.i:103:[value] warning: Function pointer and pointed function have completely incompatible types.
>                  assert \valid_function(p3);
> tests/value/cast_fun.i:108:[value] warning: Function pointer and pointed function have completely incompatible types.
>                  assert \valid_function(p4);
45,47c51,56
< tests/value/cast_fun.i:118:[value] warning: pointer to function with incompatible type. assert \valid_function(p1);
< tests/value/cast_fun.i:123:[value] warning: pointer to function with incompatible type. assert \valid_function(p1);
< tests/value/cast_fun.i:128:[value] warning: pointer to function with incompatible type. assert \valid_function(p4);
---
> tests/value/cast_fun.i:118:[value] warning: Function pointer and pointed function have completely incompatible types.
>                  assert \valid_function(p1);
> tests/value/cast_fun.i:123:[value] warning: Function pointer and pointed function have completely incompatible types.
>                  assert \valid_function(p1);
> tests/value/cast_fun.i:128:[value] warning: Function pointer and pointed function have completely incompatible types.
>                  assert \valid_function(p4);
diff tests/value/oracle/context_free.res.oracle tests/value/oracle_legacy/context_free.res.oracle
91c91
<         (pointing to S_qvoid with offsets [0..34359738360],0%8).
---
>         (pointing to S_qvoid with offsets [0..34359738360]).
93c93,95
< tests/value/context_free.i:62:[value] warning: pointer to function with incompatible type. assert \valid_function(g);
---
> tests/value/context_free.i:62:[value] warning: Function pointer and pointed function have completely incompatible types.
>                  assert \valid_function(g);
> tests/value/context_free.i:64:[value] warning: locals {pvoid} escaping the scope of f through S_qvoid
diff tests/value/oracle/conversion.res.oracle tests/value/oracle_legacy/conversion.res.oracle
48d47
< tests/value/conversion.i:39:[value] warning: non-finite float value. assert \is_finite(*((float *)(&x)));
65a65
> tests/value/conversion.i:52:[value] warning: accessing uninitialized left-value. assert \initialized((float *)(&l));
71,72c71,72
<         f ∈ [7.00649232162e-45 .. 2.10194769649e-44] or UNINITIALIZED
<         l ∈ [5..15] or UNINITIALIZED
---
>         f ∈ [7.00649232162e-45 .. 2.10194769649e-44]
>         l ∈ [5..15]
81,82c81,82
<   f ∈ [7.00649232162e-45 .. 2.10194769649e-44] or UNINITIALIZED
<   l ∈ [5..15] or UNINITIALIZED
---
>   f ∈ [7.00649232162e-45 .. 2.10194769649e-44]
>   l ∈ [5..15]
126c126
<         y ∈ [--..--]
---
>         y ∈ [-10..10]
133c133
<         y ∈ [--..--]
---
>         y ∈ [-10..10]
137,139d136
< tests/value/conversion.i:39:[value] warning: non-finite float value. assert \is_finite(*((float *)(&x)));
< tests/value/conversion.i:39:[value] Assigning imprecise value to f.
<         The imprecision originates from Arithmetic {tests/value/conversion.i:39}
143,145c140,141
<         y ∈ [--..--]
<         f ∈
<          {{ garbled mix of &{x} (origin: Arithmetic {tests/value/conversion.i:39}) }}
---
>         y ∈ [-10..10]
>         f ∈ {{ (float)&x }}
152,153c148,150
<         y ∈ [--..--]
<         f ∈ {1.83672393614e-40}
---
>         y ∈ [-10..10]
>         f[bits 0 to 15] ∈ {1}
>          [bits 16 to 31] ∈ {2}
161c158
<         y ∈ [--..--]
---
>         y ∈ [-10..10]
163c160
<         l ∈ [7.00649232162e-45 .. 2.10194769649e-44]
---
>         l ∈ [5..15]
171c168
<   y ∈ [--..--]
---
>   y ∈ [-10..10]
173c170
<   l ∈ [7.00649232162e-45 .. 2.10194769649e-44]
---
>   l ∈ [5..15]
diff tests/value/oracle/copy_stdin.res.oracle tests/value/oracle_legacy/copy_stdin.res.oracle
19,21c19
<   toto ∈
<       {{ NULL + [0..4294967295] ;
<          &alloced_return_leaf + [0..2147483644],0%4 }}
---
>   toto ∈ {{ NULL + [--..--] ; &alloced_return_leaf + [0..2147483644],0%4 }}
diff tests/value/oracle/degeneration2.res.oracle tests/value/oracle_legacy/degeneration2.res.oracle
15a16,18
> tests/value/degeneration2.i:17:[value] Assigning imprecise value to A.
>         The imprecision originates from Misaligned {tests/value/degeneration2.i:17}
> tests/value/degeneration2.i:25:[value] warning: accessing out of bounds index. assert x < 10;
24c27
<     (origin: Arithmetic {tests/value/degeneration2.i:14}) }}
---
>     (origin: Misaligned {tests/value/degeneration2.i:17}) }}
diff tests/value/oracle/deps_addr.res.oracle tests/value/oracle_legacy/deps_addr.res.oracle
15c15
<   NON TERMINATING FUNCTION
---
>   __retres ∈ {0}
17d16
< [from] Non-terminating function main (no dependencies)
22c21
<   NON TERMINATING - NO EFFECTS
---
>   \result FROM t; a
27c26
<           t
---
>           t; a
diff tests/value/oracle/deps_mixed.res.oracle tests/value/oracle_legacy/deps_mixed.res.oracle
19,22d18
< [value] computing for function g <- main.
<         Called from tests/value/deps_mixed.i:22.
< [value] Recording results for g
< [value] Done for function g
26a23,26
> [value] computing for function g <- main.
>         Called from tests/value/deps_mixed.i:22.
> [value] Recording results for g
> [value] Done for function g
39c39
<   r ∈ {2}
---
>   r ∈ {0; 2}
59c59
<   r FROM v; c; d (and SELF)
---
>   r FROM a; b; v; c; d (and SELF)
74c74
<           p; q; v; t[0..1]
---
>           p; q; a; b; v; t[0..1]
diff tests/value/oracle/div.0.res.oracle tests/value/oracle_legacy/div.0.res.oracle
39d38
< tests/value/div.i:34:[value] warning: division by zero. assert (int)(&X + 2) ≢ 0;
40a40
> tests/value/div.i:34:[value] warning: division by zero. assert (int)(&X + 2) ≢ 0;
diff tests/value/oracle/div.1.res.oracle tests/value/oracle_legacy/div.1.res.oracle
53d52
< tests/value/div.i:34:[value] warning: division by zero. assert (int)(&X + 2) ≢ 0;
54a54
> tests/value/div.i:34:[value] warning: division by zero. assert (int)(&X + 2) ≢ 0;
diff tests/value/oracle/divneg.res.oracle tests/value/oracle_legacy/divneg.res.oracle
26c26
<         r2 ∈ [-98..-3],2%5
---
>         r2 ∈ [-100..100]
38c38
<         rc ∈ [-176..-14],4%18 or UNINITIALIZED
---
>         rc ∈ [-185..-5],4%9 or UNINITIALIZED
48c48
<   r2 ∈ [-98..-3],2%5
---
>   r2 ∈ [-100..100]
diff tests/value/oracle/downcast.res.oracle tests/value/oracle_legacy/downcast.res.oracle
19,21d18
< tests/value/downcast.i:19:[value] warning: signed downcast. assert -128 ≤ (int)sx + (int)sy;
< tests/value/downcast.i:19:[value] warning: signed downcast. assert (int)sx + (int)sy ≤ 127;
< tests/value/downcast.i:22:[value] warning: signed downcast. assert uy + uz ≤ 2147483647;
26d22
< tests/value/downcast.i:32:[value] warning: signed downcast. assert i ≤ 15;
31,32d26
< tests/value/downcast.i:38:[value] warning: signed downcast. assert -128 ≤ x_0;
< tests/value/downcast.i:38:[value] warning: signed downcast. assert x_0 ≤ 127;
37d30
< tests/value/downcast.i:48:[value] warning: signed downcast. assert p ≤ 2147483647;
44d36
< tests/value/downcast.i:58:[value] warning: signed downcast. assert y ≤ 2147483647;
46,48c38,40
<                                  [100145..2147483647],
<                                  [100145..2147483647])
< tests/value/downcast.i:60:[value] assertion got status valid.
---
>                                  [100145..2147483792],
>                                  [-2147483648..2147483647])
> tests/value/downcast.i:60:[value] warning: assertion got status unknown.
53,55d44
< tests/value/downcast.i:67:[value] warning: signed downcast. assert 65300u ≤ 32767;
< tests/value/downcast.i:78:[value] warning: signed downcast. assert e_0 ≤ 32767;
< tests/value/downcast.i:83:[value] warning: signed downcast. assert e_1 ≤ 32767;
64,68d52
< tests/value/downcast.i:104:[value] warning: signed downcast. assert S.i1 ≤ 31;
< tests/value/downcast.i:105:[value] warning: signed downcast. assert S.i1 ≤ 127;
< tests/value/downcast.i:109:[value] warning: signed downcast. assert S.i1 ≤ 31;
< tests/value/downcast.i:110:[value] warning: signed downcast. assert S.i1 ≤ 127;
< tests/value/downcast.i:114:[value] warning: signed downcast. assert S.i1 ≤ 31;
73,74c57
< tests/value/downcast.i:123:[value] warning: signed downcast. assert bf.a ≤ 1023;
< tests/value/downcast.i:127:[value] warning: signed downcast. assert bf.a ≤ 127;
---
> tests/value/downcast.i:124:[value] assertion got status valid.
80d62
< tests/value/downcast.i:137:[value] warning: signed downcast. assert bf.b ≤ 127;
85,95d66
< tests/value/downcast.i:32:[value] assertion 'Value,signed_downcast' got final status invalid.
< tests/value/downcast.i:67:[value] assertion 'Value,signed_downcast' got final status invalid.
< tests/value/downcast.i:78:[value] assertion 'Value,signed_downcast' got final status invalid.
< tests/value/downcast.i:83:[value] assertion 'Value,signed_downcast' got final status invalid.
< tests/value/downcast.i:104:[value] assertion 'Value,signed_downcast' got final status invalid.
< tests/value/downcast.i:105:[value] assertion 'Value,signed_downcast' got final status invalid.
< tests/value/downcast.i:109:[value] assertion 'Value,signed_downcast' got final status invalid.
< tests/value/downcast.i:110:[value] assertion 'Value,signed_downcast' got final status invalid.
< tests/value/downcast.i:114:[value] assertion 'Value,signed_downcast' got final status invalid.
< tests/value/downcast.i:123:[value] assertion 'Value,signed_downcast' got final status invalid.
< tests/value/downcast.i:127:[value] assertion 'Value,signed_downcast' got final status invalid.
100c71
<   x ∈ [0..2147483647]
---
>   x ∈ [--..--]
104c75
<   c ∈ [0..127] or UNINITIALIZED
---
>   c ∈ [--..--] or UNINITIALIZED
111c82
<   ss.i ∈ UNINITIALIZED
---
>   ss.i ∈ {-11} or UNINITIALIZED
115c86
<   x_0 ∈ [-128..127]
---
>   x_0 ∈ [--..--]
125,126c96,97
<   y ∈ [100145..2147483647]
<   z ∈ [100145..2147483647]
---
>   y ∈ [100145..2147483792]
>   z ∈ [--..--]
134,135c105,107
<    {.i2; .[bits 24 to 31]} ∈ UNINITIALIZED
<   c ∈ {65} or UNINITIALIZED
---
>    .i2 ∈ {-1; 1} or UNINITIALIZED
>    .[bits 24 to 31] ∈ UNINITIALIZED
>   c ∈ {-1; 1; 65} or UNINITIALIZED
139c111
<   c ∈ UNINITIALIZED
---
>   c ∈ {112} or UNINITIALIZED
143c115
<   x ∈ [0..2147483647]
---
>   x ∈ [--..--]
248,282d219
< --- Properties of Function 'main1'
< --------------------------------------------------------------------------------
< 
< [    -    ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 19)
<             tried with Value.
< [    -    ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 19)
<             tried with Value.
< [    -    ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 22)
<             tried with Value.
< 
< --------------------------------------------------------------------------------
< --- Properties of Function 'main2_bitfield'
< --------------------------------------------------------------------------------
< 
< [  Alarm  ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 32)
<             By Value, with pending:
<              - Unreachable instruction (file tests/value/downcast.i, line 32)
< 
< --------------------------------------------------------------------------------
< --- Properties of Function 'main3_reduction'
< --------------------------------------------------------------------------------
< 
< [    -    ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 38)
<             tried with Value.
< [    -    ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 38)
<             tried with Value.
< 
< --------------------------------------------------------------------------------
< --- Properties of Function 'main4_pointer'
< --------------------------------------------------------------------------------
< 
< [    -    ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 48)
<             tried with Value.
< 
< --------------------------------------------------------------------------------
290,292c227
< [  Valid  ] Assertion (file tests/value/downcast.i, line 60)
<             by Value.
< [    -    ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 58)
---
> [    -    ] Assertion (file tests/value/downcast.i, line 60)
296,329d230
< --- Properties of Function 'main6_val_warn_converted_signed'
< --------------------------------------------------------------------------------
< 
< [  Alarm  ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 67)
<             By Value, with pending:
<              - Unreachable instruction (file tests/value/downcast.i, line 67)
< [  Alarm  ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 78)
<             By Value, with pending:
<              - Unreachable instruction (file tests/value/downcast.i, line 78)
< [  Alarm  ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 83)
<             By Value, with pending:
<              - Unreachable instruction (file tests/value/downcast.i, line 83)
< 
< --------------------------------------------------------------------------------
< --- Properties of Function 'main8_bitfields'
< --------------------------------------------------------------------------------
< 
< [  Alarm  ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 104)
<             By Value, with pending:
<              - Unreachable instruction (file tests/value/downcast.i, line 104)
< [  Alarm  ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 105)
<             By Value, with pending:
<              - Unreachable instruction (file tests/value/downcast.i, line 105)
< [  Alarm  ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 109)
<             By Value, with pending:
<              - Unreachable instruction (file tests/value/downcast.i, line 109)
< [  Alarm  ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 110)
<             By Value, with pending:
<              - Unreachable instruction (file tests/value/downcast.i, line 110)
< [  Alarm  ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 114)
<             By Value, with pending:
<              - Unreachable instruction (file tests/value/downcast.i, line 114)
< 
< --------------------------------------------------------------------------------
333,343c234
< [  Dead   ] Assertion (file tests/value/downcast.i, line 124)
<             Locally valid, but unreachable.
<             By Value because:
<              - Unreachable program point (file tests/value/downcast.i, line 124)
< [  Alarm  ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 123)
<             By Value, with pending:
<              - Unreachable instruction (file tests/value/downcast.i, line 123)
< [  Alarm  ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 127)
<             By Value, with pending:
<              - Unreachable instruction (file tests/value/downcast.i, line 127)
< [Unreachable] Unreachable program point (file tests/value/downcast.i, line 124)
---
> [  Valid  ] Assertion (file tests/value/downcast.i, line 124)
347,353d237
< --- Properties of Function 'main10_loop'
< --------------------------------------------------------------------------------
< 
< [    -    ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 137)
<             tried with Value.
< 
< --------------------------------------------------------------------------------
357,361c241,242
<      9 To be validated
<     11 Alarms emitted
<      1 Dead property
<      1 Unreachable
<     24 Total
---
>      2 To be validated
>      4 Total
390,391d270
<   /*@ assert Value: signed_downcast: -128 ≤ (int)sx + (int)sy; */
<   /*@ assert Value: signed_downcast: (int)sx + (int)sy ≤ 127; */
395d273
<   /*@ assert Value: signed_downcast: uy + uz ≤ 2147483647; */
409,411c287
<   if (v) 
<     /*@ assert Value: signed_downcast: i ≤ 15; */
<     ss.i = (int)i;
---
>   if (v) ss.i = (int)i;
423,424d298
<   /*@ assert Value: signed_downcast: -128 ≤ x_0; */
<   /*@ assert Value: signed_downcast: x_0 ≤ 127; */
439d312
<   /*@ assert Value: signed_downcast: p ≤ 2147483647; */
458d330
<   /*@ assert Value: signed_downcast: y ≤ 2147483647; */
469d340
<     /*@ assert Value: signed_downcast: 65300u ≤ 32767; */
486d356
<     /*@ assert Value: signed_downcast: e_0 ≤ 32767; */
493d362
<     /*@ assert Value: signed_downcast: e_1 ≤ 32767; */
513,518c382,383
<   if (v) 
<     /*@ assert Value: signed_downcast: S.i1 ≤ 31; */
<     S.i2 = (int)S.i1;
<   if (v) 
<     /*@ assert Value: signed_downcast: S.i1 ≤ 127; */
<     c = (signed char)S.i1;
---
>   if (v) S.i2 = (int)S.i1;
>   if (v) c = (signed char)S.i1;
520,525c385,386
<   if (v) 
<     /*@ assert Value: signed_downcast: S.i1 ≤ 31; */
<     S.i2 = (int)S.i1;
<   if (v) 
<     /*@ assert Value: signed_downcast: S.i1 ≤ 127; */
<     c = (signed char)S.i1;
---
>   if (v) S.i2 = (int)S.i1;
>   if (v) c = (signed char)S.i1;
527,529c388
<   if (v) 
<     /*@ assert Value: signed_downcast: S.i1 ≤ 31; */
<     S.i2 = (int)S.i1;
---
>   if (v) S.i2 = (int)S.i1;
541d399
<     /*@ assert Value: signed_downcast: bf.a ≤ 1023; */
545,547c403
<   if (v) 
<     /*@ assert Value: signed_downcast: bf.a ≤ 127; */
<     c = (signed char)bf.a;
---
>   if (v) c = (signed char)bf.a;
559,561c415
<     if (v) 
<       /*@ assert Value: signed_downcast: bf.b ≤ 127; */
<       c = (signed char)bf.b;
---
>     if (v) c = (signed char)bf.b;
599,602d452
< tests/value/downcast.i:20:[value] warning: unsigned downcast. assert 0 ≤ (int)sx + (int)sy;
< tests/value/downcast.i:21:[value] warning: unsigned downcast. assert 0 ≤ x;
< tests/value/downcast.i:21:[value] warning: unsigned downcast. assert x ≤ 255;
< tests/value/downcast.i:24:[value] warning: unsigned downcast. assert uy + uz ≤ 65535;
607d456
< tests/value/downcast.i:33:[value] warning: unsigned downcast. assert j ≤ 31;
612,613d460
< tests/value/downcast.i:40:[value] warning: unsigned downcast. assert 0 ≤ v;
< tests/value/downcast.i:41:[value] warning: unsigned downcast. assert y ≤ 255;
625d471
< tests/value/downcast.i:60:[value] warning: assertion got status unknown.
630,631d475
< tests/value/downcast.i:77:[value] warning: unsigned downcast. assert 0 ≤ -12;
< tests/value/downcast.i:82:[value] warning: unsigned downcast. assert 0 ≤ -64000;
644d487
< tests/value/downcast.i:124:[value] assertion got status valid.
649,650d491
< tests/value/downcast.i:136:[value] warning: unsigned downcast. assert 0 ≤ v;
< tests/value/downcast.i:136:[value] warning: unsigned downcast. assert v ≤ 1023;
655,657d495
< tests/value/downcast.i:33:[value] assertion 'Value,unsigned_downcast' got final status invalid.
< tests/value/downcast.i:77:[value] assertion 'Value,unsigned_downcast' got final status invalid.
< tests/value/downcast.i:82:[value] assertion 'Value,unsigned_downcast' got final status invalid.
674c512,513
<     {.j; .[bits 10 to 31]} ∈ UNINITIALIZED
---
>     .j ∈ {30} or UNINITIALIZED
>     .[bits 10 to 31] ∈ UNINITIALIZED
678c517
<   y ∈ [0..255]
---
>   y ∈ [--..--]
788c627
<           s_0; u; e; b; e_0; e_1
---
>           s_0; u; e; b; e_0; b_0; e_1; b_1
810,839d648
< --- Properties of Function 'main1'
< --------------------------------------------------------------------------------
< 
< [    -    ] Assertion 'Value,unsigned_downcast' (file tests/value/downcast.i, line 20)
<             tried with Value.
< [    -    ] Assertion 'Value,unsigned_downcast' (file tests/value/downcast.i, line 21)
<             tried with Value.
< [    -    ] Assertion 'Value,unsigned_downcast' (file tests/value/downcast.i, line 21)
<             tried with Value.
< [    -    ] Assertion 'Value,unsigned_downcast' (file tests/value/downcast.i, line 24)
<             tried with Value.
< 
< --------------------------------------------------------------------------------
< --- Properties of Function 'main2_bitfield'
< --------------------------------------------------------------------------------
< 
< [  Alarm  ] Assertion 'Value,unsigned_downcast' (file tests/value/downcast.i, line 33)
<             By Value, with pending:
<              - Unreachable instruction (file tests/value/downcast.i, line 33)
< 
< --------------------------------------------------------------------------------
< --- Properties of Function 'main3_reduction'
< --------------------------------------------------------------------------------
< 
< [    -    ] Assertion 'Value,unsigned_downcast' (file tests/value/downcast.i, line 40)
<             tried with Value.
< [    -    ] Assertion 'Value,unsigned_downcast' (file tests/value/downcast.i, line 41)
<             tried with Value.
< 
< --------------------------------------------------------------------------------
851,861d659
< --- Properties of Function 'main6_val_warn_converted_signed'
< --------------------------------------------------------------------------------
< 
< [  Alarm  ] Assertion 'Value,unsigned_downcast' (file tests/value/downcast.i, line 77)
<             By Value, with pending:
<              - Unreachable instruction (file tests/value/downcast.i, line 77)
< [  Alarm  ] Assertion 'Value,unsigned_downcast' (file tests/value/downcast.i, line 82)
<             By Value, with pending:
<              - Unreachable instruction (file tests/value/downcast.i, line 82)
< 
< --------------------------------------------------------------------------------
869,877d666
< --- Properties of Function 'main10_loop'
< --------------------------------------------------------------------------------
< 
< [    -    ] Assertion 'Value,unsigned_downcast' (file tests/value/downcast.i, line 136)
<             tried with Value.
< [    -    ] Assertion 'Value,unsigned_downcast' (file tests/value/downcast.i, line 136)
<             tried with Value.
< 
< --------------------------------------------------------------------------------
881,883c670,671
<     10 To be validated
<      3 Alarms emitted
<     15 Total
---
>      2 To be validated
>      4 Total
913d700
<   /*@ assert Value: unsigned_downcast: 0 ≤ (int)sx + (int)sy; */
915,916d701
<   /*@ assert Value: unsigned_downcast: 0 ≤ x; */
<   /*@ assert Value: unsigned_downcast: x ≤ 255; */
920d704
<   /*@ assert Value: unsigned_downcast: uy + uz ≤ 65535; */
932,936c716,717
<   if (v) 
<     ss.i = (int)i;
<   if (v) 
<     /*@ assert Value: unsigned_downcast: j ≤ 31; */
<     ss.j = (unsigned int)j;
---
>   if (v) ss.i = (int)i;
>   if (v) ss.j = (unsigned int)j;
948d728
<   /*@ assert Value: unsigned_downcast: 0 ≤ v; */
950d729
<   /*@ assert Value: unsigned_downcast: y ≤ 255; */
1006d784
<     /*@ assert Value: unsigned_downcast: 0 ≤ -12; */
1013d790
<     /*@ assert Value: unsigned_downcast: 0 ≤ -64000; */
1034,1037c811,812
<   if (v) 
<     S.i2 = (int)S.i1;
<   if (v) 
<     c = (signed char)S.i1;
---
>   if (v) S.i2 = (int)S.i1;
>   if (v) c = (signed char)S.i1;
1039,1042c814,815
<   if (v) 
<     S.i2 = (int)S.i1;
<   if (v) 
<     c = (signed char)S.i1;
---
>   if (v) S.i2 = (int)S.i1;
>   if (v) c = (signed char)S.i1;
1044,1045c817
<   if (v) 
<     S.i2 = (int)S.i1;
---
>   if (v) S.i2 = (int)S.i1;
1060,1061c832
<   if (v) 
<     c = (signed char)bf.a;
---
>   if (v) c = (signed char)bf.a;
1072,1073d842
<     /*@ assert Value: unsigned_downcast: 0 ≤ v; */
<     /*@ assert Value: unsigned_downcast: v ≤ 1023; */
1075,1076c844
<     if (v) 
<       c = (signed char)bf.b;
---
>     if (v) c = (signed char)bf.b;
1114,1115d881
< tests/value/downcast.i:19:[value] warning: signed downcast. assert -128 ≤ (int)sx + (int)sy;
< tests/value/downcast.i:19:[value] warning: signed downcast. assert (int)sx + (int)sy ≤ 127;
1120d885
< tests/value/downcast.i:32:[value] warning: signed downcast. assert i ≤ 15;
1125,1126d889
< tests/value/downcast.i:38:[value] warning: signed downcast. assert -128 ≤ x_0;
< tests/value/downcast.i:38:[value] warning: signed downcast. assert x_0 ≤ 127;
1131d893
< tests/value/downcast.i:48:[value] warning: signed downcast. assert p ≤ 2147483647;
1143,1144d904
< tests/value/downcast.i:67:[value] warning: signed downcast. assert (int)65300u ≤ 32767;
< tests/value/downcast.i:83:[value] warning: signed downcast. assert -32768 ≤ (int)e_1;
1153,1155d912
< tests/value/downcast.i:109:[value] warning: signed downcast. assert (int)S.i1 ≤ 31;
< tests/value/downcast.i:110:[value] warning: signed downcast. assert (int)S.i1 ≤ 127;
< tests/value/downcast.i:114:[value] warning: signed downcast. assert (int)S.i1 ≤ 31;
1160d916
< tests/value/downcast.i:127:[value] warning: signed downcast. assert -128 ≤ (int)bf.a;
1165,1166d920
< tests/value/downcast.i:137:[value] warning: signed downcast. assert -128 ≤ (int)bf.b;
< tests/value/downcast.i:137:[value] warning: signed downcast. assert (int)bf.b ≤ 127;
1186c940
<   ss.i ∈ UNINITIALIZED
---
>   ss.i ∈ {-11} or UNINITIALIZED
1190c944
<   x_0 ∈ [-128..127]
---
>   x_0 ∈ [--..--]
1209c963
<    .i2 ∈ {-1} or UNINITIALIZED
---
>    .i2 ∈ {-1; 1} or UNINITIALIZED
1211c965
<   c ∈ {-1; 65} or UNINITIALIZED
---
>   c ∈ {-1; 1; 65} or UNINITIALIZED
1215c969
<   c ∈ UNINITIALIZED
---
>   c ∈ {112} or UNINITIALIZED
1324,1356d1077
< --- Properties of Function 'main1'
< --------------------------------------------------------------------------------
< 
< [    -    ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 19)
<             tried with Value.
< [    -    ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 19)
<             tried with Value.
< 
< --------------------------------------------------------------------------------
< --- Properties of Function 'main2_bitfield'
< --------------------------------------------------------------------------------
< 
< [  Alarm  ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 32)
<             By Value, with pending:
<              - Unreachable instruction (file tests/value/downcast.i, line 32)
< 
< --------------------------------------------------------------------------------
< --- Properties of Function 'main3_reduction'
< --------------------------------------------------------------------------------
< 
< [    -    ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 38)
<             tried with Value.
< [    -    ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 38)
<             tried with Value.
< 
< --------------------------------------------------------------------------------
< --- Properties of Function 'main4_pointer'
< --------------------------------------------------------------------------------
< 
< [    -    ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 48)
<             tried with Value.
< 
< --------------------------------------------------------------------------------
1368,1392d1088
< --- Properties of Function 'main6_val_warn_converted_signed'
< --------------------------------------------------------------------------------
< 
< [  Alarm  ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 67)
<             By Value, with pending:
<              - Unreachable instruction (file tests/value/downcast.i, line 67)
< [  Alarm  ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 83)
<             By Value, with pending:
<              - Unreachable instruction (file tests/value/downcast.i, line 83)
< 
< --------------------------------------------------------------------------------
< --- Properties of Function 'main8_bitfields'
< --------------------------------------------------------------------------------
< 
< [  Alarm  ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 109)
<             By Value, with pending:
<              - Unreachable instruction (file tests/value/downcast.i, line 109)
< [  Alarm  ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 110)
<             By Value, with pending:
<              - Unreachable instruction (file tests/value/downcast.i, line 110)
< [  Alarm  ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 114)
<             By Value, with pending:
<              - Unreachable instruction (file tests/value/downcast.i, line 114)
< 
< --------------------------------------------------------------------------------
1398,1409d1093
< [  Alarm  ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 127)
<             By Value, with pending:
<              - Unreachable instruction (file tests/value/downcast.i, line 127)
< 
< --------------------------------------------------------------------------------
< --- Properties of Function 'main10_loop'
< --------------------------------------------------------------------------------
< 
< [    -    ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 137)
<             tried with Value.
< [    -    ] Assertion 'Value,signed_downcast' (file tests/value/downcast.i, line 137)
<             tried with Value.
1415,1417c1099,1100
<      9 To be validated
<      7 Alarms emitted
<     18 Total
---
>      2 To be validated
>      4 Total
1446,1447d1128
<   /*@ assert Value: signed_downcast: -128 ≤ (int)sx + (int)sy; */
<   /*@ assert Value: signed_downcast: (int)sx + (int)sy ≤ 127; */
1464,1468c1145,1146
<   if (v) 
<     /*@ assert Value: signed_downcast: i ≤ 15; */
<     ss.i = (int)i;
<   if (v) 
<     ss.j = (unsigned int)j;
---
>   if (v) ss.i = (int)i;
>   if (v) ss.j = (unsigned int)j;
1479,1480d1156
<   /*@ assert Value: signed_downcast: -128 ≤ x_0; */
<   /*@ assert Value: signed_downcast: x_0 ≤ 127; */
1495d1170
<   /*@ assert Value: signed_downcast: p ≤ 2147483647; */
1524d1198
<     /*@ assert Value: signed_downcast: (int)65300u ≤ 32767; */
1547d1220
<     /*@ assert Value: signed_downcast: -32768 ≤ (int)e_1; */
1567,1570c1240,1241
<   if (v) 
<     S.i2 = (int)S.i1;
<   if (v) 
<     c = (signed char)S.i1;
---
>   if (v) S.i2 = (int)S.i1;
>   if (v) c = (signed char)S.i1;
1572,1577c1243,1244
<   if (v) 
<     /*@ assert Value: signed_downcast: (int)S.i1 ≤ 31; */
<     S.i2 = (int)S.i1;
<   if (v) 
<     /*@ assert Value: signed_downcast: (int)S.i1 ≤ 127; */
<     c = (signed char)S.i1;
---
>   if (v) S.i2 = (int)S.i1;
>   if (v) c = (signed char)S.i1;
1579,1581c1246
<   if (v) 
<     /*@ assert Value: signed_downcast: (int)S.i1 ≤ 31; */
<     S.i2 = (int)S.i1;
---
>   if (v) S.i2 = (int)S.i1;
1596,1598c1261
<   if (v) 
<     /*@ assert Value: signed_downcast: -128 ≤ (int)bf.a; */
<     c = (signed char)bf.a;
---
>   if (v) c = (signed char)bf.a;
1610,1613c1273
<     if (v) 
<       /*@ assert Value: signed_downcast: -128 ≤ (int)bf.b; */
<       /*@ assert Value: signed_downcast: (int)bf.b ≤ 127; */
<       c = (signed char)bf.b;
---
>     if (v) c = (signed char)bf.b;
1649,1651d1308
< [value] Called Frama_C_show_each([100000..2147483502],
<                                  [100145..2147483647],
<                                  [100145..2147483647])
1654a1312,1315
> [value] Called Frama_C_show_each([100000..2147483502],
>                                  [100145..2147483647],
>                                  [100145..2147483647])
> tests/value/downcast.i:60:[value] assertion got status valid.
diff tests/value/oracle/endian.res.oracle tests/value/oracle_legacy/endian.res.oracle
31c31,32
<   G1 ∈ {65532}
---
>   G1[bits 0 to 15] ∈ {65532}
>     [bits 16 to 31] ∈ {0}
33c34
<   G3 ∈ {252}
---
>   G3# ∈ {65532}%16, bits 0 to 7 
diff tests/value/oracle/extern.res.oracle tests/value/oracle_legacy/extern.res.oracle
22d21
< tests/value/extern.i:19:[value] warning: accessing uninitialized left-value. assert \initialized(&T3[3]);
23a23
> tests/value/extern.i:19:[value] warning: accessing uninitialized left-value. assert \initialized(&T3[3]);
diff tests/value/oracle/fptr.0.res.oracle tests/value/oracle_legacy/fptr.0.res.oracle
24c24
< tests/value/fptr.i:44:[value] warning: pointer to function with incompatible type.
---
> tests/value/fptr.i:44:[value] warning: Function pointer and pointed function have completely incompatible types.
26c26
< tests/value/fptr.i:45:[value] warning: pointer to function with incompatible type.
---
> tests/value/fptr.i:45:[value] warning: Function pointer and pointed function have completely incompatible types.
42,45d41
< [value] computing for function hh <- f <- main.
<         Called from tests/value/fptr.i:9.
< [value] Recording results for hh
< [value] Done for function hh
49a46,49
> [value] computing for function hh <- f <- main.
>         Called from tests/value/fptr.i:9.
> [value] Recording results for hh
> [value] Done for function hh
56,60c56,57
< tests/value/fptr.i:9:[value] warning: pointer to function with incompatible type. assert \valid_function(ptr);
< [value] computing for function hh <- f <- main.
<         Called from tests/value/fptr.i:9.
< [value] Recording results for hh
< [value] Done for function hh
---
> tests/value/fptr.i:9:[value] warning: Function pointer and pointed function have incompatible types.
>                  assert \valid_function(ptr);
64a62,65
> [value] computing for function hh <- f <- main.
>         Called from tests/value/fptr.i:9.
> [value] Recording results for hh
> [value] Done for function hh
71,74d71
< [value] computing for function hh <- f <- main.
<         Called from tests/value/fptr.i:9.
< [value] Recording results for hh
< [value] Done for function hh
78a76,79
> [value] computing for function hh <- f <- main.
>         Called from tests/value/fptr.i:9.
> [value] Recording results for hh
> [value] Done for function hh
82,85d82
< [value] computing for function hh <- main.
<         Called from tests/value/fptr.i:56.
< [value] Recording results for hh
< [value] Done for function hh
89a87,90
> [value] computing for function hh <- main.
>         Called from tests/value/fptr.i:56.
> [value] Recording results for hh
> [value] Done for function hh
diff tests/value/oracle/fptr.1.res.oracle tests/value/oracle_legacy/fptr.1.res.oracle
29,32d28
< [value] computing for function hh <- f <- main_uninit.
<         Called from tests/value/fptr.i:9.
< [value] Recording results for hh
< [value] Done for function hh
36a33,36
> [value] computing for function hh <- f <- main_uninit.
>         Called from tests/value/fptr.i:9.
> [value] Recording results for hh
> [value] Done for function hh
42,46c42,43
< tests/value/fptr.i:9:[value] warning: pointer to function with incompatible type. assert \valid_function(ptr);
< [value] computing for function hh <- f <- main_uninit.
<         Called from tests/value/fptr.i:9.
< [value] Recording results for hh
< [value] Done for function hh
---
> tests/value/fptr.i:9:[value] warning: Function pointer and pointed function have incompatible types.
>                  assert \valid_function(ptr);
50a48,51
> [value] computing for function hh <- f <- main_uninit.
>         Called from tests/value/fptr.i:9.
> [value] Recording results for hh
> [value] Done for function hh
56,59d56
< [value] computing for function hh <- f <- main_uninit.
<         Called from tests/value/fptr.i:9.
< [value] Recording results for hh
< [value] Done for function hh
63a61,64
> [value] computing for function hh <- f <- main_uninit.
>         Called from tests/value/fptr.i:9.
> [value] Recording results for hh
> [value] Done for function hh
82c83,94
<   NON TERMINATING FUNCTION
---
>   R ∈ {1; 2; 77}
>   n ∈ {0; 1; 2}
>   X ∈ {1; 2; 77}
>   XH ∈ {0; 1}
>   XHH ∈ {0; 1}
>   GLOBAL[0] ∈ {{ &h }}
>         [1] ∈ {{ &hh }}
>         [2] ∈ [--..--]
>         [3..9] ∈ {0}
>   G ∈ {0; 1; 2}
>   i ∈ {3}
>   j ∈ [--..--]
90d101
< [from] Non-terminating function main_uninit (no dependencies)
110c121,127
<   NON TERMINATING - NO EFFECTS
---
>   R FROM \nothing (and SELF)
>   n FROM \nothing (and SELF)
>   X FROM \nothing (and SELF)
>   XH FROM \nothing (and SELF)
>   XHH FROM \nothing (and SELF)
>   GLOBAL[0..2] FROM \nothing
>   G FROM \nothing (and SELF)
diff tests/value/oracle/fun_ptr.0.res.oracle tests/value/oracle_legacy/fun_ptr.0.res.oracle
15c15
< tests/value/fun_ptr.i:28:[value] warning: pointer to function with incompatible type.
---
> tests/value/fun_ptr.i:28:[value] warning: Function pointer and pointed function have incompatible types.
25c25
< tests/value/fun_ptr.i:33:[value] warning: pointer to function with incompatible type.
---
> tests/value/fun_ptr.i:33:[value] warning: Function pointer and pointed function have incompatible types.
27,30d26
< [value] computing for function g <- test2 <- main.
<         Called from tests/value/fun_ptr.i:33.
< [value] Recording results for g
< [value] Done for function g
34a31,34
> [value] computing for function g <- test2 <- main.
>         Called from tests/value/fun_ptr.i:33.
> [value] Recording results for g
> [value] Done for function g
39c39
< tests/value/fun_ptr.i:38:[value] warning: pointer to function with incompatible type.
---
> tests/value/fun_ptr.i:38:[value] warning: Function pointer and pointed function have completely incompatible types.
51c51,52
< tests/value/fun_ptr.i:56:[value] warning: pointer to function with incompatible type. assert \valid_function(p);
---
> tests/value/fun_ptr.i:56:[value] warning: Function pointer and pointed function have incompatible types.
>                  assert \valid_function(p);
60c61,62
< tests/value/fun_ptr.i:70:[value] warning: pointer to function with incompatible type. assert \valid_function(p);
---
> tests/value/fun_ptr.i:70:[value] warning: Function pointer and pointed function have incompatible types.
>                  assert \valid_function(p);
65c67,68
< tests/value/fun_ptr.i:73:[value] warning: pointer to function with incompatible type. assert \valid_function(p);
---
> tests/value/fun_ptr.i:73:[value] warning: Function pointer and pointed function have completely incompatible types.
>                  assert \valid_function(p);
diff tests/value/oracle/fun_ptr.1.res.oracle tests/value/oracle_legacy/fun_ptr.1.res.oracle
15c15
< tests/value/fun_ptr.i:28:[value] warning: pointer to function with incompatible type.
---
> tests/value/fun_ptr.i:28:[value] warning: Function pointer and pointed function have incompatible types.
25c25
< tests/value/fun_ptr.i:33:[value] warning: pointer to function with incompatible type.
---
> tests/value/fun_ptr.i:33:[value] warning: Function pointer and pointed function have incompatible types.
27,30d26
< [value] computing for function g <- test2 <- main.
<         Called from tests/value/fun_ptr.i:33.
< [value] Recording results for g
< [value] Done for function g
34a31,34
> [value] computing for function g <- test2 <- main.
>         Called from tests/value/fun_ptr.i:33.
> [value] Recording results for g
> [value] Done for function g
39c39
< tests/value/fun_ptr.i:38:[value] warning: pointer to function with incompatible type.
---
> tests/value/fun_ptr.i:38:[value] warning: Function pointer and pointed function have completely incompatible types.
51c51,52
< tests/value/fun_ptr.i:56:[value] warning: pointer to function with incompatible type. assert \valid_function(p);
---
> tests/value/fun_ptr.i:56:[value] warning: Function pointer and pointed function have incompatible types.
>                  assert \valid_function(p);
60c61,62
< tests/value/fun_ptr.i:70:[value] warning: pointer to function with incompatible type. assert \valid_function(p);
---
> tests/value/fun_ptr.i:70:[value] warning: Function pointer and pointed function have incompatible types.
>                  assert \valid_function(p);
65c67,68
< tests/value/fun_ptr.i:73:[value] warning: pointer to function with incompatible type. assert \valid_function(p);
---
> tests/value/fun_ptr.i:73:[value] warning: Function pointer and pointed function have completely incompatible types.
>                  assert \valid_function(p);
diff tests/value/oracle/function_return_serial_casts.res.oracle tests/value/oracle_legacy/function_return_serial_casts.res.oracle
25c25
<   l ∈ {65526}
---
>   l ∈ {-10}
diff tests/value/oracle/initialized_copy.0.res.oracle tests/value/oracle_legacy/initialized_copy.0.res.oracle
23c23,26
<         c_0 ∈ {67305985}
---
>         c_0[bits 0 to 7] ∈ {1}
>            [bits 8 to 15] ∈ {2}
>            [bits 16 to 23] ∈ {3}
>            [bits 24 to 31] ∈ {4}
25c28,31
<         a_2 ∈ {67305985}
---
>         a_2[bits 0 to 7] ∈ {1}
>            [bits 8 to 15] ∈ {2}
>            [bits 16 to 23] ∈ {3}
>            [bits 24 to 31] ∈ {4}
diff tests/value/oracle/inout_diff.res.oracle tests/value/oracle_legacy/inout_diff.res.oracle
58c58
<   c ∈ {0; 7; 14; 21; 28; 35; 42}
---
>   c ∈ {0; 7; 14; 21; 28; 35; 42; 49}
diff tests/value/oracle/label.res.oracle tests/value/oracle_legacy/label.res.oracle
15,17d14
<         (pointing to p with offsets {0}).
<         The imprecision originates from Misaligned {tests/value/label.i:18}
< tests/value/label.i:18:[value] Assigning imprecise value to *((char *)(& p) + i)
19c16
<         The imprecision originates from Misaligned {tests/value/label.i:18}
---
>         The imprecision originates from Merge {tests/value/label.i:18}
22c19
<         The imprecision originates from Misaligned {tests/value/label.i:18}
---
>         The imprecision originates from Merge {tests/value/label.i:18}
25c22
<         The imprecision originates from Misaligned {tests/value/label.i:18}
---
>         The imprecision originates from Merge {tests/value/label.i:18}
33,34c30
<   p ∈
<    {{ garbled mix of &{a; b} (origin: Misaligned {tests/value/label.i:18}) }}
---
>   p ∈ {{ garbled mix of &{a; b} (origin: Merge {tests/value/label.i:18}) }}
diff tests/value/oracle/leaf.res.oracle tests/value/oracle_legacy/leaf.res.oracle
41a42
> tests/value/leaf.i:45:[value] warning: out of bounds write. assert \valid(p);
50c51,52
<         The location is {{ alloced_return_f_int_star_int_star_int -> [0..17179869152],0%32 }}.
---
>         The location is {{ NULL -> [0..34359738360],0%8;
>                            alloced_return_f_int_star_int_star_int -> [0..17179869152],0%32 }}.
54a57
> tests/value/leaf.i:50:[value] warning: out of bounds read. assert \valid_read(pp);
57c60,61
<         The location is {{ alloced_return_f_int_star_int_star_int -> [0..34359738336],0%8 }}.
---
>         The location is a garbled mix of {alloced_return_f_int_star_int_star_int}
>         because of Library function {tests/value/leaf.i:48}.
70c74,75
<         The location is {{ alloced_return_f_int_star_int_star_int -> [0..34359738336],0%8 }}.
---
>         The location is a garbled mix of {alloced_return_f_int_star_int_star_int}
>         because of Library function {tests/value/leaf.i:48}.
diff tests/value/oracle/library.res.oracle tests/value/oracle_legacy/library.res.oracle
81,83c81,86
< tests/value/library.i:25:[value] warning: pointer to function with incompatible type. assert \valid_function(f);
< tests/value/library.i:26:[value] warning: pointer to function with incompatible type. assert \valid_function(g);
< tests/value/library.i:27:[value] warning: pointer to function with incompatible type. assert \valid_function(h);
---
> tests/value/library.i:25:[value] warning: Function pointer and pointed function have completely incompatible types.
>                  assert \valid_function(f);
> tests/value/library.i:26:[value] warning: Function pointer and pointed function have completely incompatible types.
>                  assert \valid_function(g);
> tests/value/library.i:27:[value] warning: Function pointer and pointed function have incompatible types.
>                  assert \valid_function(h);
diff tests/value/oracle/local.res.oracle tests/value/oracle_legacy/local.res.oracle
15a16
> tests/value/local.i:7:[value] warning: locals {a} escaping the scope of f through X
18d18
< tests/value/local.i:33:[value] warning: locals {a} escaping the scope of f through X
25d24
< tests/value/local.i:13:[value] warning: locals {a} escaping the scope of f through X
28a28
> tests/value/local.i:15:[value] warning: locals {d} escaping the scope of g through U
31d30
< tests/value/local.i:34:[value] warning: locals {d} escaping the scope of g through U
diff tests/value/oracle/local_slevel.res.oracle tests/value/oracle_legacy/local_slevel.res.oracle
18,27c18,27
< [value] Called Frama_C_show_each({1}, [1..79],1%2, {0; 1; 2; 3})
< [value] Called Frama_C_show_each({-1}, [0..78],0%2, {0; 1; 2; 3})
< [value] Called Frama_C_show_each({1}, [1..79],1%2, {0; 1; 2; 3; 4})
< [value] Called Frama_C_show_each({-1}, [0..78],0%2, {0; 1; 2; 3; 4})
< [value] Called Frama_C_show_each({1}, [1..79],1%2, [0..2147483647])
< [value] Called Frama_C_show_each({-1}, [0..78],0%2, [0..2147483647])
< [value] Called Frama_C_show_each({1}, [1..79],1%2, [0..2147483648])
< [value] Called Frama_C_show_each({-1}, [0..78],0%2, [0..2147483648])
< [value] Called Frama_C_show_each({1}, [1..79],1%2, [0..4294967295])
< [value] Called Frama_C_show_each({-1}, [0..78],0%2, [0..4294967295])
---
> [value] Called Frama_C_show_each({1}, [0..79], {0; 1; 2; 3})
> [value] Called Frama_C_show_each({-1}, [0..79], {0; 1; 2; 3})
> [value] Called Frama_C_show_each({1}, [0..79], {0; 1; 2; 3; 4})
> [value] Called Frama_C_show_each({-1}, [0..79], {0; 1; 2; 3; 4})
> [value] Called Frama_C_show_each({1}, [0..79], [0..2147483647])
> [value] Called Frama_C_show_each({-1}, [0..79], [0..2147483647])
> [value] Called Frama_C_show_each({1}, [0..79], [0..2147483648])
> [value] Called Frama_C_show_each({-1}, [0..79], [0..2147483648])
> [value] Called Frama_C_show_each({1}, [0..79], [0..4294967295])
> [value] Called Frama_C_show_each({-1}, [0..79], [0..4294967295])
diff tests/value/oracle/max_pointed.res.oracle tests/value/oracle_legacy/max_pointed.res.oracle
14c14
<   min ∈ {11.}
---
>   min ∈ [11. .. 42.]
diff tests/value/oracle/memexec.res.oracle tests/value/oracle_legacy/memexec.res.oracle
53a54
> tests/value/memexec.c:43:[value] warning: locals {x} escaping the scope of bug through p
56d56
< tests/value/memexec.c:157:[value] warning: locals {x} escaping the scope of bug through p
diff tests/value/oracle/misaligned_tabs.res.oracle tests/value/oracle_legacy/misaligned_tabs.res.oracle
61c61
<    [1] ∈ {0}
---
>    [1]# ∈ {1; 2}%32, bits 8 to 15 
diff tests/value/oracle/mixed_val.res.oracle tests/value/oracle_legacy/mixed_val.res.oracle
18c18
<   T[0] ∈ {-2999}
---
>   T[0]# ∈ {128073}%32, bits 0 to 15 
diff tests/value/oracle/narrow_behaviors.res.oracle tests/value/oracle_legacy/narrow_behaviors.res.oracle
40,41c40,41
<         nondet ∈ {1}
<         r{.x; .y} ∈ {2}
---
>         nondet ∈ {0}
>         r{.x; .y} ∈ {1}
46,47c46,47
<         nondet ∈ {0}
<         r{.x; .y} ∈ {1}
---
>         nondet ∈ {1}
>         r{.x; .y} ∈ {2}
52a53,57
> tests/value/narrow_behaviors.i:63:[value] function f2, behavior b: assumes got status invalid; behavior not evaluated.
> tests/value/narrow_behaviors.i:63:[value] function f2, behavior c: assumes got status invalid; behavior not evaluated.
> [value] Done for function f2
> [value] computing for function f2 <- main.
>         Called from tests/value/narrow_behaviors.i:63.
59,63d63
< [value] Done for function f2
< [value] computing for function f2 <- main.
<         Called from tests/value/narrow_behaviors.i:63.
< tests/value/narrow_behaviors.i:63:[value] function f2, behavior b: assumes got status invalid; behavior not evaluated.
< tests/value/narrow_behaviors.i:63:[value] function f2, behavior c: assumes got status invalid; behavior not evaluated.
diff tests/value/oracle/nonlin.res.oracle tests/value/oracle_legacy/nonlin.res.oracle
13,14c13,14
< tests/value/nonlin.c:18:[value:nonlin] non-linear 'i1 * i1', lv 'i1'
< tests/value/nonlin.c:18:[value:nonlin] non-linear '(i2 + (long long)3) * (i2 + (long long)3)', lv 'i2'
---
> tests/value/nonlin.c:18:[value:nonlin] non-linear 'i1 * i1 + (i2 + (long long)3) * (i2 + (long long)3)', lv 'i1'
> tests/value/nonlin.c:18:[value:nonlin] non-linear 'i1 * i1 + (i2 + (long long)3) * (i2 + (long long)3)', lv 'i2'
16d15
< tests/value/nonlin.c:23:[value:nonlin] non-linear '(int)idx * (int)idx', lv 'idx'
28c27
<   r ∈ [-2..2147614724]
---
>   r ∈ [-1073709050..2147614724]
diff tests/value/oracle/origin.0.res.oracle tests/value/oracle_legacy/origin.0.res.oracle
111,112d110
< tests/value/origin.i:46:[value] Assigning imprecise value to pm1.
<         The imprecision originates from Misaligned {tests/value/origin.i:46}
144a143,146
> tests/value/origin.i:87:[value] warning: locals {arg} escaping the scope of local_escape_1 through esc1
> tests/value/origin.i:87:[value] warning: locals {local1} escaping the scope of local_escape_1 through esc2
> tests/value/origin.i:87:[value] warning: locals {arg} escaping the scope of local_escape_1 through esc3
> tests/value/origin.i:87:[value] warning: locals {local1} escaping the scope of local_escape_1 through esc4
147,150d148
< tests/value/origin.i:106:[value] warning: locals {arg} escaping the scope of local_escape_1 through esc1
< tests/value/origin.i:106:[value] warning: locals {local1} escaping the scope of local_escape_1 through esc2
< tests/value/origin.i:106:[value] warning: locals {arg} escaping the scope of local_escape_1 through esc3
< tests/value/origin.i:106:[value] warning: locals {local1} escaping the scope of local_escape_1 through esc4
diff tests/value/oracle/postcondition.res.oracle tests/value/oracle_legacy/postcondition.res.oracle
36d35
< tests/value/postcondition.i:12:[value] warning: function get_index: postcondition got status unknown.
37a37
> tests/value/postcondition.i:12:[value] warning: function get_index: postcondition got status unknown.
diff tests/value/oracle/precise_locations.res.oracle tests/value/oracle_legacy/precise_locations.res.oracle
338c338,339
<   q ∈ [--..--]
---
>   q[bits 0 to 7] ∈ [--..--]
>    [bits 8 to 31]# ∈ {0; 10; 20}%32, bits 8 to 31 
diff tests/value/oracle/ptr_call_object.res.oracle tests/value/oracle_legacy/ptr_call_object.res.oracle
12,18d11
< [value] computing for function next_0 <- main.
<         Called from tests/value/ptr_call_object.c:34.
< [value] Called Frama_C_show_each_p_in_next_0({{ &o0 }},
<                                              .next ∈ {{ &next_0 }}
<                                              .i ∈ UNINITIALIZED)
< [value] Recording results for next_0
< [value] Done for function next_0
25a19,25
> [value] computing for function next_0 <- main.
>         Called from tests/value/ptr_call_object.c:34.
> [value] Called Frama_C_show_each_p_in_next_0({{ &o0 }},
>                                              .next ∈ {{ &next_0 }}
>                                              .i ∈ UNINITIALIZED)
> [value] Recording results for next_0
> [value] Done for function next_0
diff tests/value/oracle/ptr_relation.2.res.oracle tests/value/oracle_legacy/ptr_relation.2.res.oracle
20,23d19
< [value] computing for function g2 <- main2.
<         Called from tests/value/ptr_relation.i:38.
< [value] Recording results for g2
< [value] Done for function g2
27a24,27
> [value] computing for function g2 <- main2.
>         Called from tests/value/ptr_relation.i:38.
> [value] Recording results for g2
> [value] Done for function g2
diff tests/value/oracle/recursion.1.res.oracle tests/value/oracle_legacy/recursion.1.res.oracle
18,19c18,104
< tests/value/recursion.i:8:[value] user error: Recursive call to a function.
< [kernel] Plug-in value aborted: invalid user input.
---
> [value] user error: Recursive call on an unspecified function. Using potentially invalid
>                     inferred assigns 'assigns \result \from \nothing;'
> [value] using specification for function ff
> [value] Recording results for ff
> [value] Done for function ff
> [value] computing for function g <- main.
>         Called from tests/value/recursion.i:68.
> tests/value/recursion.i:39:[value] warning: recursive call during value analysis
>                  of g (g <- g :: tests/value/recursion.i:68 <- main).
>                  Using specification of g.
> [value] user error: Recursive call on an unspecified function. Using potentially invalid
>                     inferred assigns 'assigns \nothing'
> [value] using specification for function g
> [value] Recording results for g
> [value] Done for function g
> [value] computing for function h <- main.
>         Called from tests/value/recursion.i:70.
> tests/value/recursion.i:44:[value] warning: recursive call during value analysis
>                  of h (h <- h :: tests/value/recursion.i:70 <- main).
>                  Using specification of h.
> [value] user error: Recursive call on an unspecified function. Using potentially invalid
>                     inferred assigns 'assigns *p1 \from *p1, *p2; assigns *p2 \from *p1, *p2;'
> [value] using specification for function h
> [value] Recording results for h
> [value] Done for function h
> [value] Called Frama_C_show_each([-2147483648..2147483647], [-2147483648..2147483647])
> [value] computing for function escaping_formal <- main.
>         Called from tests/value/recursion.i:72.
> tests/value/recursion.i:52:[value] function escaping_formal: precondition got status valid.
> [value] Called Frama_C_show_each({{ &i }}, {10}, {0}, {10})
> tests/value/recursion.i:59:[value] warning: recursive call during value analysis
>                  of escaping_formal (escaping_formal <- escaping_formal :: tests/value/recursion.i:72 <-
>                                                         main).
>                  Using specification of escaping_formal.
> [value] using specification for function escaping_formal
> tests/value/recursion.i:52:[value] warning: function escaping_formal: precondition got status unknown.
> tests/value/recursion.i:54:[value] warning: function escaping_formal: postcondition got status unknown.
> [value] Called Frama_C_show_each({{ &i }},
>                                  [-2147483648..2147483647],
>                                  {0},
>                                  [-2147483648..2147483647])
> tests/value/recursion.i:54:[value] function escaping_formal: postcondition got status valid.
> [value] Recording results for escaping_formal
> [value] Done for function escaping_formal
> [value] computing for function f <- main.
>         Called from tests/value/recursion.i:73.
> [value] Called Frama_C_show_each({2}, {0})
> tests/value/recursion.i:30:[value] warning: recursive call during value analysis
>                  of f (f <- f :: tests/value/recursion.i:73 <- main).
>                  Using specification of f.
> [value] using specification for function f
> [value] Called Frama_C_show_each([-2147483648..2147483647], {0})
> [value] Recording results for f
> [value] Done for function f
> [value] Called Frama_C_show_each([-2147483648..2147483647])
> tests/value/recursion.i:75:[value] warning: signed overflow. assert r.f1 + 1 ≤ 2147483647;
> [value] Recording results for main
> [value] done for function main
> [value] ====== VALUES COMPUTED ======
> tests/value/recursion.i:59:[inout] warning: During inout context analysis of escaping_formal:
>                  ignoring probable recursive call.
> [value:final-states] Values at end of function escaping_formal:
>   pg ∈ {0}
> tests/value/recursion.i:30:[inout] warning: During inout context analysis of f:
>                  ignoring probable recursive call.
> [value:final-states] Values at end of function f:
>   x ∈ [--..--]
>   s ∈ [--..--]
> tests/value/recursion.i:8:[inout] warning: During inout context analysis of ff:
>                  ignoring probable recursive call.
> [value:final-states] Values at end of function ff:
>   __retres ∈ {5}
> tests/value/recursion.i:39:[inout] warning: During inout context analysis of g:
>                  ignoring probable recursive call.
> [value:final-states] Values at end of function g:
>   
> tests/value/recursion.i:44:[inout] warning: During inout context analysis of h:
>                  ignoring probable recursive call.
> [value:final-states] Values at end of function h:
>   
> [value:final-states] Values at end of function main:
>   G ∈ {5}
>   x ∈ [--..--]
>   s ∈ [--..--]
>   pg ∈ {0}
>   r ∈ [--..--]
>   __retres ∈ [-2147483647..2147483647]
diff tests/value/oracle/reduce_by_valid.res.oracle tests/value/oracle_legacy/reduce_by_valid.res.oracle
100,101c100,101
< [value] Called Frama_C_show_each_main10_3({{ &t_0 + [-2..34] }})
< tests/value/reduce_by_valid.i:188:[value] assertion got status valid.
---
> [value] Called Frama_C_show_each_main10_3({{ &t_0 + [-2147483648..2147483647] }})
> tests/value/reduce_by_valid.i:188:[value] warning: assertion got status unknown.
diff tests/value/oracle/reduce_formals.res.oracle tests/value/oracle_legacy/reduce_formals.res.oracle
44c44
< [value] Called Frama_C_show_each_v({10; 11; 12; 13; 14; 15})
---
> [value] Called Frama_C_show_each_v([-2147483648..15])
50c50
< [value] Called Frama_C_show_each_v({16; 17; 18; 19; 20})
---
> [value] Called Frama_C_show_each_v([16..2147483647])
73c73
< [value] Called Frama_C_show_each_6({3})
---
> [value] Called Frama_C_show_each_6({4; 5; 6; 7; 8; 9; 10})
101c101
<   g ∈ {3}
---
>   g ∈ {4; 5; 6; 7; 8; 9; 10}
103c103
<   g ∈ {3}
---
>   g ∈ {4; 5; 6; 7; 8; 9; 10}
diff tests/value/oracle/reduce_index.res.oracle tests/value/oracle_legacy/reduce_index.res.oracle
131c131
<   c11 ∈ {0; 1; 2; 3}
---
>   c11 ∈ {0; 1; 2; 3; 4; 5; 6}
236c236
<   c11 ∈ {0; 1; 2; 3}
---
>   c11 ∈ {0; 1; 2; 3; 4; 5; 6}
diff tests/value/oracle/relation_reduction.res.oracle tests/value/oracle_legacy/relation_reduction.res.oracle
30c30
<   y ∈ [-2147483648..2147483637]
---
>   y ∈ [--..--]
32c32
<   R1 ∈ [-2147483648..2147483637]
---
>   R1 ∈ [--..--]
diff tests/value/oracle/relations.res.oracle tests/value/oracle_legacy/relations.res.oracle
51,52c51
<   u[0] ∈ [-2147483648..2147483646]
<    [1] ∈ [--..--]
---
>   u[0..1] ∈ [--..--]
60c59
<   R3 ∈ [-2147483648..2147483646]
---
>   R3 ∈ [--..--]
diff tests/value/oracle/relations2.res.oracle tests/value/oracle_legacy/relations2.res.oracle
53c53
<         t ∈ [0..511]
---
>         t ∈ [0..512]
71c71
<         t ∈ [0..511]
---
>         t ∈ [0..512]
87c87
<         t ∈ [0..511]
---
>         t ∈ [0..512]
103c103
<         t ∈ [0..511]
---
>         t ∈ [0..512]
diff tests/value/oracle/replace_by_show_each.res.oracle tests/value/oracle_legacy/replace_by_show_each.res.oracle
23c23
<   j ∈ [-2147483648..2147483646]
---
>   j ∈ [--..--]
diff tests/value/oracle/shift.0.res.oracle tests/value/oracle_legacy/shift.0.res.oracle
54c54
<   z ∈ [-2147483648..2147483615]
---
>   z ∈ [--..--]
diff tests/value/oracle/shift.1.res.oracle tests/value/oracle_legacy/shift.1.res.oracle
61c61
<   z ∈ [-2147483648..2147483631]
---
>   z ∈ [--..--]
diff tests/value/oracle/sizeof.res.oracle tests/value/oracle_legacy/sizeof.res.oracle
45c45,46
<   p ∈ {{ &s1 + [-36..36] }}
---
>   p ∈
>    {{ garbled mix of &{s1} (origin: Arithmetic {tests/value/sizeof.i:32}) }}
diff tests/value/oracle/split_return.0.res.oracle tests/value/oracle_legacy/split_return.0.res.oracle
33d32
< [value] Called Frama_C_show_each_f2({0}, {0})
34a34
> [value] Called Frama_C_show_each_f2({0}, {0})
69d68
< [value] Called Frama_C_show_each_f5({-2}, {0})
70a70
> [value] Called Frama_C_show_each_f5({-2}, {0})
diff tests/value/oracle/split_return.1.res.oracle tests/value/oracle_legacy/split_return.1.res.oracle
36d35
< [value] Called Frama_C_show_each_f2({0}, {0})
37a37
> [value] Called Frama_C_show_each_f2({0}, {0})
49d48
< [value] Called Frama_C_show_each_f3({-2}, {0})
50a50
> [value] Called Frama_C_show_each_f3({-2}, {0})
61d60
< [value] Called Frama_C_show_each_f4({4}, {0})
62a62
> [value] Called Frama_C_show_each_f4({4}, {0})
73d72
< [value] Called Frama_C_show_each_f5({-2}, {0})
74a74
> [value] Called Frama_C_show_each_f5({-2}, {0})
105d104
< [value] Called Frama_C_show_each_then8({-1}, {0})
106a106
> [value] Called Frama_C_show_each_then8({-1}, {0})
diff tests/value/oracle/split_return.3.res.oracle tests/value/oracle_legacy/split_return.3.res.oracle
108d107
< [value] Called Frama_C_show_each_f5({-2}, {0})
109a109
> [value] Called Frama_C_show_each_f5({-2}, {0})
157d156
< [value] Called Frama_C_show_each_then8({4}, {{ &x }})
158a158
> [value] Called Frama_C_show_each_then8({4}, {{ &x }})
167d166
< [value] Called Frama_C_show_each_then8({4}, {{ &x }})
168a168
> [value] Called Frama_C_show_each_then8({4}, {{ &x }})
177d176
< [value] Called Frama_C_show_each_then8({4}, {{ &x }})
178a178
> [value] Called Frama_C_show_each_then8({4}, {{ &x }})
187d186
< [value] Called Frama_C_show_each_then8({4}, {{ &x }})
188a188
> [value] Called Frama_C_show_each_then8({4}, {{ &x }})
diff tests/value/oracle/split_return.4.res.oracle tests/value/oracle_legacy/split_return.4.res.oracle
111d110
< [value] Called Frama_C_show_each_f5({-2}, {0})
112a112
> [value] Called Frama_C_show_each_f5({-2}, {0})
160d159
< [value] Called Frama_C_show_each_then8({4}, {{ &x }})
161a161
> [value] Called Frama_C_show_each_then8({4}, {{ &x }})
170d169
< [value] Called Frama_C_show_each_then8({4}, {{ &x }})
171a171
> [value] Called Frama_C_show_each_then8({4}, {{ &x }})
180d179
< [value] Called Frama_C_show_each_then8({4}, {{ &x }})
181a181
> [value] Called Frama_C_show_each_then8({4}, {{ &x }})
190d189
< [value] Called Frama_C_show_each_then8({4}, {{ &x }})
191a191
> [value] Called Frama_C_show_each_then8({4}, {{ &x }})
424d423
< [value] Called Frama_C_show_each_f2({0}, {0})
425a425
> [value] Called Frama_C_show_each_f2({0}, {0})
495d494
< [value] Called Frama_C_show_each_f5({-2}, {0})
496a496
> [value] Called Frama_C_show_each_f5({-2}, {0})
541d540
< [value] Called Frama_C_show_each_then8({4}, {{ &x }})
542a542
> [value] Called Frama_C_show_each_then8({4}, {{ &x }})
551d550
< [value] Called Frama_C_show_each_then8({4}, {{ &x }})
552a552
> [value] Called Frama_C_show_each_then8({4}, {{ &x }})
561d560
< [value] Called Frama_C_show_each_then8({4}, {{ &x }})
562a562
> [value] Called Frama_C_show_each_then8({4}, {{ &x }})
571d570
< [value] Called Frama_C_show_each_then8({4}, {{ &x }})
572a572
> [value] Called Frama_C_show_each_then8({4}, {{ &x }})
diff tests/value/oracle/struct2.res.oracle tests/value/oracle_legacy/struct2.res.oracle
46a47
> tests/value/struct2.i:76:[value] warning: signed overflow. assert i + j ≤ 2147483647;
49d49
< tests/value/struct2.i:76:[value] warning: signed overflow. assert i + j ≤ 2147483647;
51a52
> tests/value/struct2.i:82:[value] warning: signed overflow. assert tab2[i] + j ≤ 2147483647;
62a64
> tests/value/struct2.i:185:[value] warning: signed overflow. assert i + j ≤ 2147483647;
65,66d66
< tests/value/struct2.i:185:[value] warning: accessing out of bounds index. assert 0 ≤ k;
< tests/value/struct2.i:185:[value] warning: accessing out of bounds index. assert k < 2;
69,70d68
< tests/value/struct2.i:185:[value] warning: accessing out of bounds index. assert 0 ≤ (int)(tab3[l] + m);
< tests/value/struct2.i:185:[value] warning: accessing out of bounds index. assert (int)(tab3[l] + m) < 10;
72a71,74
> tests/value/struct2.i:185:[value] warning: accessing out of bounds index. assert 0 ≤ (int)(tab3[l] + m);
> tests/value/struct2.i:185:[value] warning: accessing out of bounds index. assert (int)(tab3[l] + m) < 10;
> tests/value/struct2.i:185:[value] warning: accessing out of bounds index. assert 0 ≤ k;
> tests/value/struct2.i:185:[value] warning: accessing out of bounds index. assert k < 2;
diff tests/value/oracle/test.0.res.oracle tests/value/oracle_legacy/test.0.res.oracle
15d14
< tests/value/test.i:11:[value] warning: signed overflow. assert j + ecart ≤ 2147483647;
24c23
<   j ∈ [-1073741822..1]
---
>   j ∈ [-1073741823..1]
diff tests/value/oracle/unknown_sizeof.0.res.oracle tests/value/oracle_legacy/unknown_sizeof.0.res.oracle
12a13
> tests/value/unknown_sizeof.i:19:[kernel] imprecise size for variable __retres (abstract type 'struct s')
17d17
< tests/value/unknown_sizeof.i:15:[value] warning: out of bounds read. assert \valid_read(&__retres);
diff tests/value/oracle/unop.res.oracle tests/value/oracle_legacy/unop.res.oracle
11,12c11,12
< [value] Called Frama_C_show_each_1_then([-2147483648. .. -3.])
< [value] Called Frama_C_show_each_1_else([-2.99999976158 .. 2147483648.])
---
> [value] Called Frama_C_show_each_1_then([-2147483648. .. 2147483648.])
> [value] Called Frama_C_show_each_1_else([-2147483648. .. 2147483648.])
19,20c19,20
< [value] Called Frama_C_show_each_2_then([-2147483647..-3])
< [value] Called Frama_C_show_each_2_else([-2..2147483647])
---
> [value] Called Frama_C_show_each_2_then([-2147483648..2147483647])
> [value] Called Frama_C_show_each_2_else([-2147483648..2147483647])
diff tests/value/oracle/val9.res.oracle tests/value/oracle_legacy/val9.res.oracle
54c54,55
<   b7 ∈ {1}
---
>   b7[bits 0 to 7] ∈ {1}
>     [bits 8 to 31]# ∈ {97}%32, bits 8 to 31 
diff tests/value/oracle/volatile.res.oracle tests/value/oracle_legacy/volatile.res.oracle
93a94
> tests/value/volatile.c:114:[value] warning: signed overflow. assert v + 1 ≤ 2147483647;
103a105,106
> tests/value/volatile.c:114:[value] warning: accessing out of bounds index. assert 0 ≤ v;
> tests/value/volatile.c:114:[value] warning: accessing out of bounds index. assert v < 2;
110a114,115
> tests/value/volatile.c:114:[value] warning: accessing out of bounds index. assert 0 ≤ v;
> tests/value/volatile.c:114:[value] warning: accessing out of bounds index. assert v < 2;
118a124
> tests/value/volatile.c:118:[value] warning: signed overflow. assert *v_ptr + 1 ≤ 2147483647;
128a135,136
> tests/value/volatile.c:118:[value] warning: accessing out of bounds index. assert 0 ≤ *v_ptr;
> tests/value/volatile.c:118:[value] warning: accessing out of bounds index. assert *v_ptr < 2;
135a144,145
> tests/value/volatile.c:118:[value] warning: accessing out of bounds index. assert 0 ≤ *v_ptr;
> tests/value/volatile.c:118:[value] warning: accessing out of bounds index. assert *v_ptr < 2;
143a154
> tests/value/volatile.c:125:[value] warning: signed overflow. assert svol.f[0] + 1 ≤ 2147483647;
153a165,166
> tests/value/volatile.c:125:[value] warning: accessing out of bounds index. assert 0 ≤ svol.f[0];
> tests/value/volatile.c:125:[value] warning: accessing out of bounds index. assert svol.f[0] < 2;
160a174,175
> tests/value/volatile.c:125:[value] warning: accessing out of bounds index. assert 0 ≤ svol.f[0];
> tests/value/volatile.c:125:[value] warning: accessing out of bounds index. assert svol.f[0] < 2;
168a184
> tests/value/volatile.c:129:[value] warning: signed overflow. assert svol_ptr->f[0] + 1 ≤ 2147483647;
178a195,196
> tests/value/volatile.c:129:[value] warning: accessing out of bounds index. assert 0 ≤ svol_ptr->f[0];
> tests/value/volatile.c:129:[value] warning: accessing out of bounds index. assert svol_ptr->f[0] < 2;
185a204,205
> tests/value/volatile.c:129:[value] warning: accessing out of bounds index. assert 0 ≤ svol_ptr->f[0];
> tests/value/volatile.c:129:[value] warning: accessing out of bounds index. assert svol_ptr->f[0] < 2;
193a214
> tests/value/volatile.c:136:[value] warning: signed overflow. assert sdeepvol.g[0] + 1 ≤ 2147483647;
203a225,226
> tests/value/volatile.c:136:[value] warning: accessing out of bounds index. assert 0 ≤ sdeepvol.g[0];
> tests/value/volatile.c:136:[value] warning: accessing out of bounds index. assert sdeepvol.g[0] < 2;
210a234,235
> tests/value/volatile.c:136:[value] warning: accessing out of bounds index. assert 0 ≤ sdeepvol.g[0];
> tests/value/volatile.c:136:[value] warning: accessing out of bounds index. assert sdeepvol.g[0] < 2;
218a244
> tests/value/volatile.c:140:[value] warning: signed overflow. assert volt[0].f[0] + 1 ≤ 2147483647;
228a255,256
> tests/value/volatile.c:140:[value] warning: accessing out of bounds index. assert 0 ≤ volt[0].f[0];
> tests/value/volatile.c:140:[value] warning: accessing out of bounds index. assert volt[0].f[0] < 2;
235a264,265
> tests/value/volatile.c:140:[value] warning: accessing out of bounds index. assert 0 ≤ volt[0].f[0];
> tests/value/volatile.c:140:[value] warning: accessing out of bounds index. assert volt[0].f[0] < 2;
243a274
> tests/value/volatile.c:144:[value] warning: signed overflow. assert deepvolt[0].g[0] + 1 ≤ 2147483647;
253a285,286
> tests/value/volatile.c:144:[value] warning: accessing out of bounds index. assert 0 ≤ deepvolt[0].g[0];
> tests/value/volatile.c:144:[value] warning: accessing out of bounds index. assert deepvolt[0].g[0] < 2;
258a292,293
> tests/value/volatile.c:144:[value] warning: accessing out of bounds index. assert 0 ≤ deepvolt[0].g[0];
> tests/value/volatile.c:144:[value] warning: accessing out of bounds index. assert deepvolt[0].g[0] < 2;
diff tests/value/oracle/widen_on_non_monotonic.res.oracle tests/value/oracle_legacy/widen_on_non_monotonic.res.oracle
21a22
> tests/value/widen_on_non_monotonic.i:26:[value] entering loop for the first time
