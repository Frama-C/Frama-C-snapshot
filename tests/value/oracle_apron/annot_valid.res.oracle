[kernel] Parsing share/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/value/annot_valid.i (no preprocessing)
[value] Analyzing a complete application starting at main
[value] Computing initial state
[value] Initial state computed
[value] Values of globals at initialization
  G ∈ {0}
tests/value/annot_valid.i:8:[value] assertion got status valid.
tests/value/annot_valid.i:11:[value] warning: assertion got status invalid (stopping propagation).
tests/value/annot_valid.i:14:[value] assertion got status valid.
tests/value/annot_valid.i:17:[value] assertion got status valid.
tests/value/annot_valid.i:20:[value] assertion got status valid.
tests/value/annot_valid.i:23:[value] warning: assertion got status invalid (stopping propagation).
tests/value/annot_valid.i:26:[value] warning: assertion got status invalid (stopping propagation).
tests/value/annot_valid.i:29:[value] warning: assertion got status unknown.
tests/value/annot_valid.i:32:[value] warning: assertion got status invalid (stopping propagation).
tests/value/annot_valid.i:35:[value] assertion got status valid.
tests/value/annot_valid.i:38:[value] warning: assertion got status unknown.
tests/value/annot_valid.i:41:[value] assertion got status valid.
tests/value/annot_valid.i:44:[value] warning: assertion got status invalid (stopping propagation).
tests/value/annot_valid.i:47:[value] assertion got status valid.
tests/value/annot_valid.i:50:[value] warning: assertion got status invalid (stopping propagation).
tests/value/annot_valid.i:53:[value] assertion got status valid.
tests/value/annot_valid.i:56:[value] assertion got status valid.
tests/value/annot_valid.i:57:[value] cannot evaluate ACSL term, \at() on a C label is unsupported
tests/value/annot_valid.i:57:[value] warning: assertion got status unknown.
tests/value/annot_valid.i:62:[value] warning: assertion got status invalid (stopping propagation).
[value] Recording results for main
[value] done for function main
[value] ====== VALUES COMPUTED ======
[value] Values at end of function main:
  p ∈ {{ &G }}
  c ∈ {{ (char *)&G }}
  __retres ∈ {0}
[from] Computing for function main
[from] Done for function main
[from] ====== DEPENDENCIES COMPUTED ======
       These dependencies hold at termination for the executions that terminate:
[from] Function main:
  \result FROM \nothing
[from] ====== END OF DEPENDENCIES ======
[inout] Out (internal) for function main:
          p; c; __retres
[inout] Inputs for function main:
          \nothing
