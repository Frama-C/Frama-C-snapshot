[kernel] Parsing share/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/value/for_loops.c (with preprocessing)
[value] Analyzing a complete application starting at main
[value] Computing initial state
[value] Initial state computed
[value] Values of globals at initialization
  Frama_C_entropy_source ∈ [--..--]
  x ∈ {0}
[value] computing for function Frama_C_interval <- main.
        Called from tests/value/for_loops.c:24.
[value] using specification for function Frama_C_interval
share/libc/__fc_builtin.h:50:[value] function Frama_C_interval: precondition got status valid.
[value] Done for function Frama_C_interval
tests/value/for_loops.c:27:[value] entering loop for the first time
tests/value/for_loops.c:29:[value] entering loop for the first time
[value] Called Frama_C_show_each_F({0})
[value] Called Frama_C_show_each_F({0; 1})
[value] Called Frama_C_show_each_F({0; 1; 2})
[value] Called Frama_C_show_each_F([0..2147483647])
tests/value/for_loops.c:27:[kernel] warning: signed overflow. assert j+1 ≤ 2147483647;
[value] Recording results for main
[value] done for function main
[value] ====== VALUES COMPUTED ======
[value] Values at end of function main:
  Frama_C_entropy_source ∈ [--..--]
  j ∈ [1..2147483647]
  nSelectors ∈ [0..2147483646]
  w ∈ {0}
  v ∈ {0}
[from] Computing for function main
[from] Computing for function Frama_C_interval <-main
[from] Done for function Frama_C_interval
[from] Done for function main
[from] ====== DEPENDENCIES COMPUTED ======
       These dependencies hold at termination for the executions that terminate:
[from] Function Frama_C_interval:
  Frama_C_entropy_source FROM Frama_C_entropy_source (and SELF)
  \result FROM Frama_C_entropy_source; min; max
[from] Function main:
  Frama_C_entropy_source FROM Frama_C_entropy_source (and SELF)
[from] ====== END OF DEPENDENCIES ======
[inout] Out (internal) for function main:
          Frama_C_entropy_source; j; nSelectors; w; v
[inout] Inputs for function main:
          Frama_C_entropy_source
