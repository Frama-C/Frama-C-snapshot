[kernel] Parsing tests/value/traces/test3.i (no preprocessing)
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  g ∈ {0}
[eva] Recording results for main
[eva] done for function main
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function main:
  g ∈ {4}
  tmp ∈ {4}
  __retres ∈ {5}
[eva:d-traces] Trace domains:
 start: 0; globals = g; main_formals = c;
 {[ 0 -> initialize variable: g -> 1
    1 -> initialize variable using type Main_Formal
c -> 2
    2 -> EnterScope: __retres -> 3
    3 -> EnterScope: tmp -> 4
    4 -> initialize variable: tmp -> 5
    5 -> Assign: tmp = 4 -> 6
    6 -> Assume: tmp true -> 7
    7 -> Assign: g = tmp -> 8
    8 -> Assign: __retres = g + 1 -> 9
    9 -> EnterScope: \result<main> -> 10
    10 -> Assign: \result<main> = __retres -> 11 ]} at 11
[from] Computing for function main
[from] Done for function main
[from] ====== DEPENDENCIES COMPUTED ======
  These dependencies hold at termination for the executions that terminate:
[from] Function main:
  g FROM \nothing
  \result FROM \nothing
[from] ====== END OF DEPENDENCIES ======
[inout] Out (internal) for function main:
    g; tmp; __retres
[inout] Inputs for function main:
    g
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  g ∈ {0}
[eva] done for function main
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function main:
  g ∈ {4}
  __traces_domain_return ∈ {5}
/* Generated by Frama-C */
int g;
int main(int c)
{
  int __traces_domain_return;
  {
    int __retres;
    {
      int tmp;
      tmp = 4;
      /*@ assert tmp ≢ 0;  */
      g = tmp;
      __retres = g + 1;
      {
        int _result_main_;
        _result_main_ = __retres;
        __traces_domain_return = __retres;
      }
    }
  }
  return __traces_domain_return;
}


