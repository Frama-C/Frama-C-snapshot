Only in tests/float/oracle: absorb.0.err.oracle
Only in tests/float/oracle: absorb.0.res.oracle
Only in tests/float/oracle: absorb.1.err.oracle
Only in tests/float/oracle: absorb.1.res.oracle
Only in tests/float/oracle_legacy: absorb.err.oracle
Only in tests/float/oracle_legacy: absorb.res.oracle
Only in tests/float/oracle: absorb_sav.err
Only in tests/float/oracle: absorb_sav.res
Only in tests/float/oracle: absorb_sav2.err
Only in tests/float/oracle: absorb_sav2.res
diff tests/float/oracle/builtins.res.oracle tests/float/oracle_legacy/builtins.res.oracle
130d129
< tests/float/builtins.c:26:[value] warning: non-finite double value. assert \is_finite(d);
133a133
> tests/float/builtins.c:26:[value] warning: non-finite double value. assert \is_finite(d);
138,139d137
< tests/float/builtins.c:26:[value] warning: non-finite double value. assert \is_finite(tmp);
<                                           (tmp from Frama_C_log(d))
265,266d262
< tests/float/builtins.c:26:[value] warning: non-finite double value. assert \is_finite(tmp);
<                                           (tmp from Frama_C_log(d))
diff tests/float/oracle/cond_cast_int_to_float.res.oracle tests/float/oracle_legacy/cond_cast_int_to_float.res.oracle
13c13
< tests/float/cond_cast_int_to_float.c:3:[value] function assert: precondition got status valid.
---
> tests/float/cond_cast_int_to_float.c:3:[value] warning: function assert: precondition got status unknown.
15c15
< [value] Called Frama_C_show_each_then({18}, [31..10000])
---
> [value] Called Frama_C_show_each_then({18}, [-10000..10000])
19c19
< [value] Called Frama_C_show_each_else({18}, [-10000..30])
---
> [value] Called Frama_C_show_each_else({18}, [-10000..10000])
23c23
< [value] Called Frama_C_show_each_then({19}, [31..10000])
---
> [value] Called Frama_C_show_each_then({19}, [-10000..10000])
27c27
< [value] Called Frama_C_show_each_else({19}, [-10000..30])
---
> [value] Called Frama_C_show_each_else({19}, [-10000..10000])
31c31
< [value] Called Frama_C_show_each_then({20}, [30..10000])
---
> [value] Called Frama_C_show_each_then({20}, [-10000..10000])
35c35
< [value] Called Frama_C_show_each_else({20}, [-10000..29])
---
> [value] Called Frama_C_show_each_else({20}, [-10000..10000])
39c39
< [value] Called Frama_C_show_each_then({22}, [-30..10000])
---
> [value] Called Frama_C_show_each_then({22}, [-10000..10000])
43c43
< [value] Called Frama_C_show_each_else({22}, [-10000..-31])
---
> [value] Called Frama_C_show_each_else({22}, [-10000..10000])
47c47
< [value] Called Frama_C_show_each_then({23}, [-30..10000])
---
> [value] Called Frama_C_show_each_then({23}, [-10000..10000])
51c51
< [value] Called Frama_C_show_each_else({23}, [-10000..-31])
---
> [value] Called Frama_C_show_each_else({23}, [-10000..10000])
55c55
< [value] Called Frama_C_show_each_then({24}, [-29..10000])
---
> [value] Called Frama_C_show_each_then({24}, [-10000..10000])
59c59
< [value] Called Frama_C_show_each_else({24}, [-10000..-30])
---
> [value] Called Frama_C_show_each_else({24}, [-10000..10000])
diff tests/float/oracle/const.res.oracle tests/float/oracle_legacy/const.res.oracle
198a199,200
>   if2 ∈ {0; 1}
>   if3 ∈ {0; 1}
200,201c202,203
<   ite2 ∈ {2}
<   ite3 ∈ {2}
---
>   ite2 ∈ {1; 2}
>   ite3 ∈ {1; 2}
280a283,284
>   if2 FROM \nothing (and SELF)
>   if3 FROM \nothing (and SELF)
294,295c298,299
<           s6; s7; s8; if1; ite1; ite2; ite3; ca1; ca2; ca3; ca4; tmp; tmp_0; 
<           tmp_1; tmp_2; tmp_3; tmp_4; tmp_5; tmp_6; tmp_7
---
>           s6; s7; s8; if1; if2; if3; ite1; ite2; ite3; ca1; ca2; ca3; ca4; tmp;
>           tmp_0; tmp_1; tmp_2; tmp_3; tmp_4; tmp_5; tmp_6; tmp_7
diff tests/float/oracle/nonlin.1.res.oracle tests/float/oracle_legacy/nonlin.1.res.oracle
127c127
< tests/float/nonlin.c:61:[value:nonlin] non-linear 'i * i', lv 'i'
---
> tests/float/nonlin.c:61:[value:nonlin] non-linear '1 + t[(int)(i * i + 2.0)]', lv 'i'
130c130
< tests/float/nonlin.c:62:[value:nonlin] non-linear 's - s', lv 's'
---
> tests/float/nonlin.c:62:[value:nonlin] non-linear '(int)(10000.0 * (s - s))', lv 's'
151c151
< tests/float/nonlin.c:75:[value:nonlin] non-linear '(double)ff * (double)ff', lv 'ff'
---
> tests/float/nonlin.c:75:[value:nonlin] non-linear '(double)1 / ((double)ff * (double)ff + 0.000000001)', lv 'ff'
158,159c158,159
< tests/float/nonlin.c:81:[value:nonlin] non-linear '(double)v1 * (double)v1', lv 'v1'
< tests/float/nonlin.c:81:[value:nonlin] non-linear '(double)v2 * (double)v2', lv 'v2'
---
> tests/float/nonlin.c:81:[value:nonlin] non-linear '(double)v1 * (double)v1 + (double)v2 * (double)v2', lv 'v2'
> tests/float/nonlin.c:81:[value:nonlin] non-linear '(double)v1 * (double)v1 + (double)v2 * (double)v2', lv 'v1'
180c180
<   square ∈ [-0x0.0000000000000p-1022 .. 0x1.fffffc0000020p256]
---
>   square ∈ [-0x1.fffffc0000020p255 .. 0x1.fffffc0000020p256]
234c234
<   square ∈ [-0. .. 2.31584150868e+77]
---
>   square ∈ [-1.15792075434e+77 .. 2.31584150868e+77]
diff tests/float/oracle/nonlin.3.res.oracle tests/float/oracle_legacy/nonlin.3.res.oracle
127c127
< tests/float/nonlin.c:61:[value:nonlin] non-linear 'i * i', lv 'i'
---
> tests/float/nonlin.c:61:[value:nonlin] non-linear '1 + t[(int)((double)(i * i) + 2.0)]', lv 'i'
130c130
< tests/float/nonlin.c:62:[value:nonlin] non-linear 's - s', lv 's'
---
> tests/float/nonlin.c:62:[value:nonlin] non-linear '(int)(10000.0 * (double)(s - s))', lv 's'
151c151
< tests/float/nonlin.c:75:[value:nonlin] non-linear '(double)ff * (double)ff', lv 'ff'
---
> tests/float/nonlin.c:75:[value:nonlin] non-linear '(double)1 / ((double)ff * (double)ff + 0.000000001)', lv 'ff'
158,159c158,159
< tests/float/nonlin.c:81:[value:nonlin] non-linear '(double)v1 * (double)v1', lv 'v1'
< tests/float/nonlin.c:81:[value:nonlin] non-linear '(double)v2 * (double)v2', lv 'v2'
---
> tests/float/nonlin.c:81:[value:nonlin] non-linear '(double)v1 * (double)v1 + (double)v2 * (double)v2', lv 'v2'
> tests/float/nonlin.c:81:[value:nonlin] non-linear '(double)v1 * (double)v1 + (double)v2 * (double)v2', lv 'v1'
180c180
<   square ∈ [-0x0.0000000000000p-1022 .. 0x1.fffffc0000020p256]
---
>   square ∈ [-0x1.fffffc0000020p255 .. 0x1.fffffc0000020p256]
234c234
<   square ∈ [-0. .. 2.31584150868e+77]
---
>   square ∈ [-1.15792075434e+77 .. 2.31584150868e+77]
